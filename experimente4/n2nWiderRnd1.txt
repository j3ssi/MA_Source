no display found. Using non-interactive Agg backend
[5, 5, 5]
[8, 16, 32]
Pytorch Training main.py; workers: 6; numOfStages: 3; layerinBlock: 2;widthofFirstLayer: 16; Epochen: 180; reset: False; start epoche: 1; test: True pathtoModell: ./output/experimente4/n2nRnd_/model.nn; checkpoint: ./output/experimente4/n2nWiderRnd1; saveModell: True; LR: 0.1
random number: 7522
Files already downloaded and verified

width: 8
module: Conv2d(3, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
module: BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
module: ReLU(inplace=True)
module: Sequential(
  (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
conv gefunden
(i,j): (3, 3
module: Sequential(
  (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
conv gefunden
(i,j): (4, 3
module: Sequential(
  (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
conv gefunden
(i,j): (5, 3
module: Sequential(
  (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
conv gefunden
(i,j): (6, 3
module: Sequential(
  (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
conv gefunden
(i,j): (7, 3
module: Sequential(
  (0): Conv2d(8, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
module: Sequential(
  (0): Conv2d(8, 16, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
module: AdaptiveAvgPool2d(output_size=(1, 1))
module: Linear(in_features=32, out_features=10, bias=True)
width: 16
module: Conv2d(3, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
module: BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
module: ReLU(inplace=True)
module: Sequential(
  (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
module: Sequential(
  (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
module: Sequential(
  (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
module: Sequential(
  (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
module: Sequential(
  (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
module: Sequential(
  (0): Conv2d(8, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
conv gefunden
module: Sequential(
  (0): Conv2d(8, 16, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
conv gefunden
(i,j): (9, 0
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
conv gefunden
(i,j): (10, 3
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
conv gefunden
(i,j): (11, 3
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
conv gefunden
(i,j): (12, 3
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
conv gefunden
(i,j): (13, 3
module: Sequential(
  (0): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
module: AdaptiveAvgPool2d(output_size=(1, 1))
module: Linear(in_features=32, out_features=10, bias=True)
width: 32
module: Conv2d(3, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
module: BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
module: ReLU(inplace=True)
module: Sequential(
  (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
module: Sequential(
  (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
module: Sequential(
  (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
module: Sequential(
  (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
module: Sequential(
  (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
module: Sequential(
  (0): Conv2d(8, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
module: Sequential(
  (0): Conv2d(8, 16, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 8
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
conv gefunden
module: Sequential(
  (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
conv gefunden
(i,j): (15, 0
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
conv gefunden
(i,j): (16, 3
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
conv gefunden
(i,j): (17, 3
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
conv gefunden
(i,j): (18, 3
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
conv gefunden
(i,j): (19, 3
module: AdaptiveAvgPool2d(output_size=(1, 1))
module: Linear(in_features=32, out_features=10, bias=True)
stagesI: {8: [(3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0)], 16: [(10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0)], 32: [(16, 0), (17, 0), (18, 0), (19, 0), (21, None)]}
stagesO: {8: [(0, None), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3)], 16: [(8, 3), (9, 0), (10, 3), (11, 3), (12, 3), (13, 3)], 32: [(14, 3), (15, 0), (16, 3), (17, 3), (18, 3), (19, 3)]}
Modell Erstellung
N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): Sequential(
      (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (4): Sequential(
      (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (5): Sequential(
      (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (6): Sequential(
      (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (7): Sequential(
      (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (8): Sequential(
      (0): Conv2d(8, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (9): Sequential(
      (0): Conv2d(8, 16, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (10): Sequential(
      (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (11): Sequential(
      (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (12): Sequential(
      (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (13): Sequential(
      (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (14): Sequential(
      (0): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (15): Sequential(
      (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (16): Sequential(
      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (17): Sequential(
      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (18): Sequential(
      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (19): Sequential(
      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (20): AdaptiveAvgPool2d(output_size=(1, 1))
    (21): Linear(in_features=32, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
device count: 4
Startepoche: 1
deeper epoch: 0
Epoche: [1/180]; Lr: 0.1
batch Size 256
befor train
/home/jessica.buehler/venv/lib/python3.6/site-packages/torch/cuda/memory.py:234: FutureWarning: torch.cuda.reset_max_memory_allocated now calls torch.cuda.reset_peak_memory_stats, which resets /all/ peak memory stats.
  FutureWarning)
Epoch: [1][0/196]	Time 0.126 (0.126)	Data 0.194 (0.194)	Loss 2.4817 (2.4817)	Acc@1 11.719 (11.719)	Acc@5 51.172 (51.172)
Epoch: [1][64/196]	Time 0.070 (0.071)	Data 0.000 (0.003)	Loss 1.7743 (2.0160)	Acc@1 29.688 (23.468)	Acc@5 83.203 (76.707)
Epoch: [1][128/196]	Time 0.071 (0.071)	Data 0.000 (0.002)	Loss 1.6686 (1.8610)	Acc@1 37.500 (29.473)	Acc@5 90.625 (82.283)
Epoch: [1][192/196]	Time 0.065 (0.071)	Data 0.000 (0.001)	Loss 1.6038 (1.7784)	Acc@1 37.891 (32.946)	Acc@5 84.375 (84.733)
after train
n1: 1 for:
wAcc: 42.66
test acc: 42.66
Epoche: [2/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [2][0/196]	Time 0.102 (0.102)	Data 0.201 (0.201)	Loss 1.4951 (1.4951)	Acc@1 43.359 (43.359)	Acc@5 92.188 (92.188)
Epoch: [2][64/196]	Time 0.070 (0.073)	Data 0.000 (0.003)	Loss 1.4829 (1.4758)	Acc@1 46.875 (45.619)	Acc@5 91.797 (91.905)
Epoch: [2][128/196]	Time 0.085 (0.074)	Data 0.000 (0.002)	Loss 1.2536 (1.4176)	Acc@1 52.734 (48.110)	Acc@5 94.141 (92.778)
Epoch: [2][192/196]	Time 0.068 (0.073)	Data 0.000 (0.001)	Loss 1.2254 (1.3648)	Acc@1 52.344 (50.010)	Acc@5 96.875 (93.410)
after train
n1: 2 for:
wAcc: 42.66
test acc: 51.3
Epoche: [3/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [3][0/196]	Time 0.105 (0.105)	Data 0.230 (0.230)	Loss 1.2374 (1.2374)	Acc@1 53.516 (53.516)	Acc@5 94.141 (94.141)
Epoch: [3][64/196]	Time 0.065 (0.072)	Data 0.000 (0.004)	Loss 1.1766 (1.1807)	Acc@1 58.594 (57.993)	Acc@5 94.141 (95.252)
Epoch: [3][128/196]	Time 0.069 (0.072)	Data 0.000 (0.002)	Loss 1.0466 (1.1355)	Acc@1 62.891 (59.284)	Acc@5 96.484 (95.703)
Epoch: [3][192/196]	Time 0.067 (0.072)	Data 0.000 (0.001)	Loss 1.0164 (1.1023)	Acc@1 64.062 (60.531)	Acc@5 94.922 (96.005)
after train
n1: 3 for:
wAcc: 46.98
test acc: 58.53
Epoche: [4/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [4][0/196]	Time 0.106 (0.106)	Data 0.200 (0.200)	Loss 0.8563 (0.8563)	Acc@1 68.750 (68.750)	Acc@5 99.219 (99.219)
Epoch: [4][64/196]	Time 0.075 (0.078)	Data 0.000 (0.003)	Loss 0.9764 (1.0032)	Acc@1 67.578 (64.447)	Acc@5 95.312 (96.653)
Epoch: [4][128/196]	Time 0.069 (0.075)	Data 0.000 (0.002)	Loss 0.8153 (0.9707)	Acc@1 71.094 (65.625)	Acc@5 98.047 (96.860)
Epoch: [4][192/196]	Time 0.070 (0.075)	Data 0.000 (0.001)	Loss 0.7758 (0.9471)	Acc@1 74.219 (66.536)	Acc@5 98.438 (97.017)
after train
n1: 4 for:
wAcc: 51.0816
test acc: 64.64
Epoche: [5/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [5][0/196]	Time 0.111 (0.111)	Data 0.240 (0.240)	Loss 0.8320 (0.8320)	Acc@1 71.875 (71.875)	Acc@5 96.484 (96.484)
Epoch: [5][64/196]	Time 0.082 (0.077)	Data 0.000 (0.004)	Loss 0.8296 (0.8577)	Acc@1 71.875 (69.681)	Acc@5 98.047 (97.518)
Epoch: [5][128/196]	Time 0.066 (0.076)	Data 0.000 (0.002)	Loss 0.7113 (0.8523)	Acc@1 73.828 (69.916)	Acc@5 98.438 (97.571)
Epoch: [5][192/196]	Time 0.070 (0.077)	Data 0.000 (0.001)	Loss 0.7844 (0.8374)	Acc@1 71.094 (70.402)	Acc@5 98.047 (97.654)
after train
n1: 5 for:
wAcc: 54.793333333333344
test acc: 62.26
Epoche: [6/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [6][0/196]	Time 0.111 (0.111)	Data 0.261 (0.261)	Loss 0.7974 (0.7974)	Acc@1 71.875 (71.875)	Acc@5 98.047 (98.047)
Epoch: [6][64/196]	Time 0.083 (0.080)	Data 0.000 (0.004)	Loss 0.7931 (0.7911)	Acc@1 71.484 (72.314)	Acc@5 97.266 (98.107)
Epoch: [6][128/196]	Time 0.088 (0.079)	Data 0.000 (0.002)	Loss 0.8061 (0.7845)	Acc@1 71.484 (72.523)	Acc@5 97.656 (97.965)
Epoch: [6][192/196]	Time 0.082 (0.078)	Data 0.000 (0.002)	Loss 0.6846 (0.7702)	Acc@1 77.734 (73.025)	Acc@5 98.438 (98.039)
after train
n1: 6 for:
wAcc: 55.958750520616405
test acc: 67.86
Epoche: [7/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [7][0/196]	Time 0.113 (0.113)	Data 0.295 (0.295)	Loss 0.6935 (0.6935)	Acc@1 75.391 (75.391)	Acc@5 98.438 (98.438)
Epoch: [7][64/196]	Time 0.074 (0.077)	Data 0.000 (0.005)	Loss 0.7372 (0.7228)	Acc@1 73.047 (74.730)	Acc@5 97.656 (98.371)
Epoch: [7][128/196]	Time 0.082 (0.077)	Data 0.000 (0.003)	Loss 0.6519 (0.7241)	Acc@1 76.562 (74.806)	Acc@5 98.828 (98.265)
Epoch: [7][192/196]	Time 0.083 (0.076)	Data 0.000 (0.002)	Loss 0.6427 (0.7258)	Acc@1 79.297 (74.731)	Acc@5 98.047 (98.207)
after train
n1: 7 for:
wAcc: 58.0831640625
test acc: 69.51
Epoche: [8/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [8][0/196]	Time 0.115 (0.115)	Data 0.328 (0.328)	Loss 0.7958 (0.7958)	Acc@1 73.828 (73.828)	Acc@5 97.266 (97.266)
Epoch: [8][64/196]	Time 0.087 (0.078)	Data 0.000 (0.005)	Loss 0.5956 (0.6930)	Acc@1 78.516 (76.082)	Acc@5 99.219 (98.534)
Epoch: [8][128/196]	Time 0.071 (0.077)	Data 0.000 (0.003)	Loss 0.6542 (0.6967)	Acc@1 78.125 (76.023)	Acc@5 98.438 (98.431)
Epoch: [8][192/196]	Time 0.077 (0.078)	Data 0.000 (0.002)	Loss 0.7111 (0.6891)	Acc@1 72.656 (76.285)	Acc@5 98.438 (98.425)
after train
n1: 8 for:
wAcc: 59.75230300259106
test acc: 66.77
Epoche: [9/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [9][0/196]	Time 0.132 (0.132)	Data 0.358 (0.358)	Loss 0.6113 (0.6113)	Acc@1 80.859 (80.859)	Acc@5 98.828 (98.828)
Epoch: [9][64/196]	Time 0.097 (0.079)	Data 0.000 (0.006)	Loss 0.6084 (0.6708)	Acc@1 77.344 (76.911)	Acc@5 98.828 (98.558)
Epoch: [9][128/196]	Time 0.083 (0.078)	Data 0.000 (0.003)	Loss 0.6861 (0.6670)	Acc@1 76.953 (76.986)	Acc@5 98.828 (98.507)
Epoch: [9][192/196]	Time 0.066 (0.079)	Data 0.000 (0.002)	Loss 0.5854 (0.6701)	Acc@1 79.297 (76.813)	Acc@5 99.609 (98.518)
after train
n1: 9 for:
wAcc: 60.30428275200001
test acc: 72.42
Epoche: [10/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [10][0/196]	Time 0.132 (0.132)	Data 0.270 (0.270)	Loss 0.6632 (0.6632)	Acc@1 74.609 (74.609)	Acc@5 98.438 (98.438)
Epoch: [10][64/196]	Time 0.088 (0.087)	Data 0.000 (0.004)	Loss 0.5617 (0.6448)	Acc@1 80.859 (77.500)	Acc@5 98.828 (98.690)
Epoch: [10][128/196]	Time 0.078 (0.084)	Data 0.000 (0.002)	Loss 0.5317 (0.6447)	Acc@1 84.766 (77.513)	Acc@5 98.828 (98.619)
Epoch: [10][192/196]	Time 0.087 (0.085)	Data 0.000 (0.002)	Loss 0.5754 (0.6449)	Acc@1 78.125 (77.481)	Acc@5 98.438 (98.618)
after train
n1: 10 for:
wAcc: 61.74838730176053
test acc: 58.0
Epoche: [11/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [11][0/196]	Time 0.134 (0.134)	Data 0.321 (0.321)	Loss 0.5262 (0.5262)	Acc@1 82.422 (82.422)	Acc@5 100.000 (100.000)
Epoch: [11][64/196]	Time 0.096 (0.089)	Data 0.000 (0.005)	Loss 0.6039 (0.6259)	Acc@1 78.516 (78.221)	Acc@5 98.828 (98.690)
Epoch: [11][128/196]	Time 0.085 (0.087)	Data 0.000 (0.003)	Loss 0.5807 (0.6280)	Acc@1 80.078 (78.170)	Acc@5 99.609 (98.643)
Epoch: [11][192/196]	Time 0.082 (0.086)	Data 0.000 (0.002)	Loss 0.5545 (0.6223)	Acc@1 78.516 (78.433)	Acc@5 99.219 (98.690)
after train
n1: 11 for:
wAcc: 60.36838321973594
test acc: 70.98
Epoche: [12/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [12][0/196]	Time 0.149 (0.149)	Data 0.306 (0.306)	Loss 0.4923 (0.4923)	Acc@1 82.031 (82.031)	Acc@5 98.828 (98.828)
Epoch: [12][64/196]	Time 0.092 (0.085)	Data 0.000 (0.005)	Loss 0.6106 (0.6020)	Acc@1 76.562 (79.249)	Acc@5 100.000 (98.894)
Epoch: [12][128/196]	Time 0.074 (0.084)	Data 0.000 (0.003)	Loss 0.6936 (0.6024)	Acc@1 78.125 (79.145)	Acc@5 98.438 (98.867)
Epoch: [12][192/196]	Time 0.066 (0.085)	Data 0.000 (0.002)	Loss 0.6115 (0.6062)	Acc@1 80.859 (78.959)	Acc@5 99.219 (98.834)
after train
n1: 12 for:
wAcc: 61.43227460444057
test acc: 73.32
Epoche: [13/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [13][0/196]	Time 0.138 (0.138)	Data 0.282 (0.282)	Loss 0.6322 (0.6322)	Acc@1 78.516 (78.516)	Acc@5 100.000 (100.000)
Epoch: [13][64/196]	Time 0.067 (0.085)	Data 0.000 (0.005)	Loss 0.6892 (0.6233)	Acc@1 75.000 (78.329)	Acc@5 98.828 (98.588)
Epoch: [13][128/196]	Time 0.078 (0.085)	Data 0.000 (0.002)	Loss 0.5657 (0.6123)	Acc@1 80.469 (78.831)	Acc@5 98.828 (98.640)
Epoch: [13][192/196]	Time 0.087 (0.085)	Data 0.000 (0.002)	Loss 0.6374 (0.6084)	Acc@1 73.828 (78.939)	Acc@5 98.047 (98.713)
after train
n1: 13 for:
wAcc: 62.55352824584745
test acc: 73.17
Epoche: [14/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [14][0/196]	Time 0.158 (0.158)	Data 0.274 (0.274)	Loss 0.6014 (0.6014)	Acc@1 78.516 (78.516)	Acc@5 98.828 (98.828)
Epoch: [14][64/196]	Time 0.115 (0.087)	Data 0.000 (0.004)	Loss 0.6884 (0.5966)	Acc@1 74.219 (79.111)	Acc@5 98.438 (98.792)
Epoch: [14][128/196]	Time 0.077 (0.087)	Data 0.000 (0.002)	Loss 0.5325 (0.5973)	Acc@1 80.078 (79.221)	Acc@5 99.219 (98.749)
Epoch: [14][192/196]	Time 0.087 (0.086)	Data 0.000 (0.002)	Loss 0.5876 (0.5951)	Acc@1 80.078 (79.347)	Acc@5 98.828 (98.771)
after train
n1: 14 for:
wAcc: 63.38473832839019
test acc: 74.89
Epoche: [15/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [15][0/196]	Time 0.159 (0.159)	Data 0.317 (0.317)	Loss 0.4266 (0.4266)	Acc@1 85.547 (85.547)	Acc@5 100.000 (100.000)
Epoch: [15][64/196]	Time 0.064 (0.087)	Data 0.000 (0.005)	Loss 0.4231 (0.5731)	Acc@1 87.109 (80.517)	Acc@5 99.609 (98.762)
Epoch: [15][128/196]	Time 0.088 (0.087)	Data 0.000 (0.003)	Loss 0.5662 (0.5770)	Acc@1 80.078 (80.154)	Acc@5 98.047 (98.768)
Epoch: [15][192/196]	Time 0.077 (0.086)	Data 0.000 (0.002)	Loss 0.6247 (0.5766)	Acc@1 78.906 (80.244)	Acc@5 99.219 (98.759)
after train
n1: 15 for:
wAcc: 64.25008166766509
test acc: 62.23
Epoche: [16/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [16][0/196]	Time 0.191 (0.191)	Data 0.374 (0.374)	Loss 0.5190 (0.5190)	Acc@1 82.812 (82.812)	Acc@5 100.000 (100.000)
Epoch: [16][64/196]	Time 0.088 (0.088)	Data 0.000 (0.006)	Loss 0.5391 (0.5704)	Acc@1 81.641 (80.072)	Acc@5 99.219 (99.044)
Epoch: [16][128/196]	Time 0.078 (0.086)	Data 0.000 (0.003)	Loss 0.5760 (0.5726)	Acc@1 81.250 (80.105)	Acc@5 99.609 (98.952)
Epoch: [16][192/196]	Time 0.084 (0.085)	Data 0.000 (0.002)	Loss 0.3977 (0.5702)	Acc@1 86.328 (80.175)	Acc@5 100.000 (98.962)
after train
n1: 16 for:
wAcc: 63.44778236235666
test acc: 74.0
Epoche: [17/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [17][0/196]	Time 0.132 (0.132)	Data 0.344 (0.344)	Loss 0.5920 (0.5920)	Acc@1 77.734 (77.734)	Acc@5 99.609 (99.609)
Epoch: [17][64/196]	Time 0.082 (0.085)	Data 0.000 (0.006)	Loss 0.5901 (0.5557)	Acc@1 83.203 (80.931)	Acc@5 98.438 (99.014)
Epoch: [17][128/196]	Time 0.075 (0.085)	Data 0.000 (0.003)	Loss 0.6474 (0.5648)	Acc@1 78.906 (80.672)	Acc@5 98.047 (98.961)
Epoch: [17][192/196]	Time 0.080 (0.085)	Data 0.000 (0.002)	Loss 0.5417 (0.5668)	Acc@1 81.641 (80.623)	Acc@5 98.828 (98.911)
after train
n1: 17 for:
wAcc: 64.1451916361832
test acc: 72.99
Epoche: [18/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [18][0/196]	Time 0.139 (0.139)	Data 0.345 (0.345)	Loss 0.5238 (0.5238)	Acc@1 83.203 (83.203)	Acc@5 99.219 (99.219)
Epoch: [18][64/196]	Time 0.076 (0.085)	Data 0.000 (0.006)	Loss 0.5818 (0.5572)	Acc@1 81.641 (80.637)	Acc@5 97.656 (98.960)
Epoch: [18][128/196]	Time 0.083 (0.085)	Data 0.000 (0.003)	Loss 0.6002 (0.5513)	Acc@1 81.250 (80.747)	Acc@5 98.828 (99.049)
Epoch: [18][192/196]	Time 0.075 (0.086)	Data 0.000 (0.002)	Loss 0.6084 (0.5542)	Acc@1 79.688 (80.685)	Acc@5 99.219 (99.022)
after train
n1: 18 for:
wAcc: 64.60385827018492
test acc: 73.14
Epoche: [19/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [19][0/196]	Time 0.135 (0.135)	Data 0.319 (0.319)	Loss 0.5717 (0.5717)	Acc@1 79.297 (79.297)	Acc@5 98.828 (98.828)
Epoch: [19][64/196]	Time 0.081 (0.084)	Data 0.000 (0.005)	Loss 0.3997 (0.5519)	Acc@1 88.672 (80.589)	Acc@5 99.609 (98.948)
Epoch: [19][128/196]	Time 0.075 (0.085)	Data 0.000 (0.003)	Loss 0.4231 (0.5480)	Acc@1 84.375 (80.932)	Acc@5 99.609 (98.980)
Epoch: [19][192/196]	Time 0.085 (0.084)	Data 0.000 (0.002)	Loss 0.5271 (0.5509)	Acc@1 83.594 (80.916)	Acc@5 99.219 (98.933)
after train
n1: 19 for:
wAcc: 64.9991786651824
test acc: 72.06
Epoche: [20/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [20][0/196]	Time 0.135 (0.135)	Data 0.308 (0.308)	Loss 0.4626 (0.4626)	Acc@1 83.594 (83.594)	Acc@5 99.219 (99.219)
Epoch: [20][64/196]	Time 0.075 (0.087)	Data 0.000 (0.005)	Loss 0.5888 (0.5269)	Acc@1 77.344 (81.857)	Acc@5 98.828 (99.020)
Epoch: [20][128/196]	Time 0.081 (0.087)	Data 0.000 (0.003)	Loss 0.4871 (0.5363)	Acc@1 83.594 (81.516)	Acc@5 99.219 (98.967)
Epoch: [20][192/196]	Time 0.086 (0.086)	Data 0.000 (0.002)	Loss 0.5206 (0.5405)	Acc@1 85.156 (81.388)	Acc@5 98.828 (98.994)
after train
n1: 20 for:
wAcc: 65.22855698727058
test acc: 61.81
Epoche: [21/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [21][0/196]	Time 0.129 (0.129)	Data 0.434 (0.434)	Loss 0.5482 (0.5482)	Acc@1 83.594 (83.594)	Acc@5 98.438 (98.438)
Epoch: [21][64/196]	Time 0.090 (0.085)	Data 0.000 (0.007)	Loss 0.5503 (0.5344)	Acc@1 80.078 (81.502)	Acc@5 98.438 (98.990)
Epoch: [21][128/196]	Time 0.077 (0.085)	Data 0.000 (0.004)	Loss 0.6270 (0.5324)	Acc@1 76.172 (81.510)	Acc@5 99.609 (98.992)
Epoch: [21][192/196]	Time 0.069 (0.085)	Data 0.000 (0.002)	Loss 0.5339 (0.5341)	Acc@1 80.469 (81.495)	Acc@5 99.219 (99.004)
after train
n1: 21 for:
wAcc: 64.49497456267862
test acc: 78.94
Epoche: [22/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [22][0/196]	Time 0.188 (0.188)	Data 0.354 (0.354)	Loss 0.3866 (0.3866)	Acc@1 89.062 (89.062)	Acc@5 98.828 (98.828)
Epoch: [22][64/196]	Time 0.092 (0.086)	Data 0.000 (0.006)	Loss 0.6010 (0.5251)	Acc@1 78.906 (82.194)	Acc@5 99.219 (99.026)
Epoch: [22][128/196]	Time 0.082 (0.085)	Data 0.000 (0.003)	Loss 0.5681 (0.5251)	Acc@1 80.859 (81.962)	Acc@5 99.609 (99.101)
Epoch: [22][192/196]	Time 0.076 (0.085)	Data 0.000 (0.002)	Loss 0.4683 (0.5286)	Acc@1 84.766 (81.902)	Acc@5 99.609 (99.069)
after train
n1: 22 for:
wAcc: 65.38418944472761
test acc: 65.61
Epoche: [23/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [23][0/196]	Time 0.127 (0.127)	Data 0.290 (0.290)	Loss 0.4289 (0.4289)	Acc@1 84.766 (84.766)	Acc@5 100.000 (100.000)
Epoch: [23][64/196]	Time 0.082 (0.085)	Data 0.000 (0.005)	Loss 0.5064 (0.5249)	Acc@1 84.375 (81.833)	Acc@5 99.609 (99.050)
Epoch: [23][128/196]	Time 0.087 (0.084)	Data 0.000 (0.003)	Loss 0.5485 (0.5330)	Acc@1 81.641 (81.544)	Acc@5 98.828 (98.998)
Epoch: [23][192/196]	Time 0.089 (0.085)	Data 0.000 (0.002)	Loss 0.6237 (0.5299)	Acc@1 80.469 (81.610)	Acc@5 98.828 (99.028)
after train
n1: 23 for:
wAcc: 65.0221671252692
test acc: 64.77
Epoche: [24/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [24][0/196]	Time 0.128 (0.128)	Data 0.360 (0.360)	Loss 0.5343 (0.5343)	Acc@1 80.078 (80.078)	Acc@5 98.828 (98.828)
Epoch: [24][64/196]	Time 0.108 (0.085)	Data 0.000 (0.006)	Loss 0.5577 (0.5261)	Acc@1 80.078 (81.611)	Acc@5 99.219 (99.014)
Epoch: [24][128/196]	Time 0.084 (0.087)	Data 0.000 (0.003)	Loss 0.5426 (0.5254)	Acc@1 78.516 (81.789)	Acc@5 99.219 (98.986)
Epoch: [24][192/196]	Time 0.079 (0.086)	Data 0.000 (0.002)	Loss 0.4945 (0.5205)	Acc@1 84.766 (81.918)	Acc@5 98.047 (99.031)
after train
n1: 24 for:
wAcc: 64.65606582478306
test acc: 69.03
Epoche: [25/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [25][0/196]	Time 0.153 (0.153)	Data 0.297 (0.297)	Loss 0.4641 (0.4641)	Acc@1 86.328 (86.328)	Acc@5 98.438 (98.438)
Epoch: [25][64/196]	Time 0.087 (0.086)	Data 0.000 (0.005)	Loss 0.4967 (0.5246)	Acc@1 82.812 (81.947)	Acc@5 99.609 (99.050)
Epoch: [25][128/196]	Time 0.078 (0.087)	Data 0.000 (0.003)	Loss 0.4980 (0.5148)	Acc@1 80.859 (82.367)	Acc@5 99.219 (99.052)
Epoch: [25][192/196]	Time 0.090 (0.086)	Data 0.000 (0.002)	Loss 0.5399 (0.5153)	Acc@1 81.641 (82.343)	Acc@5 99.609 (99.071)
after train
n1: 25 for:
wAcc: 64.67724265094043
test acc: 69.86
Epoche: [26/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [26][0/196]	Time 0.137 (0.137)	Data 0.320 (0.320)	Loss 0.5155 (0.5155)	Acc@1 83.594 (83.594)	Acc@5 100.000 (100.000)
Epoch: [26][64/196]	Time 0.085 (0.084)	Data 0.000 (0.005)	Loss 0.5299 (0.5103)	Acc@1 83.594 (82.536)	Acc@5 98.828 (99.165)
Epoch: [26][128/196]	Time 0.092 (0.085)	Data 0.000 (0.003)	Loss 0.4306 (0.5109)	Acc@1 83.984 (82.210)	Acc@5 99.219 (99.137)
Epoch: [26][192/196]	Time 0.089 (0.085)	Data 0.000 (0.002)	Loss 0.6526 (0.5121)	Acc@1 78.906 (82.282)	Acc@5 99.219 (99.156)
after train
n1: 26 for:
wAcc: 64.75963773048986
test acc: 61.64
Epoche: [27/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [27][0/196]	Time 0.131 (0.131)	Data 0.380 (0.380)	Loss 0.5352 (0.5352)	Acc@1 81.250 (81.250)	Acc@5 98.828 (98.828)
Epoch: [27][64/196]	Time 0.074 (0.086)	Data 0.000 (0.006)	Loss 0.4905 (0.5194)	Acc@1 81.641 (82.067)	Acc@5 99.219 (98.996)
Epoch: [27][128/196]	Time 0.091 (0.085)	Data 0.000 (0.003)	Loss 0.4502 (0.5149)	Acc@1 85.938 (82.255)	Acc@5 98.828 (99.067)
Epoch: [27][192/196]	Time 0.068 (0.084)	Data 0.000 (0.002)	Loss 0.5023 (0.5114)	Acc@1 80.469 (82.321)	Acc@5 99.609 (99.081)
after train
n1: 27 for:
wAcc: 64.24582042442535
test acc: 73.65
Epoche: [28/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [28][0/196]	Time 0.117 (0.117)	Data 0.310 (0.310)	Loss 0.4300 (0.4300)	Acc@1 85.938 (85.938)	Acc@5 98.828 (98.828)
Epoch: [28][64/196]	Time 0.083 (0.087)	Data 0.000 (0.005)	Loss 0.4050 (0.5041)	Acc@1 85.547 (82.476)	Acc@5 100.000 (99.069)
Epoch: [28][128/196]	Time 0.099 (0.087)	Data 0.000 (0.003)	Loss 0.4899 (0.4959)	Acc@1 82.422 (82.806)	Acc@5 99.219 (99.161)
Epoch: [28][192/196]	Time 0.089 (0.086)	Data 0.000 (0.002)	Loss 0.4600 (0.4990)	Acc@1 85.938 (82.808)	Acc@5 99.219 (99.180)
after train
n1: 28 for:
wAcc: 64.63226888807584
test acc: 74.98
Epoche: [29/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [29][0/196]	Time 0.118 (0.118)	Data 0.380 (0.380)	Loss 0.4282 (0.4282)	Acc@1 87.500 (87.500)	Acc@5 99.609 (99.609)
Epoch: [29][64/196]	Time 0.088 (0.086)	Data 0.000 (0.006)	Loss 0.5997 (0.5112)	Acc@1 77.734 (82.308)	Acc@5 98.828 (99.093)
Epoch: [29][128/196]	Time 0.076 (0.085)	Data 0.000 (0.003)	Loss 0.4455 (0.4963)	Acc@1 83.594 (82.973)	Acc@5 100.000 (99.158)
Epoch: [29][192/196]	Time 0.089 (0.085)	Data 0.000 (0.002)	Loss 0.4935 (0.4978)	Acc@1 82.812 (82.926)	Acc@5 99.609 (99.154)
after train
n1: 29 for:
wAcc: 65.05776767573933
test acc: 76.37
Epoche: [30/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [30][0/196]	Time 0.138 (0.138)	Data 0.315 (0.315)	Loss 0.4628 (0.4628)	Acc@1 83.984 (83.984)	Acc@5 99.609 (99.609)
Epoch: [30][64/196]	Time 0.071 (0.085)	Data 0.000 (0.005)	Loss 0.4241 (0.4864)	Acc@1 86.719 (83.047)	Acc@5 99.609 (99.135)
Epoch: [30][128/196]	Time 0.079 (0.086)	Data 0.000 (0.003)	Loss 0.4776 (0.4905)	Acc@1 83.203 (82.985)	Acc@5 99.609 (99.098)
Epoch: [30][192/196]	Time 0.075 (0.086)	Data 0.000 (0.002)	Loss 0.4669 (0.4992)	Acc@1 84.375 (82.689)	Acc@5 98.438 (99.093)
after train
n1: 30 for:
wAcc: 65.52060579032785
test acc: 76.74
Epoche: [31/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [31][0/196]	Time 0.140 (0.140)	Data 0.367 (0.367)	Loss 0.5686 (0.5686)	Acc@1 81.250 (81.250)	Acc@5 98.828 (98.828)
Epoch: [31][64/196]	Time 0.083 (0.086)	Data 0.000 (0.006)	Loss 0.4705 (0.4831)	Acc@1 84.375 (83.329)	Acc@5 99.609 (99.225)
Epoch: [31][128/196]	Time 0.071 (0.086)	Data 0.000 (0.003)	Loss 0.6045 (0.4925)	Acc@1 77.734 (83.061)	Acc@5 98.438 (99.210)
Epoch: [31][192/196]	Time 0.084 (0.086)	Data 0.000 (0.002)	Loss 0.5300 (0.4935)	Acc@1 80.859 (82.964)	Acc@5 98.047 (99.162)
after train
n1: 30 for:
wAcc: 67.49344952940166
test acc: 74.91
Epoche: [32/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [32][0/196]	Time 0.177 (0.177)	Data 0.281 (0.281)	Loss 0.6487 (0.6487)	Acc@1 78.906 (78.906)	Acc@5 99.219 (99.219)
Epoch: [32][64/196]	Time 0.082 (0.088)	Data 0.000 (0.005)	Loss 0.5418 (0.5030)	Acc@1 80.078 (82.686)	Acc@5 99.219 (99.075)
Epoch: [32][128/196]	Time 0.082 (0.086)	Data 0.000 (0.002)	Loss 0.4528 (0.4957)	Acc@1 84.766 (82.761)	Acc@5 99.609 (99.161)
Epoch: [32][192/196]	Time 0.081 (0.085)	Data 0.000 (0.002)	Loss 0.4952 (0.4912)	Acc@1 82.812 (82.952)	Acc@5 98.828 (99.176)
after train
n1: 30 for:
wAcc: 69.01711671540335
test acc: 78.99
Epoche: [33/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [33][0/196]	Time 0.149 (0.149)	Data 0.301 (0.301)	Loss 0.4255 (0.4255)	Acc@1 86.719 (86.719)	Acc@5 100.000 (100.000)
Epoch: [33][64/196]	Time 0.088 (0.087)	Data 0.000 (0.005)	Loss 0.5363 (0.4807)	Acc@1 79.297 (83.504)	Acc@5 99.219 (99.153)
Epoch: [33][128/196]	Time 0.091 (0.087)	Data 0.000 (0.003)	Loss 0.4245 (0.4786)	Acc@1 86.719 (83.573)	Acc@5 98.438 (99.167)
Epoch: [33][192/196]	Time 0.072 (0.086)	Data 0.000 (0.002)	Loss 0.5204 (0.4855)	Acc@1 82.422 (83.399)	Acc@5 98.828 (99.140)
after train
n1: 30 for:
wAcc: 70.54379965497029
test acc: 76.9
Epoche: [34/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [34][0/196]	Time 0.132 (0.132)	Data 0.378 (0.378)	Loss 0.5350 (0.5350)	Acc@1 82.812 (82.812)	Acc@5 98.828 (98.828)
Epoch: [34][64/196]	Time 0.103 (0.088)	Data 0.000 (0.006)	Loss 0.4782 (0.4893)	Acc@1 84.766 (83.011)	Acc@5 98.047 (99.099)
Epoch: [34][128/196]	Time 0.089 (0.087)	Data 0.000 (0.003)	Loss 0.5389 (0.4907)	Acc@1 83.203 (83.031)	Acc@5 98.828 (99.195)
Epoch: [34][192/196]	Time 0.093 (0.086)	Data 0.000 (0.002)	Loss 0.4860 (0.4859)	Acc@1 82.422 (83.280)	Acc@5 99.609 (99.231)
after train
n1: 30 for:
wAcc: 70.60982059034698
test acc: 76.34
Epoche: [35/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [35][0/196]	Time 0.159 (0.159)	Data 0.413 (0.413)	Loss 0.4290 (0.4290)	Acc@1 85.938 (85.938)	Acc@5 99.219 (99.219)
Epoch: [35][64/196]	Time 0.088 (0.088)	Data 0.000 (0.007)	Loss 0.4488 (0.4730)	Acc@1 84.375 (83.810)	Acc@5 99.609 (99.315)
Epoch: [35][128/196]	Time 0.089 (0.087)	Data 0.000 (0.003)	Loss 0.6274 (0.4799)	Acc@1 78.906 (83.457)	Acc@5 98.438 (99.258)
Epoch: [35][192/196]	Time 0.067 (0.087)	Data 0.000 (0.002)	Loss 0.4080 (0.4786)	Acc@1 84.766 (83.452)	Acc@5 99.219 (99.279)
after train
n1: 30 for:
wAcc: 71.7890543050785
test acc: 81.3
Epoche: [36/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [36][0/196]	Time 0.130 (0.130)	Data 0.317 (0.317)	Loss 0.4326 (0.4326)	Acc@1 85.938 (85.938)	Acc@5 99.609 (99.609)
Epoch: [36][64/196]	Time 0.086 (0.086)	Data 0.000 (0.005)	Loss 0.4944 (0.4631)	Acc@1 80.859 (84.123)	Acc@5 99.219 (99.363)
Epoch: [36][128/196]	Time 0.087 (0.085)	Data 0.000 (0.003)	Loss 0.5665 (0.4788)	Acc@1 79.688 (83.660)	Acc@5 99.219 (99.301)
Epoch: [36][192/196]	Time 0.085 (0.085)	Data 0.000 (0.002)	Loss 0.4918 (0.4833)	Acc@1 84.375 (83.515)	Acc@5 99.609 (99.263)
after train
n1: 30 for:
wAcc: 72.64119027420169
test acc: 75.86
Epoche: [37/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [37][0/196]	Time 0.127 (0.127)	Data 0.312 (0.312)	Loss 0.3720 (0.3720)	Acc@1 87.500 (87.500)	Acc@5 100.000 (100.000)
Epoch: [37][64/196]	Time 0.082 (0.084)	Data 0.000 (0.005)	Loss 0.6151 (0.4769)	Acc@1 79.297 (83.678)	Acc@5 98.438 (99.261)
Epoch: [37][128/196]	Time 0.091 (0.084)	Data 0.000 (0.003)	Loss 0.3983 (0.4688)	Acc@1 85.547 (83.948)	Acc@5 99.219 (99.282)
Epoch: [37][192/196]	Time 0.083 (0.084)	Data 0.000 (0.002)	Loss 0.5157 (0.4747)	Acc@1 79.688 (83.725)	Acc@5 98.828 (99.275)
after train
n1: 30 for:
wAcc: 72.45275675095596
test acc: 78.3
Epoche: [38/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [38][0/196]	Time 0.131 (0.131)	Data 0.323 (0.323)	Loss 0.5267 (0.5267)	Acc@1 83.984 (83.984)	Acc@5 99.219 (99.219)
Epoch: [38][64/196]	Time 0.084 (0.088)	Data 0.000 (0.005)	Loss 0.4444 (0.4610)	Acc@1 83.203 (83.912)	Acc@5 99.609 (99.357)
Epoch: [38][128/196]	Time 0.074 (0.088)	Data 0.000 (0.003)	Loss 0.4956 (0.4778)	Acc@1 84.375 (83.485)	Acc@5 99.609 (99.297)
Epoch: [38][192/196]	Time 0.063 (0.086)	Data 0.000 (0.002)	Loss 0.6223 (0.4759)	Acc@1 80.469 (83.594)	Acc@5 98.828 (99.296)
after train
n1: 30 for:
wAcc: 73.6467710493168
test acc: 80.39
Epoche: [39/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [39][0/196]	Time 0.150 (0.150)	Data 0.276 (0.276)	Loss 0.4993 (0.4993)	Acc@1 82.031 (82.031)	Acc@5 99.219 (99.219)
Epoch: [39][64/196]	Time 0.082 (0.091)	Data 0.000 (0.005)	Loss 0.5680 (0.4726)	Acc@1 81.250 (83.534)	Acc@5 96.484 (99.225)
Epoch: [39][128/196]	Time 0.074 (0.088)	Data 0.000 (0.002)	Loss 0.5044 (0.4734)	Acc@1 81.250 (83.576)	Acc@5 100.000 (99.243)
Epoch: [39][192/196]	Time 0.074 (0.087)	Data 0.000 (0.002)	Loss 0.4614 (0.4760)	Acc@1 82.812 (83.539)	Acc@5 100.000 (99.251)
after train
n1: 30 for:
wAcc: 71.99724042295023
test acc: 78.67
Epoche: [40/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [40][0/196]	Time 0.152 (0.152)	Data 0.328 (0.328)	Loss 0.5108 (0.5108)	Acc@1 80.859 (80.859)	Acc@5 100.000 (100.000)
Epoch: [40][64/196]	Time 0.094 (0.089)	Data 0.000 (0.005)	Loss 0.5108 (0.4594)	Acc@1 84.375 (84.147)	Acc@5 98.828 (99.381)
Epoch: [40][128/196]	Time 0.081 (0.087)	Data 0.000 (0.003)	Loss 0.5271 (0.4643)	Acc@1 80.859 (84.045)	Acc@5 99.219 (99.340)
Epoch: [40][192/196]	Time 0.071 (0.086)	Data 0.000 (0.002)	Loss 0.5432 (0.4669)	Acc@1 78.125 (84.005)	Acc@5 98.828 (99.342)
after train
n1: 30 for:
wAcc: 74.3041500538375
test acc: 77.52
Epoche: [41/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [41][0/196]	Time 0.156 (0.156)	Data 0.336 (0.336)	Loss 0.5120 (0.5120)	Acc@1 82.812 (82.812)	Acc@5 99.609 (99.609)
Epoch: [41][64/196]	Time 0.079 (0.087)	Data 0.000 (0.005)	Loss 0.5468 (0.4572)	Acc@1 81.641 (84.183)	Acc@5 98.828 (99.315)
Epoch: [41][128/196]	Time 0.080 (0.085)	Data 0.000 (0.003)	Loss 0.4893 (0.4640)	Acc@1 84.766 (83.966)	Acc@5 99.609 (99.246)
Epoch: [41][192/196]	Time 0.079 (0.085)	Data 0.000 (0.002)	Loss 0.4344 (0.4689)	Acc@1 83.594 (83.756)	Acc@5 100.000 (99.255)
after train
n1: 30 for:
wAcc: 74.84989828786095
test acc: 73.43
Epoche: [42/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [42][0/196]	Time 0.125 (0.125)	Data 0.335 (0.335)	Loss 0.5276 (0.5276)	Acc@1 82.031 (82.031)	Acc@5 98.438 (98.438)
Epoch: [42][64/196]	Time 0.083 (0.085)	Data 0.000 (0.005)	Loss 0.3556 (0.4568)	Acc@1 87.891 (84.020)	Acc@5 99.609 (99.291)
Epoch: [42][128/196]	Time 0.093 (0.085)	Data 0.000 (0.003)	Loss 0.5711 (0.4644)	Acc@1 81.641 (84.009)	Acc@5 98.828 (99.219)
Epoch: [42][192/196]	Time 0.088 (0.085)	Data 0.000 (0.002)	Loss 0.4697 (0.4668)	Acc@1 83.203 (83.907)	Acc@5 99.609 (99.233)
after train
n1: 30 for:
wAcc: 74.73660771312218
test acc: 64.28
Epoche: [43/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [43][0/196]	Time 0.121 (0.121)	Data 0.296 (0.296)	Loss 0.4564 (0.4564)	Acc@1 85.547 (85.547)	Acc@5 98.828 (98.828)
Epoch: [43][64/196]	Time 0.093 (0.086)	Data 0.000 (0.005)	Loss 0.4801 (0.4703)	Acc@1 82.422 (83.846)	Acc@5 99.219 (99.243)
Epoch: [43][128/196]	Time 0.090 (0.087)	Data 0.000 (0.003)	Loss 0.4583 (0.4660)	Acc@1 85.938 (84.102)	Acc@5 99.609 (99.307)
Epoch: [43][192/196]	Time 0.086 (0.085)	Data 0.000 (0.002)	Loss 0.4146 (0.4605)	Acc@1 87.109 (84.252)	Acc@5 99.609 (99.324)
after train
n1: 30 for:
wAcc: 74.31063373912055
test acc: 72.42
Epoche: [44/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [44][0/196]	Time 0.192 (0.192)	Data 0.278 (0.278)	Loss 0.4686 (0.4686)	Acc@1 85.547 (85.547)	Acc@5 99.219 (99.219)
Epoch: [44][64/196]	Time 0.078 (0.089)	Data 0.000 (0.005)	Loss 0.4194 (0.4681)	Acc@1 84.766 (83.834)	Acc@5 99.219 (99.339)
Epoch: [44][128/196]	Time 0.091 (0.088)	Data 0.000 (0.002)	Loss 0.4710 (0.4613)	Acc@1 82.031 (84.009)	Acc@5 99.219 (99.364)
Epoch: [44][192/196]	Time 0.082 (0.086)	Data 0.000 (0.002)	Loss 0.5345 (0.4618)	Acc@1 80.859 (84.005)	Acc@5 99.219 (99.332)
after train
n1: 30 for:
wAcc: 72.35850805415932
test acc: 78.94
Epoche: [45/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [45][0/196]	Time 0.132 (0.132)	Data 0.330 (0.330)	Loss 0.4504 (0.4504)	Acc@1 85.938 (85.938)	Acc@5 99.609 (99.609)
Epoch: [45][64/196]	Time 0.080 (0.089)	Data 0.000 (0.005)	Loss 0.5435 (0.4538)	Acc@1 82.812 (84.525)	Acc@5 98.438 (99.255)
Epoch: [45][128/196]	Time 0.089 (0.088)	Data 0.000 (0.003)	Loss 0.5163 (0.4554)	Acc@1 80.859 (84.387)	Acc@5 98.828 (99.270)
Epoch: [45][192/196]	Time 0.078 (0.086)	Data 0.000 (0.002)	Loss 0.4251 (0.4598)	Acc@1 85.938 (84.217)	Acc@5 98.828 (99.316)
after train
n1: 30 for:
wAcc: 74.4846099665111
test acc: 77.61
Epoche: [46/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [46][0/196]	Time 0.169 (0.169)	Data 0.393 (0.393)	Loss 0.4668 (0.4668)	Acc@1 84.375 (84.375)	Acc@5 99.219 (99.219)
Epoch: [46][64/196]	Time 0.080 (0.087)	Data 0.000 (0.006)	Loss 0.3910 (0.4557)	Acc@1 86.719 (84.303)	Acc@5 98.828 (99.309)
Epoch: [46][128/196]	Time 0.090 (0.086)	Data 0.000 (0.003)	Loss 0.4256 (0.4492)	Acc@1 83.594 (84.575)	Acc@5 99.609 (99.291)
Epoch: [46][192/196]	Time 0.076 (0.086)	Data 0.000 (0.002)	Loss 0.4118 (0.4565)	Acc@1 85.547 (84.359)	Acc@5 99.609 (99.288)
after train
n1: 30 for:
wAcc: 74.54024086037246
test acc: 72.86
Epoche: [47/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [47][0/196]	Time 0.168 (0.168)	Data 0.301 (0.301)	Loss 0.4023 (0.4023)	Acc@1 87.109 (87.109)	Acc@5 98.828 (98.828)
Epoch: [47][64/196]	Time 0.089 (0.085)	Data 0.000 (0.005)	Loss 0.4591 (0.4521)	Acc@1 84.375 (84.062)	Acc@5 99.219 (99.351)
Epoch: [47][128/196]	Time 0.090 (0.084)	Data 0.000 (0.003)	Loss 0.5055 (0.4513)	Acc@1 83.984 (84.269)	Acc@5 99.219 (99.394)
Epoch: [47][192/196]	Time 0.087 (0.084)	Data 0.000 (0.002)	Loss 0.4312 (0.4561)	Acc@1 85.547 (84.266)	Acc@5 99.219 (99.352)
after train
n1: 30 for:
wAcc: 74.45352245780583
test acc: 79.08
Epoche: [48/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [48][0/196]	Time 0.122 (0.122)	Data 0.346 (0.346)	Loss 0.4641 (0.4641)	Acc@1 83.203 (83.203)	Acc@5 99.219 (99.219)
Epoch: [48][64/196]	Time 0.110 (0.088)	Data 0.000 (0.006)	Loss 0.4196 (0.4403)	Acc@1 85.547 (84.669)	Acc@5 99.609 (99.219)
Epoch: [48][128/196]	Time 0.082 (0.086)	Data 0.000 (0.003)	Loss 0.4490 (0.4450)	Acc@1 84.375 (84.520)	Acc@5 98.828 (99.285)
Epoch: [48][192/196]	Time 0.091 (0.086)	Data 0.000 (0.002)	Loss 0.4197 (0.4460)	Acc@1 86.328 (84.438)	Acc@5 99.219 (99.338)
after train
n1: 30 for:
wAcc: 74.59587839806053
test acc: 77.21
Epoche: [49/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [49][0/196]	Time 0.175 (0.175)	Data 0.353 (0.353)	Loss 0.3737 (0.3737)	Acc@1 89.062 (89.062)	Acc@5 99.609 (99.609)
Epoch: [49][64/196]	Time 0.090 (0.088)	Data 0.000 (0.006)	Loss 0.4615 (0.4534)	Acc@1 82.422 (84.339)	Acc@5 99.609 (99.351)
Epoch: [49][128/196]	Time 0.080 (0.087)	Data 0.000 (0.003)	Loss 0.3354 (0.4498)	Acc@1 89.062 (84.557)	Acc@5 99.609 (99.358)
Epoch: [49][192/196]	Time 0.089 (0.086)	Data 0.000 (0.002)	Loss 0.5119 (0.4520)	Acc@1 82.812 (84.525)	Acc@5 100.000 (99.340)
after train
n1: 30 for:
wAcc: 73.28277544289736
test acc: 77.38
Epoche: [50/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [50][0/196]	Time 0.177 (0.177)	Data 0.307 (0.307)	Loss 0.4824 (0.4824)	Acc@1 84.375 (84.375)	Acc@5 99.609 (99.609)
Epoch: [50][64/196]	Time 0.088 (0.088)	Data 0.000 (0.005)	Loss 0.3770 (0.4342)	Acc@1 85.938 (84.748)	Acc@5 98.828 (99.291)
Epoch: [50][128/196]	Time 0.091 (0.087)	Data 0.000 (0.003)	Loss 0.5069 (0.4489)	Acc@1 82.812 (84.430)	Acc@5 98.438 (99.297)
Epoch: [50][192/196]	Time 0.079 (0.086)	Data 0.000 (0.002)	Loss 0.4733 (0.4491)	Acc@1 83.594 (84.373)	Acc@5 98.438 (99.306)
after train
n1: 30 for:
wAcc: 76.02345198666876
test acc: 79.6
Epoche: [51/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [51][0/196]	Time 0.170 (0.170)	Data 0.306 (0.306)	Loss 0.4911 (0.4911)	Acc@1 82.422 (82.422)	Acc@5 99.219 (99.219)
Epoch: [51][64/196]	Time 0.089 (0.089)	Data 0.000 (0.005)	Loss 0.4151 (0.4547)	Acc@1 87.109 (84.333)	Acc@5 99.609 (99.243)
Epoch: [51][128/196]	Time 0.082 (0.087)	Data 0.000 (0.003)	Loss 0.4146 (0.4504)	Acc@1 84.375 (84.599)	Acc@5 99.219 (99.276)
Epoch: [51][192/196]	Time 0.083 (0.085)	Data 0.000 (0.002)	Loss 0.4883 (0.4480)	Acc@1 82.031 (84.650)	Acc@5 99.609 (99.334)
after train
n1: 30 for:
wAcc: 74.32719146173879
test acc: 78.39
Epoche: [52/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [52][0/196]	Time 0.177 (0.177)	Data 0.341 (0.341)	Loss 0.4623 (0.4623)	Acc@1 83.594 (83.594)	Acc@5 100.000 (100.000)
Epoch: [52][64/196]	Time 0.071 (0.086)	Data 0.000 (0.005)	Loss 0.4075 (0.4421)	Acc@1 86.719 (84.790)	Acc@5 99.219 (99.381)
Epoch: [52][128/196]	Time 0.091 (0.085)	Data 0.000 (0.003)	Loss 0.3866 (0.4369)	Acc@1 86.328 (84.996)	Acc@5 99.219 (99.400)
Epoch: [52][192/196]	Time 0.074 (0.085)	Data 0.000 (0.002)	Loss 0.4153 (0.4407)	Acc@1 85.547 (84.741)	Acc@5 99.219 (99.364)
after train
n1: 30 for:
wAcc: 74.46787643354257
test acc: 76.2
Epoche: [53/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [53][0/196]	Time 0.176 (0.176)	Data 0.364 (0.364)	Loss 0.5348 (0.5348)	Acc@1 84.375 (84.375)	Acc@5 98.438 (98.438)
Epoch: [53][64/196]	Time 0.086 (0.088)	Data 0.000 (0.006)	Loss 0.4381 (0.4436)	Acc@1 87.500 (84.700)	Acc@5 99.219 (99.333)
Epoch: [53][128/196]	Time 0.082 (0.086)	Data 0.000 (0.003)	Loss 0.4189 (0.4514)	Acc@1 83.984 (84.399)	Acc@5 100.000 (99.310)
Epoch: [53][192/196]	Time 0.089 (0.086)	Data 0.000 (0.002)	Loss 0.5271 (0.4527)	Acc@1 82.031 (84.341)	Acc@5 98.438 (99.320)
after train
n1: 30 for:
wAcc: 75.19545857491079
test acc: 75.64
Epoche: [54/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [54][0/196]	Time 0.119 (0.119)	Data 0.371 (0.371)	Loss 0.4557 (0.4557)	Acc@1 83.984 (83.984)	Acc@5 98.828 (98.828)
Epoch: [54][64/196]	Time 0.092 (0.084)	Data 0.000 (0.006)	Loss 0.4253 (0.4444)	Acc@1 83.594 (84.651)	Acc@5 99.609 (99.489)
Epoch: [54][128/196]	Time 0.097 (0.084)	Data 0.000 (0.003)	Loss 0.4288 (0.4453)	Acc@1 85.156 (84.563)	Acc@5 100.000 (99.352)
Epoch: [54][192/196]	Time 0.082 (0.084)	Data 0.000 (0.002)	Loss 0.4940 (0.4495)	Acc@1 82.422 (84.523)	Acc@5 100.000 (99.342)
after train
n1: 30 for:
wAcc: 75.34412475936365
test acc: 76.97
Epoche: [55/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [55][0/196]	Time 0.125 (0.125)	Data 0.289 (0.289)	Loss 0.3456 (0.3456)	Acc@1 88.281 (88.281)	Acc@5 99.609 (99.609)
Epoch: [55][64/196]	Time 0.092 (0.087)	Data 0.000 (0.005)	Loss 0.3795 (0.4446)	Acc@1 83.984 (84.567)	Acc@5 99.609 (99.363)
Epoch: [55][128/196]	Time 0.089 (0.088)	Data 0.000 (0.003)	Loss 0.4263 (0.4427)	Acc@1 85.156 (84.593)	Acc@5 98.828 (99.385)
Epoch: [55][192/196]	Time 0.071 (0.087)	Data 0.000 (0.002)	Loss 0.4162 (0.4432)	Acc@1 86.719 (84.687)	Acc@5 99.609 (99.338)
after train
n1: 30 for:
wAcc: 74.2607239356421
test acc: 82.07
Epoche: [56/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [56][0/196]	Time 0.124 (0.124)	Data 0.345 (0.345)	Loss 0.4899 (0.4899)	Acc@1 82.422 (82.422)	Acc@5 98.828 (98.828)
Epoch: [56][64/196]	Time 0.071 (0.086)	Data 0.000 (0.006)	Loss 0.3688 (0.4362)	Acc@1 86.328 (84.874)	Acc@5 100.000 (99.417)
Epoch: [56][128/196]	Time 0.080 (0.086)	Data 0.000 (0.003)	Loss 0.4177 (0.4350)	Acc@1 87.500 (84.866)	Acc@5 99.219 (99.367)
Epoch: [56][192/196]	Time 0.088 (0.085)	Data 0.000 (0.002)	Loss 0.4109 (0.4365)	Acc@1 85.938 (84.940)	Acc@5 99.609 (99.366)
after train
n1: 30 for:
wAcc: 76.50073250034625
test acc: 71.79
Epoche: [57/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [57][0/196]	Time 0.156 (0.156)	Data 0.343 (0.343)	Loss 0.4425 (0.4425)	Acc@1 87.500 (87.500)	Acc@5 98.828 (98.828)
Epoch: [57][64/196]	Time 0.089 (0.087)	Data 0.000 (0.006)	Loss 0.5465 (0.4411)	Acc@1 82.031 (84.772)	Acc@5 98.828 (99.405)
Epoch: [57][128/196]	Time 0.086 (0.086)	Data 0.000 (0.003)	Loss 0.4649 (0.4433)	Acc@1 82.031 (84.611)	Acc@5 100.000 (99.397)
Epoch: [57][192/196]	Time 0.092 (0.085)	Data 0.000 (0.002)	Loss 0.5449 (0.4433)	Acc@1 80.469 (84.695)	Acc@5 100.000 (99.401)
after train
n1: 30 for:
wAcc: 76.38908114565051
test acc: 70.15
Epoche: [58/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [58][0/196]	Time 0.178 (0.178)	Data 0.360 (0.360)	Loss 0.3576 (0.3576)	Acc@1 87.500 (87.500)	Acc@5 99.609 (99.609)
Epoch: [58][64/196]	Time 0.083 (0.087)	Data 0.000 (0.006)	Loss 0.4990 (0.4316)	Acc@1 83.203 (85.054)	Acc@5 99.219 (99.393)
Epoch: [58][128/196]	Time 0.094 (0.085)	Data 0.000 (0.003)	Loss 0.5899 (0.4397)	Acc@1 76.953 (84.754)	Acc@5 99.609 (99.382)
Epoch: [58][192/196]	Time 0.091 (0.086)	Data 0.000 (0.002)	Loss 0.5290 (0.4371)	Acc@1 83.203 (84.857)	Acc@5 98.828 (99.364)
after train
n1: 30 for:
wAcc: 76.18750034598267
test acc: 80.93
Epoche: [59/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [59][0/196]	Time 0.154 (0.154)	Data 0.324 (0.324)	Loss 0.3941 (0.3941)	Acc@1 84.375 (84.375)	Acc@5 100.000 (100.000)
Epoch: [59][64/196]	Time 0.092 (0.084)	Data 0.000 (0.005)	Loss 0.4119 (0.4253)	Acc@1 83.203 (85.415)	Acc@5 99.219 (99.411)
Epoch: [59][128/196]	Time 0.094 (0.084)	Data 0.000 (0.003)	Loss 0.3961 (0.4358)	Acc@1 85.547 (85.044)	Acc@5 100.000 (99.325)
Epoch: [59][192/196]	Time 0.066 (0.085)	Data 0.000 (0.002)	Loss 0.4503 (0.4428)	Acc@1 81.641 (84.689)	Acc@5 100.000 (99.330)
after train
n1: 30 for:
wAcc: 76.5469558417766
test acc: 73.71
Epoche: [60/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [60][0/196]	Time 0.165 (0.165)	Data 0.327 (0.327)	Loss 0.4338 (0.4338)	Acc@1 83.594 (83.594)	Acc@5 100.000 (100.000)
Epoch: [60][64/196]	Time 0.080 (0.089)	Data 0.000 (0.005)	Loss 0.4504 (0.4508)	Acc@1 85.547 (84.447)	Acc@5 98.438 (99.213)
Epoch: [60][128/196]	Time 0.095 (0.087)	Data 0.000 (0.003)	Loss 0.4669 (0.4448)	Acc@1 83.984 (84.732)	Acc@5 99.219 (99.304)
Epoch: [60][192/196]	Time 0.070 (0.086)	Data 0.000 (0.002)	Loss 0.5548 (0.4413)	Acc@1 83.594 (84.857)	Acc@5 99.609 (99.310)
after train
n1: 30 for:
wAcc: 76.09937878287515
test acc: 79.38
Epoche: [61/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [61][0/196]	Time 0.164 (0.164)	Data 0.354 (0.354)	Loss 0.4979 (0.4979)	Acc@1 81.250 (81.250)	Acc@5 99.219 (99.219)
Epoch: [61][64/196]	Time 0.078 (0.086)	Data 0.000 (0.006)	Loss 0.4317 (0.4456)	Acc@1 85.156 (84.663)	Acc@5 99.219 (99.255)
Epoch: [61][128/196]	Time 0.080 (0.086)	Data 0.000 (0.003)	Loss 0.5197 (0.4436)	Acc@1 82.422 (84.651)	Acc@5 98.828 (99.291)
Epoch: [61][192/196]	Time 0.070 (0.085)	Data 0.000 (0.002)	Loss 0.3904 (0.4395)	Acc@1 88.281 (84.843)	Acc@5 98.047 (99.322)
after train
n1: 30 for:
wAcc: 76.90084291817628
test acc: 69.21
Epoche: [62/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [62][0/196]	Time 0.118 (0.118)	Data 0.360 (0.360)	Loss 0.3551 (0.3551)	Acc@1 86.328 (86.328)	Acc@5 100.000 (100.000)
Epoch: [62][64/196]	Time 0.076 (0.086)	Data 0.000 (0.006)	Loss 0.5379 (0.4289)	Acc@1 82.812 (85.246)	Acc@5 99.219 (99.411)
Epoch: [62][128/196]	Time 0.077 (0.086)	Data 0.000 (0.003)	Loss 0.4748 (0.4316)	Acc@1 85.547 (85.202)	Acc@5 99.219 (99.385)
Epoch: [62][192/196]	Time 0.086 (0.086)	Data 0.000 (0.002)	Loss 0.4624 (0.4320)	Acc@1 86.328 (85.170)	Acc@5 98.828 (99.375)
after train
n1: 30 for:
wAcc: 76.10252584946268
test acc: 72.71
Epoche: [63/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [63][0/196]	Time 0.152 (0.152)	Data 0.300 (0.300)	Loss 0.3703 (0.3703)	Acc@1 89.844 (89.844)	Acc@5 98.828 (98.828)
Epoch: [63][64/196]	Time 0.075 (0.086)	Data 0.000 (0.005)	Loss 0.3845 (0.4365)	Acc@1 85.547 (85.018)	Acc@5 100.000 (99.423)
Epoch: [63][128/196]	Time 0.083 (0.085)	Data 0.000 (0.003)	Loss 0.4055 (0.4395)	Acc@1 86.719 (84.947)	Acc@5 99.609 (99.358)
Epoch: [63][192/196]	Time 0.069 (0.085)	Data 0.000 (0.002)	Loss 0.3906 (0.4407)	Acc@1 87.109 (84.836)	Acc@5 99.609 (99.371)
after train
n1: 30 for:
wAcc: 75.80269874195743
test acc: 72.59
Epoche: [64/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [64][0/196]	Time 0.153 (0.153)	Data 0.409 (0.409)	Loss 0.5290 (0.5290)	Acc@1 80.859 (80.859)	Acc@5 99.609 (99.609)
Epoch: [64][64/196]	Time 0.066 (0.084)	Data 0.000 (0.007)	Loss 0.3626 (0.4320)	Acc@1 87.500 (85.036)	Acc@5 100.000 (99.417)
Epoch: [64][128/196]	Time 0.083 (0.084)	Data 0.000 (0.003)	Loss 0.4124 (0.4336)	Acc@1 85.547 (84.978)	Acc@5 99.609 (99.349)
Epoch: [64][192/196]	Time 0.090 (0.085)	Data 0.000 (0.002)	Loss 0.4905 (0.4369)	Acc@1 80.859 (84.863)	Acc@5 98.828 (99.334)
after train
n1: 30 for:
wAcc: 76.31245317930444
test acc: 81.33
Epoche: [65/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [65][0/196]	Time 0.183 (0.183)	Data 0.313 (0.313)	Loss 0.4415 (0.4415)	Acc@1 86.328 (86.328)	Acc@5 98.438 (98.438)
Epoch: [65][64/196]	Time 0.078 (0.087)	Data 0.000 (0.005)	Loss 0.3819 (0.4462)	Acc@1 86.328 (84.688)	Acc@5 100.000 (99.363)
Epoch: [65][128/196]	Time 0.093 (0.086)	Data 0.000 (0.003)	Loss 0.4007 (0.4423)	Acc@1 86.328 (84.841)	Acc@5 100.000 (99.343)
Epoch: [65][192/196]	Time 0.068 (0.086)	Data 0.000 (0.002)	Loss 0.4963 (0.4374)	Acc@1 82.812 (84.942)	Acc@5 98.438 (99.322)
after train
n1: 30 for:
wAcc: 75.84975100601234
test acc: 75.72
Epoche: [66/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [66][0/196]	Time 0.148 (0.148)	Data 0.311 (0.311)	Loss 0.3912 (0.3912)	Acc@1 88.672 (88.672)	Acc@5 99.219 (99.219)
Epoch: [66][64/196]	Time 0.075 (0.086)	Data 0.000 (0.005)	Loss 0.4077 (0.4416)	Acc@1 85.547 (84.856)	Acc@5 99.219 (99.411)
Epoch: [66][128/196]	Time 0.125 (0.085)	Data 0.000 (0.003)	Loss 0.3759 (0.4326)	Acc@1 86.719 (85.044)	Acc@5 99.609 (99.440)
Epoch: [66][192/196]	Time 0.076 (0.085)	Data 0.000 (0.002)	Loss 0.4687 (0.4335)	Acc@1 84.766 (85.104)	Acc@5 98.828 (99.411)
after train
n1: 30 for:
wAcc: 76.1941101730391
test acc: 79.93
Epoche: [67/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [67][0/196]	Time 0.146 (0.146)	Data 0.324 (0.324)	Loss 0.4439 (0.4439)	Acc@1 86.328 (86.328)	Acc@5 98.828 (98.828)
Epoch: [67][64/196]	Time 0.092 (0.086)	Data 0.000 (0.005)	Loss 0.4700 (0.4339)	Acc@1 82.812 (85.108)	Acc@5 98.438 (99.375)
Epoch: [67][128/196]	Time 0.083 (0.086)	Data 0.000 (0.003)	Loss 0.3834 (0.4378)	Acc@1 87.500 (84.944)	Acc@5 99.609 (99.367)
Epoch: [67][192/196]	Time 0.086 (0.086)	Data 0.000 (0.002)	Loss 0.3749 (0.4315)	Acc@1 85.547 (85.146)	Acc@5 100.000 (99.381)
after train
n1: 30 for:
wAcc: 76.73726897780334
test acc: 73.84
Epoche: [68/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [68][0/196]	Time 0.132 (0.132)	Data 0.333 (0.333)	Loss 0.4128 (0.4128)	Acc@1 83.984 (83.984)	Acc@5 98.828 (98.828)
Epoch: [68][64/196]	Time 0.095 (0.087)	Data 0.000 (0.005)	Loss 0.4556 (0.4276)	Acc@1 80.859 (85.337)	Acc@5 99.609 (99.309)
Epoch: [68][128/196]	Time 0.075 (0.087)	Data 0.000 (0.003)	Loss 0.5234 (0.4305)	Acc@1 82.422 (85.271)	Acc@5 98.828 (99.322)
Epoch: [68][192/196]	Time 0.090 (0.086)	Data 0.000 (0.002)	Loss 0.4331 (0.4338)	Acc@1 85.938 (85.152)	Acc@5 99.219 (99.334)
after train
n1: 30 for:
wAcc: 76.30170252013241
test acc: 79.17
Epoche: [69/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [69][0/196]	Time 0.163 (0.163)	Data 0.359 (0.359)	Loss 0.3315 (0.3315)	Acc@1 88.281 (88.281)	Acc@5 99.609 (99.609)
Epoch: [69][64/196]	Time 0.091 (0.087)	Data 0.000 (0.006)	Loss 0.4639 (0.4172)	Acc@1 84.375 (85.685)	Acc@5 99.219 (99.471)
Epoch: [69][128/196]	Time 0.102 (0.087)	Data 0.000 (0.003)	Loss 0.3639 (0.4283)	Acc@1 85.547 (85.268)	Acc@5 100.000 (99.394)
Epoch: [69][192/196]	Time 0.083 (0.086)	Data 0.000 (0.002)	Loss 0.4929 (0.4297)	Acc@1 80.859 (85.266)	Acc@5 98.828 (99.377)
after train
n1: 30 for:
wAcc: 76.32050817961706
test acc: 75.87
Epoche: [70/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [70][0/196]	Time 0.171 (0.171)	Data 0.360 (0.360)	Loss 0.4194 (0.4194)	Acc@1 84.766 (84.766)	Acc@5 100.000 (100.000)
Epoch: [70][64/196]	Time 0.090 (0.086)	Data 0.000 (0.006)	Loss 0.3361 (0.4185)	Acc@1 88.672 (85.601)	Acc@5 100.000 (99.411)
Epoch: [70][128/196]	Time 0.089 (0.085)	Data 0.000 (0.003)	Loss 0.4428 (0.4288)	Acc@1 83.594 (85.335)	Acc@5 99.219 (99.349)
Epoch: [70][192/196]	Time 0.072 (0.085)	Data 0.000 (0.002)	Loss 0.4801 (0.4318)	Acc@1 85.547 (85.231)	Acc@5 98.828 (99.383)
after train
n1: 30 for:
wAcc: 75.70018636664724
test acc: 80.6
Epoche: [71/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [71][0/196]	Time 0.131 (0.131)	Data 0.371 (0.371)	Loss 0.4619 (0.4619)	Acc@1 81.250 (81.250)	Acc@5 99.609 (99.609)
Epoch: [71][64/196]	Time 0.084 (0.086)	Data 0.000 (0.006)	Loss 0.4796 (0.4340)	Acc@1 82.812 (84.826)	Acc@5 99.219 (99.411)
Epoch: [71][128/196]	Time 0.077 (0.085)	Data 0.000 (0.003)	Loss 0.3920 (0.4223)	Acc@1 88.281 (85.332)	Acc@5 98.828 (99.403)
Epoch: [71][192/196]	Time 0.062 (0.085)	Data 0.000 (0.002)	Loss 0.4222 (0.4289)	Acc@1 86.719 (85.000)	Acc@5 99.609 (99.409)
after train
n1: 30 for:
wAcc: 74.69356512647795
test acc: 66.14
Epoche: [72/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [72][0/196]	Time 0.136 (0.136)	Data 0.350 (0.350)	Loss 0.5072 (0.5072)	Acc@1 82.031 (82.031)	Acc@5 98.828 (98.828)
Epoch: [72][64/196]	Time 0.089 (0.085)	Data 0.000 (0.006)	Loss 0.3660 (0.4200)	Acc@1 86.328 (85.337)	Acc@5 100.000 (99.459)
Epoch: [72][128/196]	Time 0.092 (0.086)	Data 0.000 (0.003)	Loss 0.3284 (0.4195)	Acc@1 89.453 (85.574)	Acc@5 99.609 (99.440)
Epoch: [72][192/196]	Time 0.077 (0.085)	Data 0.000 (0.002)	Loss 0.4058 (0.4263)	Acc@1 86.328 (85.403)	Acc@5 99.609 (99.395)
after train
n1: 30 for:
wAcc: 75.31845329104968
test acc: 77.43
Epoche: [73/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [73][0/196]	Time 0.151 (0.151)	Data 0.313 (0.313)	Loss 0.5165 (0.5165)	Acc@1 81.641 (81.641)	Acc@5 99.609 (99.609)
Epoch: [73][64/196]	Time 0.083 (0.084)	Data 0.000 (0.005)	Loss 0.5289 (0.4272)	Acc@1 82.812 (85.643)	Acc@5 98.828 (99.387)
Epoch: [73][128/196]	Time 0.073 (0.087)	Data 0.000 (0.003)	Loss 0.3787 (0.4287)	Acc@1 88.281 (85.426)	Acc@5 99.219 (99.355)
Epoch: [73][192/196]	Time 0.089 (0.085)	Data 0.000 (0.002)	Loss 0.4847 (0.4329)	Acc@1 84.375 (85.288)	Acc@5 98.438 (99.330)
after train
n1: 30 for:
wAcc: 76.3972234642058
test acc: 80.23
Epoche: [74/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [74][0/196]	Time 0.117 (0.117)	Data 0.279 (0.279)	Loss 0.5081 (0.5081)	Acc@1 82.812 (82.812)	Acc@5 99.609 (99.609)
Epoch: [74][64/196]	Time 0.093 (0.087)	Data 0.000 (0.005)	Loss 0.3142 (0.4192)	Acc@1 88.672 (85.541)	Acc@5 99.609 (99.381)
Epoch: [74][128/196]	Time 0.099 (0.087)	Data 0.000 (0.002)	Loss 0.4666 (0.4281)	Acc@1 83.594 (85.062)	Acc@5 98.828 (99.403)
Epoch: [74][192/196]	Time 0.071 (0.087)	Data 0.000 (0.002)	Loss 0.4010 (0.4303)	Acc@1 85.938 (84.974)	Acc@5 99.219 (99.403)
after train
n1: 30 for:
wAcc: 76.45223249860784
test acc: 77.11
Epoche: [75/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [75][0/196]	Time 0.162 (0.162)	Data 0.327 (0.327)	Loss 0.4091 (0.4091)	Acc@1 86.328 (86.328)	Acc@5 99.609 (99.609)
Epoch: [75][64/196]	Time 0.086 (0.089)	Data 0.000 (0.005)	Loss 0.3354 (0.4205)	Acc@1 88.672 (85.547)	Acc@5 99.609 (99.387)
Epoch: [75][128/196]	Time 0.086 (0.087)	Data 0.000 (0.003)	Loss 0.3855 (0.4224)	Acc@1 85.156 (85.623)	Acc@5 100.000 (99.394)
Epoch: [75][192/196]	Time 0.065 (0.086)	Data 0.000 (0.002)	Loss 0.4455 (0.4305)	Acc@1 83.984 (85.270)	Acc@5 99.219 (99.381)
after train
n1: 30 for:
wAcc: 75.808001714697
test acc: 75.39
Epoche: [76/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [76][0/196]	Time 0.158 (0.158)	Data 0.384 (0.384)	Loss 0.5186 (0.5186)	Acc@1 84.375 (84.375)	Acc@5 99.609 (99.609)
Epoch: [76][64/196]	Time 0.084 (0.086)	Data 0.000 (0.006)	Loss 0.4558 (0.4164)	Acc@1 83.984 (85.853)	Acc@5 99.609 (99.447)
Epoch: [76][128/196]	Time 0.071 (0.086)	Data 0.000 (0.003)	Loss 0.4900 (0.4171)	Acc@1 82.812 (85.750)	Acc@5 99.219 (99.413)
Epoch: [76][192/196]	Time 0.082 (0.085)	Data 0.000 (0.002)	Loss 0.4563 (0.4260)	Acc@1 83.984 (85.359)	Acc@5 99.219 (99.405)
after train
n1: 30 for:
wAcc: 76.68020674818686
test acc: 64.35
Epoche: [77/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [77][0/196]	Time 0.128 (0.128)	Data 0.346 (0.346)	Loss 0.5133 (0.5133)	Acc@1 82.031 (82.031)	Acc@5 98.828 (98.828)
Epoch: [77][64/196]	Time 0.086 (0.086)	Data 0.000 (0.006)	Loss 0.4580 (0.4425)	Acc@1 81.641 (84.730)	Acc@5 99.609 (99.423)
Epoch: [77][128/196]	Time 0.096 (0.086)	Data 0.000 (0.003)	Loss 0.4175 (0.4299)	Acc@1 86.328 (85.196)	Acc@5 99.609 (99.422)
Epoch: [77][192/196]	Time 0.079 (0.086)	Data 0.000 (0.002)	Loss 0.5465 (0.4296)	Acc@1 81.641 (85.227)	Acc@5 98.438 (99.413)
after train
n1: 30 for:
wAcc: 75.61437942658216
test acc: 71.72
Epoche: [78/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [78][0/196]	Time 0.121 (0.121)	Data 0.315 (0.315)	Loss 0.5667 (0.5667)	Acc@1 80.469 (80.469)	Acc@5 99.219 (99.219)
Epoch: [78][64/196]	Time 0.088 (0.086)	Data 0.000 (0.005)	Loss 0.4191 (0.4279)	Acc@1 86.328 (85.343)	Acc@5 98.828 (99.459)
Epoch: [78][128/196]	Time 0.088 (0.087)	Data 0.000 (0.003)	Loss 0.5030 (0.4253)	Acc@1 81.641 (85.329)	Acc@5 98.438 (99.461)
Epoch: [78][192/196]	Time 0.083 (0.085)	Data 0.000 (0.002)	Loss 0.4502 (0.4263)	Acc@1 84.766 (85.342)	Acc@5 99.219 (99.452)
after train
n1: 30 for:
wAcc: 75.38770460572749
test acc: 78.28
Epoche: [79/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [79][0/196]	Time 0.133 (0.133)	Data 0.329 (0.329)	Loss 0.4363 (0.4363)	Acc@1 85.156 (85.156)	Acc@5 100.000 (100.000)
Epoch: [79][64/196]	Time 0.081 (0.086)	Data 0.000 (0.005)	Loss 0.3477 (0.4199)	Acc@1 87.891 (85.847)	Acc@5 99.609 (99.333)
Epoch: [79][128/196]	Time 0.083 (0.087)	Data 0.000 (0.003)	Loss 0.4872 (0.4194)	Acc@1 85.547 (85.716)	Acc@5 98.828 (99.394)
Epoch: [79][192/196]	Time 0.083 (0.086)	Data 0.000 (0.002)	Loss 0.4551 (0.4184)	Acc@1 85.156 (85.685)	Acc@5 98.828 (99.407)
after train
n1: 30 for:
wAcc: 75.89523096566309
test acc: 80.09
Epoche: [80/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [80][0/196]	Time 0.121 (0.121)	Data 0.333 (0.333)	Loss 0.3530 (0.3530)	Acc@1 87.109 (87.109)	Acc@5 99.609 (99.609)
Epoch: [80][64/196]	Time 0.084 (0.087)	Data 0.000 (0.005)	Loss 0.4267 (0.4077)	Acc@1 85.547 (85.715)	Acc@5 99.219 (99.423)
Epoch: [80][128/196]	Time 0.086 (0.085)	Data 0.000 (0.003)	Loss 0.4709 (0.4132)	Acc@1 85.156 (85.529)	Acc@5 99.219 (99.461)
Epoch: [80][192/196]	Time 0.068 (0.084)	Data 0.000 (0.002)	Loss 0.4156 (0.4241)	Acc@1 85.547 (85.302)	Acc@5 98.438 (99.401)
after train
n1: 30 for:
wAcc: 75.99094174167895
test acc: 80.99
Epoche: [81/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [81][0/196]	Time 0.124 (0.124)	Data 0.337 (0.337)	Loss 0.4141 (0.4141)	Acc@1 86.328 (86.328)	Acc@5 99.219 (99.219)
Epoch: [81][64/196]	Time 0.090 (0.087)	Data 0.000 (0.005)	Loss 0.3540 (0.4097)	Acc@1 89.844 (85.817)	Acc@5 98.047 (99.519)
Epoch: [81][128/196]	Time 0.084 (0.085)	Data 0.000 (0.003)	Loss 0.3934 (0.4269)	Acc@1 86.328 (85.489)	Acc@5 100.000 (99.400)
Epoch: [81][192/196]	Time 0.075 (0.084)	Data 0.000 (0.002)	Loss 0.4713 (0.4275)	Acc@1 83.984 (85.425)	Acc@5 99.609 (99.375)
after train
n1: 30 for:
wAcc: 75.99687181895058
test acc: 73.11
Epoche: [82/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [82][0/196]	Time 0.150 (0.150)	Data 0.339 (0.339)	Loss 0.3718 (0.3718)	Acc@1 87.109 (87.109)	Acc@5 98.438 (98.438)
Epoch: [82][64/196]	Time 0.085 (0.086)	Data 0.000 (0.005)	Loss 0.3619 (0.4132)	Acc@1 86.328 (85.739)	Acc@5 99.609 (99.411)
Epoch: [82][128/196]	Time 0.082 (0.087)	Data 0.000 (0.003)	Loss 0.4165 (0.4171)	Acc@1 84.766 (85.544)	Acc@5 99.609 (99.422)
Epoch: [82][192/196]	Time 0.075 (0.086)	Data 0.000 (0.002)	Loss 0.4170 (0.4246)	Acc@1 85.938 (85.276)	Acc@5 98.828 (99.405)
after train
n1: 30 for:
wAcc: 75.72966755212352
test acc: 72.77
Epoche: [83/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [83][0/196]	Time 0.138 (0.138)	Data 0.305 (0.305)	Loss 0.3839 (0.3839)	Acc@1 85.938 (85.938)	Acc@5 98.828 (98.828)
Epoch: [83][64/196]	Time 0.091 (0.087)	Data 0.000 (0.005)	Loss 0.3546 (0.4001)	Acc@1 86.719 (86.292)	Acc@5 100.000 (99.567)
Epoch: [83][128/196]	Time 0.080 (0.086)	Data 0.000 (0.003)	Loss 0.4580 (0.4171)	Acc@1 83.984 (85.683)	Acc@5 99.609 (99.461)
Epoch: [83][192/196]	Time 0.081 (0.086)	Data 0.000 (0.002)	Loss 0.4628 (0.4255)	Acc@1 82.422 (85.448)	Acc@5 98.828 (99.409)
after train
n1: 30 for:
wAcc: 75.73098812957124
test acc: 64.45
Epoche: [84/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [84][0/196]	Time 0.136 (0.136)	Data 0.393 (0.393)	Loss 0.4541 (0.4541)	Acc@1 83.203 (83.203)	Acc@5 98.438 (98.438)
Epoch: [84][64/196]	Time 0.072 (0.085)	Data 0.000 (0.006)	Loss 0.5072 (0.4083)	Acc@1 82.422 (86.250)	Acc@5 98.828 (99.327)
Epoch: [84][128/196]	Time 0.073 (0.086)	Data 0.000 (0.003)	Loss 0.5294 (0.4235)	Acc@1 78.906 (85.480)	Acc@5 99.609 (99.376)
Epoch: [84][192/196]	Time 0.082 (0.086)	Data 0.000 (0.002)	Loss 0.4209 (0.4233)	Acc@1 84.375 (85.444)	Acc@5 99.609 (99.385)
after train
n1: 30 for:
wAcc: 75.74044638573135
test acc: 68.84
Epoche: [85/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [85][0/196]	Time 0.139 (0.139)	Data 0.330 (0.330)	Loss 0.4001 (0.4001)	Acc@1 86.719 (86.719)	Acc@5 99.609 (99.609)
Epoch: [85][64/196]	Time 0.094 (0.085)	Data 0.000 (0.005)	Loss 0.3673 (0.4431)	Acc@1 88.281 (84.802)	Acc@5 100.000 (99.345)
Epoch: [85][128/196]	Time 0.091 (0.086)	Data 0.000 (0.003)	Loss 0.4587 (0.4326)	Acc@1 85.938 (85.068)	Acc@5 99.219 (99.370)
Epoch: [85][192/196]	Time 0.083 (0.085)	Data 0.000 (0.002)	Loss 0.4844 (0.4311)	Acc@1 82.031 (85.124)	Acc@5 99.219 (99.381)
after train
n1: 30 for:
wAcc: 73.80916348787208
test acc: 77.49
Epoche: [86/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [86][0/196]	Time 0.119 (0.119)	Data 0.337 (0.337)	Loss 0.4868 (0.4868)	Acc@1 82.422 (82.422)	Acc@5 98.828 (98.828)
Epoch: [86][64/196]	Time 0.091 (0.086)	Data 0.000 (0.005)	Loss 0.4143 (0.4278)	Acc@1 86.719 (85.282)	Acc@5 100.000 (99.387)
Epoch: [86][128/196]	Time 0.092 (0.085)	Data 0.000 (0.003)	Loss 0.3993 (0.4276)	Acc@1 86.719 (85.368)	Acc@5 100.000 (99.367)
Epoch: [86][192/196]	Time 0.080 (0.085)	Data 0.000 (0.002)	Loss 0.4073 (0.4226)	Acc@1 83.984 (85.512)	Acc@5 98.438 (99.401)
after train
n1: 30 for:
wAcc: 73.80955585735681
test acc: 72.96
Epoche: [87/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [87][0/196]	Time 0.173 (0.173)	Data 0.278 (0.278)	Loss 0.5064 (0.5064)	Acc@1 79.688 (79.688)	Acc@5 98.828 (98.828)
Epoch: [87][64/196]	Time 0.093 (0.090)	Data 0.000 (0.005)	Loss 0.4526 (0.4231)	Acc@1 84.375 (85.276)	Acc@5 99.219 (99.411)
Epoch: [87][128/196]	Time 0.093 (0.088)	Data 0.000 (0.002)	Loss 0.4214 (0.4181)	Acc@1 85.938 (85.471)	Acc@5 98.828 (99.455)
Epoch: [87][192/196]	Time 0.071 (0.086)	Data 0.000 (0.002)	Loss 0.5053 (0.4209)	Acc@1 83.984 (85.415)	Acc@5 98.438 (99.431)
after train
n1: 30 for:
wAcc: 75.31311938912215
test acc: 82.68
Epoche: [88/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [88][0/196]	Time 0.141 (0.141)	Data 0.297 (0.297)	Loss 0.4218 (0.4218)	Acc@1 85.156 (85.156)	Acc@5 100.000 (100.000)
Epoch: [88][64/196]	Time 0.089 (0.088)	Data 0.000 (0.005)	Loss 0.3717 (0.4027)	Acc@1 86.328 (86.130)	Acc@5 99.609 (99.327)
Epoch: [88][128/196]	Time 0.093 (0.086)	Data 0.000 (0.003)	Loss 0.3362 (0.4179)	Acc@1 87.109 (85.520)	Acc@5 100.000 (99.361)
Epoch: [88][192/196]	Time 0.089 (0.086)	Data 0.000 (0.002)	Loss 0.3606 (0.4143)	Acc@1 89.062 (85.719)	Acc@5 99.609 (99.387)
after train
n1: 30 for:
wAcc: 74.74466756588488
test acc: 71.34
Epoche: [89/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [89][0/196]	Time 0.130 (0.130)	Data 0.375 (0.375)	Loss 0.4575 (0.4575)	Acc@1 84.375 (84.375)	Acc@5 98.828 (98.828)
Epoch: [89][64/196]	Time 0.080 (0.085)	Data 0.000 (0.006)	Loss 0.3784 (0.4205)	Acc@1 85.547 (85.463)	Acc@5 99.609 (99.459)
Epoch: [89][128/196]	Time 0.070 (0.086)	Data 0.000 (0.003)	Loss 0.3944 (0.4227)	Acc@1 87.109 (85.486)	Acc@5 98.047 (99.385)
Epoch: [89][192/196]	Time 0.091 (0.086)	Data 0.000 (0.002)	Loss 0.4895 (0.4227)	Acc@1 84.375 (85.466)	Acc@5 100.000 (99.399)
after train
n1: 30 for:
wAcc: 75.34467562345968
test acc: 75.24
Epoche: [90/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [90][0/196]	Time 0.129 (0.129)	Data 0.315 (0.315)	Loss 0.4066 (0.4066)	Acc@1 85.938 (85.938)	Acc@5 99.609 (99.609)
Epoch: [90][64/196]	Time 0.087 (0.084)	Data 0.000 (0.005)	Loss 0.4752 (0.4001)	Acc@1 83.203 (86.322)	Acc@5 100.000 (99.459)
Epoch: [90][128/196]	Time 0.078 (0.085)	Data 0.000 (0.003)	Loss 0.5353 (0.4142)	Acc@1 83.594 (85.710)	Acc@5 98.047 (99.446)
Epoch: [90][192/196]	Time 0.070 (0.084)	Data 0.000 (0.002)	Loss 0.5468 (0.4207)	Acc@1 83.203 (85.438)	Acc@5 98.438 (99.429)
after train
n1: 30 for:
wAcc: 73.86773132026953
test acc: 73.17
IndexL: 0
Module= Conv2d(3, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); indexL: 1
indexConv: 1
modulelist[indexConv]: BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
 moduleBn: BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
indexConv: 2
modulelist[indexConv]: ReLU(inplace=True)
indexConv: 3
modulelist[indexConv]: Sequential(
  (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
module1: Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); indexConv: 3; index: 3
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (8, 3, 3, 3); new shape: (8, 3, 3, 3)
new shape: (16, 3, 3, 3)
module after: Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([16, 3, 3, 3])
Batchnorm1
oldw2 shape: (8, 8, 3, 3); new shape w2: (8, 8, 3, 3)
new shape: (8, 16, 3, 3)
module1 after: Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 3
Module= Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 3
 moduleBn: BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 1; indexL: 3
module1: Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3; indexL: 3
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (8, 16, 3, 3); new shape: (8, 16, 3, 3)
new shape: (16, 16, 3, 3)
module after: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([16, 16, 3, 3])
Batchnorm1
oldw2 shape: (8, 8, 3, 3); new shape w2: (8, 8, 3, 3)
new shape: (8, 16, 3, 3)
module1 after: Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 3
Module= Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3 indexL: 3
 moduleBn: BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 4; indexL: 3
Module= Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 4
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (8, 16, 3, 3); new shape: (8, 16, 3, 3)
new shape: (16, 16, 3, 3)
module after: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([16, 16, 3, 3])
Batchnorm1
oldw2 shape: (8, 8, 3, 3); new shape w2: (8, 8, 3, 3)
new shape: (8, 16, 3, 3)
module1 after: Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 4
Module= Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 4
 moduleBn: BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 1; indexL: 4
module1: Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3; indexL: 4
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (8, 16, 3, 3); new shape: (8, 16, 3, 3)
new shape: (16, 16, 3, 3)
module after: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([16, 16, 3, 3])
Batchnorm1
oldw2 shape: (8, 8, 3, 3); new shape w2: (8, 8, 3, 3)
new shape: (8, 16, 3, 3)
module1 after: Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 4
Module= Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3 indexL: 4
 moduleBn: BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 4; indexL: 4
Module= Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 5
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (8, 16, 3, 3); new shape: (8, 16, 3, 3)
new shape: (16, 16, 3, 3)
module after: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([16, 16, 3, 3])
Batchnorm1
oldw2 shape: (8, 8, 3, 3); new shape w2: (8, 8, 3, 3)
new shape: (8, 16, 3, 3)
module1 after: Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 5
Module= Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 5
 moduleBn: BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 1; indexL: 5
module1: Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3; indexL: 5
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (8, 16, 3, 3); new shape: (8, 16, 3, 3)
new shape: (16, 16, 3, 3)
module after: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([16, 16, 3, 3])
Batchnorm1
oldw2 shape: (8, 8, 3, 3); new shape w2: (8, 8, 3, 3)
new shape: (8, 16, 3, 3)
module1 after: Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 5
Module= Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3 indexL: 5
 moduleBn: BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 4; indexL: 5
Module= Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 6
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (8, 16, 3, 3); new shape: (8, 16, 3, 3)
new shape: (16, 16, 3, 3)
module after: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([16, 16, 3, 3])
Batchnorm1
oldw2 shape: (8, 8, 3, 3); new shape w2: (8, 8, 3, 3)
new shape: (8, 16, 3, 3)
module1 after: Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 6
Module= Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 6
 moduleBn: BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 1; indexL: 6
module1: Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3; indexL: 6
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (8, 16, 3, 3); new shape: (8, 16, 3, 3)
new shape: (16, 16, 3, 3)
module after: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([16, 16, 3, 3])
Batchnorm1
oldw2 shape: (8, 8, 3, 3); new shape w2: (8, 8, 3, 3)
new shape: (8, 16, 3, 3)
module1 after: Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 6
Module= Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3 indexL: 6
 moduleBn: BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 4; indexL: 6
Module= Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 7
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (8, 16, 3, 3); new shape: (8, 16, 3, 3)
new shape: (16, 16, 3, 3)
module after: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([16, 16, 3, 3])
Batchnorm1
oldw2 shape: (8, 8, 3, 3); new shape w2: (8, 8, 3, 3)
new shape: (8, 16, 3, 3)
module1 after: Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 7
Module= Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 7
 moduleBn: BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 1; indexL: 7
module1: Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3; indexL: 7
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (8, 16, 3, 3); new shape: (8, 16, 3, 3)
new shape: (16, 16, 3, 3)
module after: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([16, 16, 3, 3])
Batchnorm1
oldw2 shape: (8, 8, 3, 3); new shape w2: (8, 8, 3, 3)
new shape: (8, 16, 3, 3)
module1 after: Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 7
Module= Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3 indexL: 7
 moduleBn: BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 4; indexL: 7
Module= Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 8
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (8, 16, 3, 3); new shape: (8, 16, 3, 3)
new shape: (16, 16, 3, 3)
module after: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([16, 16, 3, 3])
Batchnorm1
oldw2 shape: (16, 8, 3, 3); new shape w2: (16, 8, 3, 3)
new shape: (16, 16, 3, 3)
module1 after: Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
IndexL: 8
Module= Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False); i: 0 indexL: 8
 moduleBn: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 1; indexL: 8
module1: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3; indexL: 8
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (16, 16, 3, 3); new shape: (16, 16, 3, 3)
new shape: (32, 16, 3, 3)
module after: Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
size of weight after: torch.Size([32, 16, 3, 3])
Batchnorm1
oldw2 shape: (16, 16, 3, 3); new shape w2: (16, 16, 3, 3)
new shape: (16, 32, 3, 3)
module1 after: Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 8
Module= Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3 indexL: 8
 moduleBn: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 4; indexL: 8
Module= Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 9
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (16, 32, 3, 3); new shape: (16, 32, 3, 3)
new shape: (32, 32, 3, 3)
module after: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([32, 32, 3, 3])
Batchnorm1
oldw2 shape: (16, 8, 1, 1); new shape w2: (16, 8, 1, 1)
new shape: (16, 16, 1, 1)
module1 after: Conv2d(16, 16, kernel_size=(1, 1), stride=(2, 2), bias=False)
IndexL: 9
Module= Conv2d(16, 16, kernel_size=(1, 1), stride=(2, 2), bias=False); i: 0 indexL: 9
 moduleBn: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 1; indexL: 9
Module= Conv2d(16, 16, kernel_size=(1, 1), stride=(2, 2), bias=False); i: 0 indexL: 10
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (16, 16, 1, 1); new shape: (16, 16, 1, 1)
new shape: (32, 16, 1, 1)
module after: Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
size of weight after: torch.Size([32, 16, 1, 1])
Batchnorm1
oldw2 shape: (16, 16, 3, 3); new shape w2: (16, 16, 3, 3)
new shape: (16, 32, 3, 3)
module1 after: Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 10
Module= Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 10
 moduleBn: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 1; indexL: 10
module1: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3; indexL: 10
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (16, 32, 3, 3); new shape: (16, 32, 3, 3)
new shape: (32, 32, 3, 3)
module after: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([32, 32, 3, 3])
Batchnorm1
oldw2 shape: (16, 16, 3, 3); new shape w2: (16, 16, 3, 3)
new shape: (16, 32, 3, 3)
module1 after: Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 10
Module= Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3 indexL: 10
 moduleBn: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 4; indexL: 10
Module= Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 11
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (16, 32, 3, 3); new shape: (16, 32, 3, 3)
new shape: (32, 32, 3, 3)
module after: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([32, 32, 3, 3])
Batchnorm1
oldw2 shape: (16, 16, 3, 3); new shape w2: (16, 16, 3, 3)
new shape: (16, 32, 3, 3)
module1 after: Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 11
Module= Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 11
 moduleBn: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 1; indexL: 11
module1: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3; indexL: 11
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (16, 32, 3, 3); new shape: (16, 32, 3, 3)
new shape: (32, 32, 3, 3)
module after: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([32, 32, 3, 3])
Batchnorm1
oldw2 shape: (16, 16, 3, 3); new shape w2: (16, 16, 3, 3)
new shape: (16, 32, 3, 3)
module1 after: Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 11
Module= Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3 indexL: 11
 moduleBn: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 4; indexL: 11
Module= Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 12
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (16, 32, 3, 3); new shape: (16, 32, 3, 3)
new shape: (32, 32, 3, 3)
module after: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([32, 32, 3, 3])
Batchnorm1
oldw2 shape: (16, 16, 3, 3); new shape w2: (16, 16, 3, 3)
new shape: (16, 32, 3, 3)
module1 after: Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 12
Module= Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 12
 moduleBn: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 1; indexL: 12
module1: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3; indexL: 12
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (16, 32, 3, 3); new shape: (16, 32, 3, 3)
new shape: (32, 32, 3, 3)
module after: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([32, 32, 3, 3])
Batchnorm1
oldw2 shape: (16, 16, 3, 3); new shape w2: (16, 16, 3, 3)
new shape: (16, 32, 3, 3)
module1 after: Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 12
Module= Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3 indexL: 12
 moduleBn: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 4; indexL: 12
Module= Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 13
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (16, 32, 3, 3); new shape: (16, 32, 3, 3)
new shape: (32, 32, 3, 3)
module after: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([32, 32, 3, 3])
Batchnorm1
oldw2 shape: (16, 16, 3, 3); new shape w2: (16, 16, 3, 3)
new shape: (16, 32, 3, 3)
module1 after: Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 13
Module= Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 13
 moduleBn: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 1; indexL: 13
module1: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3; indexL: 13
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (16, 32, 3, 3); new shape: (16, 32, 3, 3)
new shape: (32, 32, 3, 3)
module after: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([32, 32, 3, 3])
Batchnorm1
oldw2 shape: (16, 16, 3, 3); new shape w2: (16, 16, 3, 3)
new shape: (16, 32, 3, 3)
module1 after: Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 13
Module= Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3 indexL: 13
 moduleBn: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 4; indexL: 13
Module= Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 14
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (16, 32, 3, 3); new shape: (16, 32, 3, 3)
new shape: (32, 32, 3, 3)
module after: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([32, 32, 3, 3])
Batchnorm1
oldw2 shape: (32, 16, 3, 3); new shape w2: (32, 16, 3, 3)
new shape: (32, 32, 3, 3)
module1 after: Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
IndexL: 14
Module= Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False); i: 0 indexL: 14
 moduleBn: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 1; indexL: 14
module1: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3; indexL: 14
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (32, 32, 3, 3); new shape: (32, 32, 3, 3)
new shape: (64, 32, 3, 3)
module after: Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
size of weight after: torch.Size([64, 32, 3, 3])
Batchnorm1
oldw2 shape: (32, 32, 3, 3); new shape w2: (32, 32, 3, 3)
new shape: (32, 64, 3, 3)
module1 after: Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 14
Module= Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3 indexL: 14
 moduleBn: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 4; indexL: 14
Module= Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 15
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (32, 64, 3, 3); new shape: (32, 64, 3, 3)
new shape: (64, 64, 3, 3)
module after: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([64, 64, 3, 3])
Batchnorm1
oldw2 shape: (32, 16, 1, 1); new shape w2: (32, 16, 1, 1)
new shape: (32, 32, 1, 1)
module1 after: Conv2d(32, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
IndexL: 15
Module= Conv2d(32, 32, kernel_size=(1, 1), stride=(2, 2), bias=False); i: 0 indexL: 15
 moduleBn: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 1; indexL: 15
Module= Conv2d(32, 32, kernel_size=(1, 1), stride=(2, 2), bias=False); i: 0 indexL: 16
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (32, 32, 1, 1); new shape: (32, 32, 1, 1)
new shape: (64, 32, 1, 1)
module after: Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
size of weight after: torch.Size([64, 32, 1, 1])
Batchnorm1
oldw2 shape: (32, 32, 3, 3); new shape w2: (32, 32, 3, 3)
new shape: (32, 64, 3, 3)
module1 after: Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 16
Module= Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 16
 moduleBn: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 1; indexL: 16
module1: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3; indexL: 16
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (32, 64, 3, 3); new shape: (32, 64, 3, 3)
new shape: (64, 64, 3, 3)
module after: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([64, 64, 3, 3])
Batchnorm1
oldw2 shape: (32, 32, 3, 3); new shape w2: (32, 32, 3, 3)
new shape: (32, 64, 3, 3)
module1 after: Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 16
Module= Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3 indexL: 16
 moduleBn: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 4; indexL: 16
Module= Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 17
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (32, 64, 3, 3); new shape: (32, 64, 3, 3)
new shape: (64, 64, 3, 3)
module after: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([64, 64, 3, 3])
Batchnorm1
oldw2 shape: (32, 32, 3, 3); new shape w2: (32, 32, 3, 3)
new shape: (32, 64, 3, 3)
module1 after: Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 17
Module= Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 17
 moduleBn: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 1; indexL: 17
module1: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3; indexL: 17
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (32, 64, 3, 3); new shape: (32, 64, 3, 3)
new shape: (64, 64, 3, 3)
module after: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([64, 64, 3, 3])
Batchnorm1
oldw2 shape: (32, 32, 3, 3); new shape w2: (32, 32, 3, 3)
new shape: (32, 64, 3, 3)
module1 after: Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 17
Module= Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3 indexL: 17
 moduleBn: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 4; indexL: 17
Module= Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 18
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (32, 64, 3, 3); new shape: (32, 64, 3, 3)
new shape: (64, 64, 3, 3)
module after: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([64, 64, 3, 3])
Batchnorm1
oldw2 shape: (32, 32, 3, 3); new shape w2: (32, 32, 3, 3)
new shape: (32, 64, 3, 3)
module1 after: Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 18
Module= Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 18
 moduleBn: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 1; indexL: 18
module1: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3; indexL: 18
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (32, 64, 3, 3); new shape: (32, 64, 3, 3)
new shape: (64, 64, 3, 3)
module after: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([64, 64, 3, 3])
Batchnorm1
oldw2 shape: (32, 32, 3, 3); new shape w2: (32, 32, 3, 3)
new shape: (32, 64, 3, 3)
module1 after: Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 18
Module= Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3 indexL: 18
 moduleBn: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 4; indexL: 18
Module= Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 19
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (32, 64, 3, 3); new shape: (32, 64, 3, 3)
new shape: (64, 64, 3, 3)
module after: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([64, 64, 3, 3])
Batchnorm1
oldw2 shape: (32, 32, 3, 3); new shape w2: (32, 32, 3, 3)
new shape: (32, 64, 3, 3)
module1 after: Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 19
Module= Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 0 indexL: 19
 moduleBn: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 1; indexL: 19
module1: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3; indexL: 19
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (32, 64, 3, 3); new shape: (32, 64, 3, 3)
new shape: (64, 64, 3, 3)
module after: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([64, 64, 3, 3])
Batchnorm1
oldw2 shape: (32, 32, 3, 3); new shape w2: (32, 32, 3, 3)
new shape: (32, 64, 3, 3)
module1 after: Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
IndexL: 19
Module= Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False); i: 3 indexL: 19
 moduleBn: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True); i: 4; indexL: 19
dtype tensor: torch.float32; dtype numpy: float32
dtype new tensor: float64
oldw shape: (32, 64, 3, 3); new shape: (32, 64, 3, 3)
new shape: (64, 64, 3, 3)
module after: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
size of weight after: torch.Size([64, 64, 3, 3])
Batchnorm1
oldw2 shape: (10, 32); new shape w2: (10, 32)
new shape: (10, 64)
module after: Linear(in_features=64, out_features=10, bias=True)
size of weight after: torch.Size([10, 64])
self: N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): Sequential(
      (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (4): Sequential(
      (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (5): Sequential(
      (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (6): Sequential(
      (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (7): Sequential(
      (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (8): Sequential(
      (0): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (9): Sequential(
      (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (10): Sequential(
      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (11): Sequential(
      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (12): Sequential(
      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (13): Sequential(
      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (14): Sequential(
      (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (15): Sequential(
      (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (16): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (17): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (18): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (19): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (20): AdaptiveAvgPool2d(output_size=(1, 1))
    (21): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
module: Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Size of Weight: torch.Size([16, 3, 3, 3])
module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Size of Weight: torch.Size([16])
module: ReLU(inplace=True)
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
Size of Weight: torch.Size([16, 16, 3, 3])
Size of Weight: torch.Size([16])
Size of Weight: torch.Size([16, 16, 3, 3])
Size of Weight: torch.Size([16])
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
Size of Weight: torch.Size([16, 16, 3, 3])
Size of Weight: torch.Size([16])
Size of Weight: torch.Size([16, 16, 3, 3])
Size of Weight: torch.Size([16])
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
Size of Weight: torch.Size([16, 16, 3, 3])
Size of Weight: torch.Size([16])
Size of Weight: torch.Size([16, 16, 3, 3])
Size of Weight: torch.Size([16])
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
Size of Weight: torch.Size([16, 16, 3, 3])
Size of Weight: torch.Size([16])
Size of Weight: torch.Size([16, 16, 3, 3])
Size of Weight: torch.Size([16])
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
Size of Weight: torch.Size([16, 16, 3, 3])
Size of Weight: torch.Size([16])
Size of Weight: torch.Size([16, 16, 3, 3])
Size of Weight: torch.Size([16])
module: Sequential(
  (0): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
Size of Weight: torch.Size([32, 16, 3, 3])
Size of Weight: torch.Size([32])
Size of Weight: torch.Size([32, 32, 3, 3])
Size of Weight: torch.Size([32])
Sequential: [Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1)), BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True), ReLU(inplace=True), Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)), BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)]
module: Sequential(
  (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
Size of Weight: torch.Size([32, 16, 1, 1])
Size of Weight: torch.Size([32])
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
Size of Weight: torch.Size([32, 32, 3, 3])
Size of Weight: torch.Size([32])
Size of Weight: torch.Size([32, 32, 3, 3])
Size of Weight: torch.Size([32])
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
Size of Weight: torch.Size([32, 32, 3, 3])
Size of Weight: torch.Size([32])
Size of Weight: torch.Size([32, 32, 3, 3])
Size of Weight: torch.Size([32])
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
Size of Weight: torch.Size([32, 32, 3, 3])
Size of Weight: torch.Size([32])
Size of Weight: torch.Size([32, 32, 3, 3])
Size of Weight: torch.Size([32])
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
Size of Weight: torch.Size([32, 32, 3, 3])
Size of Weight: torch.Size([32])
Size of Weight: torch.Size([32, 32, 3, 3])
Size of Weight: torch.Size([32])
module: Sequential(
  (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
Size of Weight: torch.Size([64, 32, 3, 3])
Size of Weight: torch.Size([64])
Size of Weight: torch.Size([64, 64, 3, 3])
Size of Weight: torch.Size([64])
module: Sequential(
  (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
Size of Weight: torch.Size([64, 32, 1, 1])
Size of Weight: torch.Size([64])
module: Sequential(
  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
Size of Weight: torch.Size([64, 64, 3, 3])
Size of Weight: torch.Size([64])
Size of Weight: torch.Size([64, 64, 3, 3])
Size of Weight: torch.Size([64])
module: Sequential(
  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
Size of Weight: torch.Size([64, 64, 3, 3])
Size of Weight: torch.Size([64])
Size of Weight: torch.Size([64, 64, 3, 3])
Size of Weight: torch.Size([64])
module: Sequential(
  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
Size of Weight: torch.Size([64, 64, 3, 3])
Size of Weight: torch.Size([64])
Size of Weight: torch.Size([64, 64, 3, 3])
Size of Weight: torch.Size([64])
module: Sequential(
  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
  (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
Size of Weight: torch.Size([64, 64, 3, 3])
Size of Weight: torch.Size([64])
Size of Weight: torch.Size([64, 64, 3, 3])
Size of Weight: torch.Size([64])
module: AdaptiveAvgPool2d(output_size=(1, 1))
module: Linear(in_features=64, out_features=10, bias=True)
Size of Weight: torch.Size([10, 64])
Epoche: [91/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [91][0/196]	Time 0.186 (0.186)	Data 0.366 (0.366)	Loss 148.9030 (148.9030)	Acc@1 15.625 (15.625)	Acc@5 54.688 (54.688)
Epoch: [91][64/196]	Time 0.104 (0.113)	Data 0.000 (0.006)	Loss 2.9648 (85.1707)	Acc@1 11.719 (10.805)	Acc@5 53.906 (52.704)
Epoch: [91][128/196]	Time 0.101 (0.113)	Data 0.000 (0.003)	Loss 2.2419 (44.1102)	Acc@1 15.625 (12.134)	Acc@5 72.266 (56.023)
Epoch: [91][192/196]	Time 0.105 (0.112)	Data 0.000 (0.002)	Loss 2.2429 (30.2303)	Acc@1 16.406 (13.374)	Acc@5 62.109 (58.731)
after train
n1: 30 for:
wAcc: 74.32868184673141
test acc: 17.13
Epoche: [92/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [92][0/196]	Time 0.158 (0.158)	Data 0.298 (0.298)	Loss 2.2130 (2.2130)	Acc@1 19.531 (19.531)	Acc@5 65.625 (65.625)
Epoch: [92][64/196]	Time 0.120 (0.115)	Data 0.000 (0.005)	Loss 2.1982 (2.2071)	Acc@1 16.797 (17.194)	Acc@5 67.578 (67.500)
Epoch: [92][128/196]	Time 0.212 (0.116)	Data 0.000 (0.003)	Loss 2.1588 (2.1911)	Acc@1 16.797 (17.714)	Acc@5 69.531 (68.338)
Epoch: [92][192/196]	Time 0.091 (0.115)	Data 0.000 (0.002)	Loss 2.1891 (2.1775)	Acc@1 17.578 (18.232)	Acc@5 70.703 (69.256)
after train
n1: 30 for:
wAcc: 70.62109692136346
test acc: 18.96
Epoche: [93/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [93][0/196]	Time 0.191 (0.191)	Data 0.346 (0.346)	Loss 2.2493 (2.2493)	Acc@1 15.625 (15.625)	Acc@5 66.016 (66.016)
Epoch: [93][64/196]	Time 0.104 (0.116)	Data 0.000 (0.006)	Loss 2.1070 (2.1266)	Acc@1 19.531 (19.982)	Acc@5 75.391 (72.602)
Epoch: [93][128/196]	Time 0.105 (0.116)	Data 0.000 (0.003)	Loss 2.1275 (2.1082)	Acc@1 16.406 (20.564)	Acc@5 71.875 (73.640)
Epoch: [93][192/196]	Time 0.114 (0.116)	Data 0.000 (0.002)	Loss 2.0914 (2.0963)	Acc@1 23.828 (20.863)	Acc@5 73.047 (74.401)
after train
n1: 30 for:
wAcc: 68.55159093673991
test acc: 21.3
Epoche: [94/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [94][0/196]	Time 0.190 (0.190)	Data 0.281 (0.281)	Loss 2.0407 (2.0407)	Acc@1 24.219 (24.219)	Acc@5 75.391 (75.391)
Epoch: [94][64/196]	Time 0.121 (0.114)	Data 0.000 (0.005)	Loss 1.9810 (2.0564)	Acc@1 22.266 (22.067)	Acc@5 80.859 (76.370)
Epoch: [94][128/196]	Time 0.119 (0.116)	Data 0.000 (0.002)	Loss 1.9995 (2.0438)	Acc@1 21.484 (22.135)	Acc@5 78.906 (77.144)
Epoch: [94][192/196]	Time 0.121 (0.115)	Data 0.000 (0.002)	Loss 2.1654 (2.0357)	Acc@1 16.016 (22.223)	Acc@5 70.312 (77.449)
after train
n1: 30 for:
wAcc: 64.69211086275294
test acc: 23.73
Epoche: [95/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [95][0/196]	Time 0.163 (0.163)	Data 0.268 (0.268)	Loss 2.0624 (2.0624)	Acc@1 19.141 (19.141)	Acc@5 77.344 (77.344)
Epoch: [95][64/196]	Time 0.112 (0.113)	Data 0.000 (0.004)	Loss 1.9946 (2.0061)	Acc@1 25.391 (23.275)	Acc@5 77.734 (78.930)
Epoch: [95][128/196]	Time 0.108 (0.114)	Data 0.000 (0.002)	Loss 1.9673 (1.9946)	Acc@1 23.828 (23.752)	Acc@5 80.469 (79.339)
Epoch: [95][192/196]	Time 0.107 (0.115)	Data 0.000 (0.002)	Loss 2.0081 (1.9873)	Acc@1 23.047 (24.002)	Acc@5 78.906 (79.635)
after train
n1: 30 for:
wAcc: 62.6579981888906
test acc: 25.13
Epoche: [96/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [96][0/196]	Time 0.165 (0.165)	Data 0.338 (0.338)	Loss 1.9046 (1.9046)	Acc@1 27.734 (27.734)	Acc@5 81.250 (81.250)
Epoch: [96][64/196]	Time 0.126 (0.116)	Data 0.000 (0.005)	Loss 1.9253 (1.9579)	Acc@1 23.438 (25.409)	Acc@5 82.031 (80.799)
Epoch: [96][128/196]	Time 0.112 (0.115)	Data 0.000 (0.003)	Loss 1.9620 (1.9526)	Acc@1 22.266 (25.297)	Acc@5 80.859 (80.959)
Epoch: [96][192/196]	Time 0.107 (0.114)	Data 0.000 (0.002)	Loss 1.9046 (1.9470)	Acc@1 26.172 (25.712)	Acc@5 82.422 (81.040)
after train
n1: 30 for:
wAcc: 59.35645713180439
test acc: 25.64
Epoche: [97/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [97][0/196]	Time 0.160 (0.160)	Data 0.271 (0.271)	Loss 1.8885 (1.8885)	Acc@1 28.125 (28.125)	Acc@5 82.031 (82.031)
Epoch: [97][64/196]	Time 0.116 (0.118)	Data 0.000 (0.005)	Loss 1.9528 (1.9206)	Acc@1 26.953 (26.977)	Acc@5 79.688 (81.827)
Epoch: [97][128/196]	Time 0.117 (0.116)	Data 0.000 (0.002)	Loss 1.9213 (1.9173)	Acc@1 23.047 (26.986)	Acc@5 82.031 (81.940)
Epoch: [97][192/196]	Time 0.123 (0.116)	Data 0.000 (0.002)	Loss 1.9786 (1.9090)	Acc@1 25.000 (27.186)	Acc@5 80.469 (82.118)
after train
n1: 30 for:
wAcc: 57.95171493308308
test acc: 28.8
Epoche: [98/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [98][0/196]	Time 0.164 (0.164)	Data 0.337 (0.337)	Loss 1.9108 (1.9108)	Acc@1 32.031 (32.031)	Acc@5 82.031 (82.031)
Epoch: [98][64/196]	Time 0.117 (0.114)	Data 0.000 (0.005)	Loss 1.7730 (1.8914)	Acc@1 37.891 (28.377)	Acc@5 83.984 (82.867)
Epoch: [98][128/196]	Time 0.124 (0.114)	Data 0.000 (0.003)	Loss 1.8635 (1.8804)	Acc@1 29.688 (28.588)	Acc@5 83.984 (83.052)
Epoch: [98][192/196]	Time 0.123 (0.113)	Data 0.000 (0.002)	Loss 1.9519 (1.8747)	Acc@1 26.562 (29.026)	Acc@5 78.125 (83.126)
after train
n1: 30 for:
wAcc: 55.59390599204706
test acc: 28.37
Epoche: [99/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [99][0/196]	Time 0.254 (0.254)	Data 0.341 (0.341)	Loss 1.8557 (1.8557)	Acc@1 30.859 (30.859)	Acc@5 84.375 (84.375)
Epoch: [99][64/196]	Time 0.124 (0.116)	Data 0.000 (0.006)	Loss 1.8864 (1.8507)	Acc@1 32.422 (29.663)	Acc@5 83.594 (84.309)
Epoch: [99][128/196]	Time 0.111 (0.115)	Data 0.000 (0.003)	Loss 1.7795 (1.8482)	Acc@1 32.812 (29.966)	Acc@5 84.375 (83.921)
Epoch: [99][192/196]	Time 0.107 (0.115)	Data 0.000 (0.002)	Loss 1.7835 (1.8458)	Acc@1 29.297 (30.058)	Acc@5 89.062 (84.059)
after train
n1: 30 for:
wAcc: 54.52130112606111
test acc: 29.3
Epoche: [100/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [100][0/196]	Time 0.176 (0.176)	Data 0.289 (0.289)	Loss 1.8227 (1.8227)	Acc@1 29.297 (29.297)	Acc@5 84.375 (84.375)
Epoch: [100][64/196]	Time 0.108 (0.115)	Data 0.000 (0.005)	Loss 1.7934 (1.8338)	Acc@1 30.469 (30.337)	Acc@5 86.719 (84.952)
Epoch: [100][128/196]	Time 0.117 (0.114)	Data 0.000 (0.003)	Loss 1.8208 (1.8268)	Acc@1 30.469 (31.032)	Acc@5 87.109 (84.744)
Epoch: [100][192/196]	Time 0.104 (0.115)	Data 0.000 (0.002)	Loss 1.8006 (1.8223)	Acc@1 31.250 (31.230)	Acc@5 85.938 (84.796)
after train
n1: 30 for:
wAcc: 50.8037602905181
test acc: 33.57
Epoche: [101/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [101][0/196]	Time 0.196 (0.196)	Data 0.315 (0.315)	Loss 1.8158 (1.8158)	Acc@1 32.422 (32.422)	Acc@5 89.453 (89.453)
Epoch: [101][64/196]	Time 0.116 (0.113)	Data 0.000 (0.005)	Loss 1.8415 (1.8005)	Acc@1 30.859 (31.701)	Acc@5 85.938 (85.331)
Epoch: [101][128/196]	Time 0.114 (0.111)	Data 0.000 (0.003)	Loss 1.7625 (1.7957)	Acc@1 30.859 (32.331)	Acc@5 87.109 (85.565)
Epoch: [101][192/196]	Time 0.098 (0.112)	Data 0.000 (0.002)	Loss 1.8030 (1.7910)	Acc@1 33.594 (32.555)	Acc@5 87.500 (85.806)
after train
n1: 30 for:
wAcc: 51.3240047691766
test acc: 33.3
Epoche: [102/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [102][0/196]	Time 0.188 (0.188)	Data 0.292 (0.292)	Loss 1.7075 (1.7075)	Acc@1 37.500 (37.500)	Acc@5 88.281 (88.281)
Epoch: [102][64/196]	Time 0.122 (0.114)	Data 0.000 (0.005)	Loss 1.7114 (1.7786)	Acc@1 37.500 (32.536)	Acc@5 87.500 (86.340)
Epoch: [102][128/196]	Time 0.097 (0.113)	Data 0.000 (0.003)	Loss 1.7077 (1.7707)	Acc@1 32.031 (33.239)	Acc@5 91.016 (86.310)
Epoch: [102][192/196]	Time 0.095 (0.113)	Data 0.000 (0.002)	Loss 1.7573 (1.7662)	Acc@1 33.594 (33.248)	Acc@5 86.328 (86.389)
after train
n1: 30 for:
wAcc: 50.56593811209053
test acc: 35.65
Epoche: [103/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [103][0/196]	Time 0.210 (0.210)	Data 0.327 (0.327)	Loss 1.7235 (1.7235)	Acc@1 33.594 (33.594)	Acc@5 86.719 (86.719)
Epoch: [103][64/196]	Time 0.099 (0.117)	Data 0.000 (0.005)	Loss 1.7723 (1.7513)	Acc@1 28.125 (33.714)	Acc@5 87.500 (87.121)
Epoch: [103][128/196]	Time 0.102 (0.115)	Data 0.000 (0.003)	Loss 1.7359 (1.7516)	Acc@1 34.375 (33.906)	Acc@5 87.891 (86.961)
Epoch: [103][192/196]	Time 0.111 (0.115)	Data 0.000 (0.002)	Loss 1.6947 (1.7481)	Acc@1 38.672 (33.946)	Acc@5 88.672 (86.964)
after train
n1: 30 for:
wAcc: 49.15258746561582
test acc: 36.13
Epoche: [104/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [104][0/196]	Time 0.175 (0.175)	Data 0.377 (0.377)	Loss 1.7774 (1.7774)	Acc@1 33.984 (33.984)	Acc@5 84.375 (84.375)
Epoch: [104][64/196]	Time 0.104 (0.114)	Data 0.000 (0.006)	Loss 1.7003 (1.7367)	Acc@1 37.109 (34.706)	Acc@5 86.328 (86.989)
Epoch: [104][128/196]	Time 0.122 (0.115)	Data 0.000 (0.003)	Loss 1.6282 (1.7330)	Acc@1 37.109 (34.702)	Acc@5 89.062 (87.167)
Epoch: [104][192/196]	Time 0.107 (0.114)	Data 0.000 (0.002)	Loss 1.6328 (1.7272)	Acc@1 37.109 (34.889)	Acc@5 89.453 (87.395)
after train
n1: 30 for:
wAcc: 48.06377465389244
test acc: 36.75
Epoche: [105/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [105][0/196]	Time 0.192 (0.192)	Data 0.267 (0.267)	Loss 1.7677 (1.7677)	Acc@1 35.156 (35.156)	Acc@5 85.938 (85.938)
Epoch: [105][64/196]	Time 0.121 (0.113)	Data 0.000 (0.004)	Loss 1.7404 (1.7016)	Acc@1 37.500 (36.016)	Acc@5 87.109 (87.782)
Epoch: [105][128/196]	Time 0.116 (0.113)	Data 0.000 (0.002)	Loss 1.6863 (1.7048)	Acc@1 38.281 (35.904)	Acc@5 88.672 (87.978)
Epoch: [105][192/196]	Time 0.117 (0.113)	Data 0.000 (0.002)	Loss 1.6510 (1.6972)	Acc@1 40.625 (36.077)	Acc@5 85.547 (88.109)
after train
n1: 30 for:
wAcc: 45.737894116518206
test acc: 37.35
Epoche: [106/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [106][0/196]	Time 0.158 (0.158)	Data 0.304 (0.304)	Loss 1.6533 (1.6533)	Acc@1 33.984 (33.984)	Acc@5 90.234 (90.234)
Epoch: [106][64/196]	Time 0.116 (0.115)	Data 0.000 (0.005)	Loss 1.7192 (1.6802)	Acc@1 37.109 (36.478)	Acc@5 87.891 (88.335)
Epoch: [106][128/196]	Time 0.113 (0.112)	Data 0.000 (0.003)	Loss 1.6636 (1.6805)	Acc@1 36.328 (36.477)	Acc@5 89.844 (88.408)
Epoch: [106][192/196]	Time 0.109 (0.114)	Data 0.000 (0.002)	Loss 1.6648 (1.6755)	Acc@1 33.984 (36.777)	Acc@5 87.891 (88.472)
after train
n1: 30 for:
wAcc: 46.262158334268314
test acc: 38.06
Epoche: [107/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [107][0/196]	Time 0.170 (0.170)	Data 0.367 (0.367)	Loss 1.6457 (1.6457)	Acc@1 36.719 (36.719)	Acc@5 87.500 (87.500)
Epoch: [107][64/196]	Time 0.121 (0.113)	Data 0.000 (0.006)	Loss 1.6496 (1.6629)	Acc@1 37.500 (37.151)	Acc@5 87.500 (88.630)
Epoch: [107][128/196]	Time 0.120 (0.115)	Data 0.000 (0.003)	Loss 1.5936 (1.6604)	Acc@1 41.406 (37.291)	Acc@5 90.625 (88.742)
Epoch: [107][192/196]	Time 0.099 (0.114)	Data 0.000 (0.002)	Loss 1.5421 (1.6535)	Acc@1 41.797 (37.757)	Acc@5 89.844 (88.911)
after train
n1: 30 for:
wAcc: 46.6813106443452
test acc: 39.7
Epoche: [108/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [108][0/196]	Time 0.219 (0.219)	Data 0.352 (0.352)	Loss 1.6359 (1.6359)	Acc@1 38.281 (38.281)	Acc@5 88.672 (88.672)
Epoch: [108][64/196]	Time 0.123 (0.119)	Data 0.000 (0.006)	Loss 1.6808 (1.6421)	Acc@1 35.938 (37.416)	Acc@5 87.891 (89.207)
Epoch: [108][128/196]	Time 0.126 (0.116)	Data 0.000 (0.003)	Loss 1.5964 (1.6383)	Acc@1 38.672 (38.078)	Acc@5 91.797 (89.332)
Epoch: [108][192/196]	Time 0.112 (0.115)	Data 0.000 (0.002)	Loss 1.6049 (1.6279)	Acc@1 39.844 (38.583)	Acc@5 91.797 (89.554)
after train
n1: 30 for:
wAcc: 46.492559924610056
test acc: 38.49
Epoche: [109/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [109][0/196]	Time 0.175 (0.175)	Data 0.305 (0.305)	Loss 1.6124 (1.6124)	Acc@1 38.281 (38.281)	Acc@5 88.281 (88.281)
Epoch: [109][64/196]	Time 0.105 (0.114)	Data 0.000 (0.005)	Loss 1.6576 (1.6040)	Acc@1 41.016 (40.000)	Acc@5 87.109 (90.006)
Epoch: [109][128/196]	Time 0.099 (0.114)	Data 0.000 (0.003)	Loss 1.5047 (1.5953)	Acc@1 44.141 (40.362)	Acc@5 92.578 (89.956)
Epoch: [109][192/196]	Time 0.090 (0.113)	Data 0.000 (0.002)	Loss 1.5123 (1.5904)	Acc@1 43.750 (40.550)	Acc@5 91.406 (90.247)
after train
n1: 30 for:
wAcc: 46.10637113744417
test acc: 40.72
Epoche: [110/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [110][0/196]	Time 0.204 (0.204)	Data 0.332 (0.332)	Loss 1.5760 (1.5760)	Acc@1 46.094 (46.094)	Acc@5 89.844 (89.844)
Epoch: [110][64/196]	Time 0.123 (0.113)	Data 0.000 (0.005)	Loss 1.5467 (1.5791)	Acc@1 40.625 (40.968)	Acc@5 92.188 (90.553)
Epoch: [110][128/196]	Time 0.116 (0.115)	Data 0.000 (0.003)	Loss 1.5913 (1.5698)	Acc@1 40.234 (41.627)	Acc@5 90.625 (90.643)
Epoch: [110][192/196]	Time 0.101 (0.114)	Data 0.000 (0.002)	Loss 1.5312 (1.5675)	Acc@1 41.797 (41.633)	Acc@5 91.797 (90.795)
after train
n1: 30 for:
wAcc: 44.619718251050955
test acc: 42.28
Epoche: [111/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [111][0/196]	Time 0.171 (0.171)	Data 0.282 (0.282)	Loss 1.5623 (1.5623)	Acc@1 41.016 (41.016)	Acc@5 90.234 (90.234)
Epoch: [111][64/196]	Time 0.115 (0.116)	Data 0.000 (0.005)	Loss 1.5957 (1.5408)	Acc@1 42.578 (42.638)	Acc@5 89.844 (91.268)
Epoch: [111][128/196]	Time 0.107 (0.113)	Data 0.000 (0.002)	Loss 1.4905 (1.5468)	Acc@1 45.703 (42.699)	Acc@5 92.969 (90.955)
Epoch: [111][192/196]	Time 0.117 (0.114)	Data 0.000 (0.002)	Loss 1.5241 (1.5417)	Acc@1 39.844 (42.768)	Acc@5 92.969 (91.141)
after train
n1: 30 for:
wAcc: 44.419617757004445
test acc: 42.74
Epoche: [112/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [112][0/196]	Time 0.176 (0.176)	Data 0.273 (0.273)	Loss 1.5523 (1.5523)	Acc@1 42.578 (42.578)	Acc@5 90.234 (90.234)
Epoch: [112][64/196]	Time 0.103 (0.117)	Data 0.000 (0.004)	Loss 1.5222 (1.5258)	Acc@1 41.797 (43.690)	Acc@5 92.188 (91.298)
Epoch: [112][128/196]	Time 0.111 (0.115)	Data 0.000 (0.002)	Loss 1.5422 (1.5257)	Acc@1 41.797 (43.499)	Acc@5 93.359 (91.403)
Epoch: [112][192/196]	Time 0.122 (0.115)	Data 0.000 (0.002)	Loss 1.5504 (1.5245)	Acc@1 44.531 (43.515)	Acc@5 90.234 (91.382)
after train
n1: 30 for:
wAcc: 43.10850316480757
test acc: 43.24
Epoche: [113/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [113][0/196]	Time 0.175 (0.175)	Data 0.354 (0.354)	Loss 1.5374 (1.5374)	Acc@1 42.578 (42.578)	Acc@5 92.188 (92.188)
Epoch: [113][64/196]	Time 0.099 (0.115)	Data 0.000 (0.006)	Loss 1.6398 (1.5072)	Acc@1 42.578 (44.585)	Acc@5 87.109 (91.809)
Epoch: [113][128/196]	Time 0.102 (0.114)	Data 0.000 (0.003)	Loss 1.5560 (1.5075)	Acc@1 42.969 (44.362)	Acc@5 91.016 (91.603)
Epoch: [113][192/196]	Time 0.107 (0.114)	Data 0.000 (0.002)	Loss 1.5259 (1.5011)	Acc@1 44.141 (44.422)	Acc@5 92.578 (91.631)
after train
n1: 30 for:
wAcc: 43.751612067890605
test acc: 43.83
Epoche: [114/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [114][0/196]	Time 0.188 (0.188)	Data 0.319 (0.319)	Loss 1.4044 (1.4044)	Acc@1 54.297 (54.297)	Acc@5 89.844 (89.844)
Epoch: [114][64/196]	Time 0.100 (0.116)	Data 0.000 (0.005)	Loss 1.4846 (1.4832)	Acc@1 46.094 (45.325)	Acc@5 92.969 (92.097)
Epoch: [114][128/196]	Time 0.096 (0.114)	Data 0.000 (0.003)	Loss 1.4249 (1.4782)	Acc@1 51.953 (45.303)	Acc@5 94.531 (92.106)
Epoch: [114][192/196]	Time 0.120 (0.114)	Data 0.000 (0.002)	Loss 1.4335 (1.4786)	Acc@1 46.484 (45.391)	Acc@5 93.359 (92.107)
after train
n1: 30 for:
wAcc: 45.007126823984414
test acc: 44.77
Epoche: [115/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [115][0/196]	Time 0.170 (0.170)	Data 0.377 (0.377)	Loss 1.4522 (1.4522)	Acc@1 49.609 (49.609)	Acc@5 91.016 (91.016)
Epoch: [115][64/196]	Time 0.117 (0.115)	Data 0.000 (0.006)	Loss 1.4968 (1.4594)	Acc@1 41.016 (46.220)	Acc@5 91.016 (92.200)
Epoch: [115][128/196]	Time 0.088 (0.114)	Data 0.000 (0.003)	Loss 1.5354 (1.4611)	Acc@1 40.625 (46.227)	Acc@5 90.234 (92.172)
Epoch: [115][192/196]	Time 0.118 (0.115)	Data 0.000 (0.002)	Loss 1.5256 (1.4590)	Acc@1 46.484 (46.375)	Acc@5 93.750 (92.155)
after train
n1: 30 for:
wAcc: 44.336964464900795
test acc: 47.2
Epoche: [116/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [116][0/196]	Time 0.183 (0.183)	Data 0.286 (0.286)	Loss 1.5202 (1.5202)	Acc@1 40.234 (40.234)	Acc@5 90.625 (90.625)
Epoch: [116][64/196]	Time 0.110 (0.114)	Data 0.000 (0.005)	Loss 1.3957 (1.4391)	Acc@1 50.391 (46.887)	Acc@5 92.578 (92.410)
Epoch: [116][128/196]	Time 0.111 (0.114)	Data 0.000 (0.002)	Loss 1.4226 (1.4410)	Acc@1 50.000 (47.084)	Acc@5 91.797 (92.542)
Epoch: [116][192/196]	Time 0.119 (0.113)	Data 0.000 (0.002)	Loss 1.4167 (1.4432)	Acc@1 49.219 (47.031)	Acc@5 91.797 (92.556)
after train
n1: 30 for:
wAcc: 45.92681477130838
test acc: 47.65
Epoche: [117/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [117][0/196]	Time 0.163 (0.163)	Data 0.270 (0.270)	Loss 1.3919 (1.3919)	Acc@1 50.391 (50.391)	Acc@5 93.359 (93.359)
Epoch: [117][64/196]	Time 0.104 (0.116)	Data 0.000 (0.004)	Loss 1.5568 (1.4285)	Acc@1 44.141 (47.500)	Acc@5 92.188 (92.951)
Epoch: [117][128/196]	Time 0.125 (0.114)	Data 0.000 (0.002)	Loss 1.3718 (1.4302)	Acc@1 49.219 (47.414)	Acc@5 94.141 (92.839)
Epoch: [117][192/196]	Time 0.124 (0.113)	Data 0.000 (0.002)	Loss 1.4373 (1.4226)	Acc@1 45.703 (47.899)	Acc@5 92.188 (92.906)
after train
n1: 30 for:
wAcc: 44.398659952734434
test acc: 43.3
Epoche: [118/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [118][0/196]	Time 0.194 (0.194)	Data 0.263 (0.263)	Loss 1.3868 (1.3868)	Acc@1 47.656 (47.656)	Acc@5 95.312 (95.312)
Epoch: [118][64/196]	Time 0.112 (0.113)	Data 0.000 (0.004)	Loss 1.4022 (1.4114)	Acc@1 48.438 (48.774)	Acc@5 91.406 (93.023)
Epoch: [118][128/196]	Time 0.109 (0.114)	Data 0.000 (0.002)	Loss 1.2779 (1.4051)	Acc@1 57.812 (48.810)	Acc@5 94.922 (93.060)
Epoch: [118][192/196]	Time 0.114 (0.114)	Data 0.000 (0.002)	Loss 1.3992 (1.3993)	Acc@1 50.781 (48.972)	Acc@5 92.188 (93.080)
after train
n1: 30 for:
wAcc: 44.891568738708635
test acc: 44.55
Epoche: [119/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [119][0/196]	Time 0.145 (0.145)	Data 0.318 (0.318)	Loss 1.2649 (1.2649)	Acc@1 50.000 (50.000)	Acc@5 94.141 (94.141)
Epoch: [119][64/196]	Time 0.118 (0.116)	Data 0.000 (0.005)	Loss 1.4427 (1.3948)	Acc@1 45.703 (49.411)	Acc@5 94.141 (92.993)
Epoch: [119][128/196]	Time 0.093 (0.114)	Data 0.000 (0.003)	Loss 1.4110 (1.3961)	Acc@1 46.484 (49.116)	Acc@5 96.484 (93.075)
Epoch: [119][192/196]	Time 0.119 (0.115)	Data 0.000 (0.002)	Loss 1.3777 (1.3904)	Acc@1 50.781 (49.211)	Acc@5 93.359 (93.161)
after train
n1: 30 for:
wAcc: 44.57028962239587
test acc: 47.17
Epoche: [120/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [120][0/196]	Time 0.180 (0.180)	Data 0.292 (0.292)	Loss 1.2858 (1.2858)	Acc@1 53.906 (53.906)	Acc@5 96.484 (96.484)
Epoch: [120][64/196]	Time 0.107 (0.114)	Data 0.000 (0.005)	Loss 1.4784 (1.3784)	Acc@1 48.438 (49.585)	Acc@5 92.578 (93.444)
Epoch: [120][128/196]	Time 0.110 (0.114)	Data 0.000 (0.003)	Loss 1.3703 (1.3883)	Acc@1 49.219 (49.313)	Acc@5 93.359 (93.256)
Epoch: [120][192/196]	Time 0.123 (0.113)	Data 0.000 (0.002)	Loss 1.4443 (1.3791)	Acc@1 42.969 (49.609)	Acc@5 92.188 (93.438)
after train
n1: 30 for:
wAcc: 36.63678320467062
test acc: 49.15
Epoche: [121/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [121][0/196]	Time 0.223 (0.223)	Data 0.289 (0.289)	Loss 1.3691 (1.3691)	Acc@1 50.000 (50.000)	Acc@5 92.578 (92.578)
Epoch: [121][64/196]	Time 0.120 (0.114)	Data 0.000 (0.005)	Loss 1.4325 (1.3646)	Acc@1 50.781 (49.928)	Acc@5 92.578 (93.648)
Epoch: [121][128/196]	Time 0.147 (0.115)	Data 0.000 (0.003)	Loss 1.3474 (1.3676)	Acc@1 51.562 (49.964)	Acc@5 91.406 (93.553)
Epoch: [121][192/196]	Time 0.086 (0.114)	Data 0.000 (0.002)	Loss 1.1911 (1.3654)	Acc@1 55.859 (50.115)	Acc@5 98.047 (93.556)
after train
n1: 30 for:
wAcc: 37.70863516380126
test acc: 52.17
Epoche: [122/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [122][0/196]	Time 0.167 (0.167)	Data 0.278 (0.278)	Loss 1.3139 (1.3139)	Acc@1 51.562 (51.562)	Acc@5 95.703 (95.703)
Epoch: [122][64/196]	Time 0.119 (0.115)	Data 0.000 (0.005)	Loss 1.3827 (1.3577)	Acc@1 48.828 (50.871)	Acc@5 92.969 (93.630)
Epoch: [122][128/196]	Time 0.120 (0.115)	Data 0.000 (0.002)	Loss 1.4273 (1.3544)	Acc@1 49.219 (50.854)	Acc@5 93.750 (93.641)
Epoch: [122][192/196]	Time 0.149 (0.115)	Data 0.000 (0.002)	Loss 1.3573 (1.3464)	Acc@1 50.391 (51.158)	Acc@5 94.531 (93.663)
after train
n1: 30 for:
wAcc: 38.97990048750445
test acc: 49.7
Epoche: [123/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [123][0/196]	Time 0.158 (0.158)	Data 0.349 (0.349)	Loss 1.3288 (1.3288)	Acc@1 48.047 (48.047)	Acc@5 95.312 (95.312)
Epoch: [123][64/196]	Time 0.115 (0.114)	Data 0.000 (0.006)	Loss 1.3337 (1.3305)	Acc@1 49.219 (50.823)	Acc@5 92.188 (94.135)
Epoch: [123][128/196]	Time 0.102 (0.115)	Data 0.000 (0.003)	Loss 1.2593 (1.3323)	Acc@1 55.078 (51.060)	Acc@5 94.922 (94.101)
Epoch: [123][192/196]	Time 0.111 (0.114)	Data 0.000 (0.002)	Loss 1.3724 (1.3304)	Acc@1 51.562 (51.463)	Acc@5 92.969 (93.975)
after train
n1: 30 for:
wAcc: 40.02280439499156
test acc: 40.22
Epoche: [124/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [124][0/196]	Time 0.208 (0.208)	Data 0.251 (0.251)	Loss 1.4711 (1.4711)	Acc@1 44.922 (44.922)	Acc@5 91.016 (91.016)
Epoch: [124][64/196]	Time 0.112 (0.115)	Data 0.000 (0.004)	Loss 1.3568 (1.3333)	Acc@1 51.562 (51.611)	Acc@5 91.797 (93.918)
Epoch: [124][128/196]	Time 0.119 (0.113)	Data 0.000 (0.002)	Loss 1.3048 (1.3212)	Acc@1 51.953 (51.929)	Acc@5 90.625 (94.041)
Epoch: [124][192/196]	Time 0.110 (0.113)	Data 0.000 (0.002)	Loss 1.2459 (1.3145)	Acc@1 55.469 (52.354)	Acc@5 93.750 (94.098)
after train
n1: 30 for:
wAcc: 40.23791287222896
test acc: 48.68
Epoche: [125/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [125][0/196]	Time 0.178 (0.178)	Data 0.304 (0.304)	Loss 1.3687 (1.3687)	Acc@1 45.312 (45.312)	Acc@5 92.578 (92.578)
Epoch: [125][64/196]	Time 0.118 (0.114)	Data 0.000 (0.005)	Loss 1.2413 (1.3103)	Acc@1 58.203 (52.770)	Acc@5 95.312 (93.948)
Epoch: [125][128/196]	Time 0.105 (0.114)	Data 0.000 (0.003)	Loss 1.3229 (1.3000)	Acc@1 53.516 (52.898)	Acc@5 94.922 (94.238)
Epoch: [125][192/196]	Time 0.093 (0.112)	Data 0.000 (0.002)	Loss 1.2738 (1.3041)	Acc@1 55.469 (52.759)	Acc@5 93.359 (94.220)
after train
n1: 30 for:
wAcc: 40.8562900488597
test acc: 49.52
Epoche: [126/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [126][0/196]	Time 0.189 (0.189)	Data 0.262 (0.262)	Loss 1.3765 (1.3765)	Acc@1 50.391 (50.391)	Acc@5 94.141 (94.141)
Epoch: [126][64/196]	Time 0.121 (0.116)	Data 0.000 (0.004)	Loss 1.1962 (1.2893)	Acc@1 60.156 (53.588)	Acc@5 95.312 (94.291)
Epoch: [126][128/196]	Time 0.124 (0.115)	Data 0.000 (0.002)	Loss 1.2649 (1.2843)	Acc@1 53.125 (53.637)	Acc@5 92.188 (94.347)
Epoch: [126][192/196]	Time 0.115 (0.115)	Data 0.000 (0.002)	Loss 1.2794 (1.2820)	Acc@1 58.203 (53.852)	Acc@5 94.141 (94.323)
after train
n1: 30 for:
wAcc: 41.872053598853164
test acc: 51.13
Epoche: [127/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [127][0/196]	Time 0.181 (0.181)	Data 0.335 (0.335)	Loss 1.3001 (1.3001)	Acc@1 47.266 (47.266)	Acc@5 94.141 (94.141)
Epoch: [127][64/196]	Time 0.113 (0.117)	Data 0.000 (0.005)	Loss 1.2495 (1.2706)	Acc@1 54.297 (54.123)	Acc@5 94.922 (94.549)
Epoch: [127][128/196]	Time 0.124 (0.116)	Data 0.000 (0.003)	Loss 1.2768 (1.2692)	Acc@1 57.812 (54.312)	Acc@5 94.531 (94.525)
Epoch: [127][192/196]	Time 0.107 (0.115)	Data 0.000 (0.002)	Loss 1.3233 (1.2648)	Acc@1 50.781 (54.400)	Acc@5 94.922 (94.612)
after train
n1: 30 for:
wAcc: 42.40717899382882
test acc: 54.3
Epoche: [128/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [128][0/196]	Time 0.167 (0.167)	Data 0.354 (0.354)	Loss 1.2237 (1.2237)	Acc@1 53.125 (53.125)	Acc@5 95.312 (95.312)
Epoch: [128][64/196]	Time 0.115 (0.114)	Data 0.000 (0.006)	Loss 1.3008 (1.2487)	Acc@1 52.344 (54.988)	Acc@5 91.797 (94.519)
Epoch: [128][128/196]	Time 0.114 (0.113)	Data 0.000 (0.003)	Loss 1.3528 (1.2456)	Acc@1 48.438 (54.736)	Acc@5 92.188 (94.643)
Epoch: [128][192/196]	Time 0.106 (0.112)	Data 0.000 (0.002)	Loss 1.2417 (1.2419)	Acc@1 55.469 (55.078)	Acc@5 95.703 (94.687)
after train
n1: 30 for:
wAcc: 43.308900016656416
test acc: 54.61
Epoche: [129/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [129][0/196]	Time 0.184 (0.184)	Data 0.304 (0.304)	Loss 1.2542 (1.2542)	Acc@1 57.422 (57.422)	Acc@5 92.578 (92.578)
Epoch: [129][64/196]	Time 0.123 (0.117)	Data 0.000 (0.005)	Loss 1.3106 (1.2320)	Acc@1 52.734 (55.565)	Acc@5 96.094 (94.808)
Epoch: [129][128/196]	Time 0.117 (0.115)	Data 0.000 (0.003)	Loss 1.2284 (1.2289)	Acc@1 57.422 (55.799)	Acc@5 94.141 (94.764)
Epoch: [129][192/196]	Time 0.108 (0.114)	Data 0.000 (0.002)	Loss 1.2271 (1.2214)	Acc@1 60.156 (56.155)	Acc@5 93.359 (94.811)
after train
n1: 30 for:
wAcc: 44.655281090815535
test acc: 52.07
Epoche: [130/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [130][0/196]	Time 0.166 (0.166)	Data 0.299 (0.299)	Loss 1.2953 (1.2953)	Acc@1 52.344 (52.344)	Acc@5 93.750 (93.750)
Epoch: [130][64/196]	Time 0.123 (0.116)	Data 0.000 (0.005)	Loss 1.1107 (1.1986)	Acc@1 59.766 (57.019)	Acc@5 97.266 (95.204)
Epoch: [130][128/196]	Time 0.120 (0.115)	Data 0.000 (0.003)	Loss 1.1193 (1.2078)	Acc@1 60.156 (56.632)	Acc@5 96.094 (95.113)
Epoch: [130][192/196]	Time 0.119 (0.115)	Data 0.000 (0.002)	Loss 1.2766 (1.2065)	Acc@1 54.297 (56.649)	Acc@5 94.141 (95.098)
after train
n1: 30 for:
wAcc: 45.094618432242825
test acc: 50.27
Epoche: [131/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [131][0/196]	Time 0.205 (0.205)	Data 0.314 (0.314)	Loss 1.3249 (1.3249)	Acc@1 49.219 (49.219)	Acc@5 92.188 (92.188)
Epoch: [131][64/196]	Time 0.124 (0.116)	Data 0.000 (0.005)	Loss 1.2248 (1.1882)	Acc@1 57.031 (56.809)	Acc@5 94.531 (95.018)
Epoch: [131][128/196]	Time 0.120 (0.115)	Data 0.000 (0.003)	Loss 1.2527 (1.1863)	Acc@1 56.641 (57.201)	Acc@5 92.578 (95.058)
Epoch: [131][192/196]	Time 0.125 (0.114)	Data 0.000 (0.002)	Loss 1.2011 (1.1835)	Acc@1 57.422 (57.333)	Acc@5 96.094 (95.134)
after train
n1: 30 for:
wAcc: 45.76823367678028
test acc: 56.66
Epoche: [132/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [132][0/196]	Time 0.216 (0.216)	Data 0.288 (0.288)	Loss 1.2854 (1.2854)	Acc@1 55.469 (55.469)	Acc@5 93.750 (93.750)
Epoch: [132][64/196]	Time 0.103 (0.114)	Data 0.000 (0.005)	Loss 1.1922 (1.1801)	Acc@1 53.906 (57.254)	Acc@5 95.312 (95.457)
Epoch: [132][128/196]	Time 0.121 (0.114)	Data 0.000 (0.003)	Loss 1.2197 (1.1685)	Acc@1 57.422 (57.670)	Acc@5 95.312 (95.543)
Epoch: [132][192/196]	Time 0.116 (0.114)	Data 0.000 (0.002)	Loss 1.0955 (1.1706)	Acc@1 62.109 (57.640)	Acc@5 95.703 (95.462)
after train
n1: 30 for:
wAcc: 46.54031782575494
test acc: 42.28
Epoche: [133/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [133][0/196]	Time 0.184 (0.184)	Data 0.297 (0.297)	Loss 1.3376 (1.3376)	Acc@1 54.297 (54.297)	Acc@5 94.141 (94.141)
Epoch: [133][64/196]	Time 0.120 (0.115)	Data 0.000 (0.005)	Loss 1.0325 (1.1447)	Acc@1 64.453 (58.660)	Acc@5 94.531 (95.451)
Epoch: [133][128/196]	Time 0.101 (0.115)	Data 0.000 (0.003)	Loss 1.2152 (1.1526)	Acc@1 55.469 (58.149)	Acc@5 96.094 (95.531)
Epoch: [133][192/196]	Time 0.118 (0.114)	Data 0.000 (0.002)	Loss 1.1228 (1.1497)	Acc@1 58.594 (58.300)	Acc@5 95.312 (95.586)
after train
n1: 30 for:
wAcc: 46.355086776680714
test acc: 56.95
Epoche: [134/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [134][0/196]	Time 0.193 (0.193)	Data 0.369 (0.369)	Loss 1.2244 (1.2244)	Acc@1 55.859 (55.859)	Acc@5 95.703 (95.703)
Epoch: [134][64/196]	Time 0.124 (0.113)	Data 0.000 (0.006)	Loss 1.0986 (1.1379)	Acc@1 58.984 (59.153)	Acc@5 96.484 (95.499)
Epoch: [134][128/196]	Time 0.107 (0.115)	Data 0.000 (0.003)	Loss 1.2052 (1.1220)	Acc@1 55.469 (59.460)	Acc@5 95.703 (95.767)
Epoch: [134][192/196]	Time 0.094 (0.114)	Data 0.000 (0.002)	Loss 1.2195 (1.1239)	Acc@1 55.469 (59.503)	Acc@5 93.750 (95.760)
after train
n1: 30 for:
wAcc: 47.12536649962771
test acc: 37.34
Epoche: [135/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [135][0/196]	Time 0.189 (0.189)	Data 0.323 (0.323)	Loss 1.1519 (1.1519)	Acc@1 59.375 (59.375)	Acc@5 94.531 (94.531)
Epoch: [135][64/196]	Time 0.106 (0.116)	Data 0.000 (0.005)	Loss 1.1411 (1.1149)	Acc@1 58.594 (59.952)	Acc@5 95.312 (95.775)
Epoch: [135][128/196]	Time 0.116 (0.115)	Data 0.000 (0.003)	Loss 1.1658 (1.1085)	Acc@1 58.594 (60.374)	Acc@5 95.312 (95.921)
Epoch: [135][192/196]	Time 0.112 (0.114)	Data 0.000 (0.002)	Loss 1.1409 (1.1092)	Acc@1 57.422 (60.229)	Acc@5 95.312 (95.972)
after train
n1: 30 for:
wAcc: 46.59669123755226
test acc: 57.3
Epoche: [136/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [136][0/196]	Time 0.206 (0.206)	Data 0.342 (0.342)	Loss 1.0518 (1.0518)	Acc@1 62.891 (62.891)	Acc@5 95.312 (95.312)
Epoch: [136][64/196]	Time 0.106 (0.113)	Data 0.000 (0.006)	Loss 1.0263 (1.0859)	Acc@1 62.109 (60.889)	Acc@5 96.875 (96.214)
Epoch: [136][128/196]	Time 0.119 (0.115)	Data 0.000 (0.003)	Loss 1.1036 (1.0853)	Acc@1 59.375 (61.040)	Acc@5 96.094 (96.188)
Epoch: [136][192/196]	Time 0.099 (0.114)	Data 0.000 (0.002)	Loss 1.0241 (1.0866)	Acc@1 61.328 (61.105)	Acc@5 96.484 (96.175)
after train
n1: 30 for:
wAcc: 47.524308240620826
test acc: 55.38
Epoche: [137/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [137][0/196]	Time 0.146 (0.146)	Data 0.320 (0.320)	Loss 1.1426 (1.1426)	Acc@1 64.453 (64.453)	Acc@5 94.922 (94.922)
Epoch: [137][64/196]	Time 0.145 (0.117)	Data 0.000 (0.005)	Loss 1.1485 (1.0873)	Acc@1 61.719 (60.901)	Acc@5 95.312 (96.058)
Epoch: [137][128/196]	Time 0.094 (0.114)	Data 0.000 (0.003)	Loss 1.1586 (1.0852)	Acc@1 59.375 (61.083)	Acc@5 97.656 (96.057)
Epoch: [137][192/196]	Time 0.098 (0.114)	Data 0.000 (0.002)	Loss 1.0622 (1.0804)	Acc@1 62.109 (61.132)	Acc@5 96.094 (96.114)
after train
n1: 30 for:
wAcc: 47.856207579542655
test acc: 50.77
Epoche: [138/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [138][0/196]	Time 0.173 (0.173)	Data 0.305 (0.305)	Loss 1.0747 (1.0747)	Acc@1 62.109 (62.109)	Acc@5 97.266 (97.266)
Epoch: [138][64/196]	Time 0.120 (0.118)	Data 0.000 (0.005)	Loss 1.0465 (1.0711)	Acc@1 64.062 (61.112)	Acc@5 96.484 (96.244)
Epoch: [138][128/196]	Time 0.107 (0.117)	Data 0.000 (0.003)	Loss 1.0221 (1.0626)	Acc@1 63.281 (61.386)	Acc@5 96.875 (96.318)
Epoch: [138][192/196]	Time 0.114 (0.116)	Data 0.000 (0.002)	Loss 1.0844 (1.0617)	Acc@1 62.109 (61.650)	Acc@5 97.266 (96.320)
after train
n1: 30 for:
wAcc: 48.366566459965796
test acc: 54.75
Epoche: [139/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [139][0/196]	Time 0.183 (0.183)	Data 0.283 (0.283)	Loss 1.1048 (1.1048)	Acc@1 62.891 (62.891)	Acc@5 97.266 (97.266)
Epoch: [139][64/196]	Time 0.117 (0.114)	Data 0.000 (0.005)	Loss 1.0704 (1.0313)	Acc@1 60.938 (63.251)	Acc@5 96.484 (96.581)
Epoch: [139][128/196]	Time 0.107 (0.114)	Data 0.000 (0.002)	Loss 0.9665 (1.0378)	Acc@1 65.625 (62.915)	Acc@5 98.438 (96.475)
Epoch: [139][192/196]	Time 0.097 (0.114)	Data 0.000 (0.002)	Loss 0.9815 (1.0449)	Acc@1 64.844 (62.540)	Acc@5 96.484 (96.468)
after train
n1: 30 for:
wAcc: 49.00391691120245
test acc: 59.92
Epoche: [140/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [140][0/196]	Time 0.174 (0.174)	Data 0.317 (0.317)	Loss 1.0700 (1.0700)	Acc@1 58.594 (58.594)	Acc@5 95.312 (95.312)
Epoch: [140][64/196]	Time 0.093 (0.116)	Data 0.000 (0.005)	Loss 1.0159 (1.0307)	Acc@1 63.281 (62.704)	Acc@5 96.484 (96.544)
Epoch: [140][128/196]	Time 0.111 (0.114)	Data 0.000 (0.003)	Loss 0.9945 (1.0369)	Acc@1 64.062 (62.679)	Acc@5 96.484 (96.415)
Epoch: [140][192/196]	Time 0.115 (0.114)	Data 0.000 (0.002)	Loss 1.0530 (1.0267)	Acc@1 62.109 (63.024)	Acc@5 96.875 (96.563)
after train
n1: 30 for:
wAcc: 49.774678652617915
test acc: 56.83
Epoche: [141/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [141][0/196]	Time 0.205 (0.205)	Data 0.311 (0.311)	Loss 1.0779 (1.0779)	Acc@1 60.156 (60.156)	Acc@5 95.703 (95.703)
Epoch: [141][64/196]	Time 0.131 (0.116)	Data 0.000 (0.005)	Loss 0.9123 (1.0079)	Acc@1 65.625 (63.978)	Acc@5 97.656 (96.683)
Epoch: [141][128/196]	Time 0.113 (0.117)	Data 0.000 (0.003)	Loss 1.0221 (1.0045)	Acc@1 64.453 (63.957)	Acc@5 95.312 (96.751)
Epoch: [141][192/196]	Time 0.113 (0.116)	Data 0.000 (0.002)	Loss 1.0023 (1.0061)	Acc@1 64.062 (63.880)	Acc@5 96.484 (96.770)
after train
n1: 30 for:
wAcc: 50.302141453651124
test acc: 49.74
Epoche: [142/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [142][0/196]	Time 0.213 (0.213)	Data 0.258 (0.258)	Loss 0.9587 (0.9587)	Acc@1 68.750 (68.750)	Acc@5 97.266 (97.266)
Epoch: [142][64/196]	Time 0.119 (0.114)	Data 0.000 (0.004)	Loss 0.9920 (1.0036)	Acc@1 63.281 (63.966)	Acc@5 98.047 (96.881)
Epoch: [142][128/196]	Time 0.117 (0.112)	Data 0.000 (0.002)	Loss 1.0012 (1.0023)	Acc@1 62.500 (64.150)	Acc@5 97.266 (96.781)
Epoch: [142][192/196]	Time 0.104 (0.112)	Data 0.000 (0.002)	Loss 1.0219 (1.0000)	Acc@1 61.328 (64.237)	Acc@5 98.047 (96.806)
after train
n1: 30 for:
wAcc: 50.351165581866304
test acc: 57.3
Epoche: [143/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [143][0/196]	Time 0.194 (0.194)	Data 0.333 (0.333)	Loss 0.9807 (0.9807)	Acc@1 65.625 (65.625)	Acc@5 96.484 (96.484)
Epoch: [143][64/196]	Time 0.108 (0.112)	Data 0.000 (0.005)	Loss 1.0216 (0.9807)	Acc@1 62.891 (64.363)	Acc@5 96.484 (97.037)
Epoch: [143][128/196]	Time 0.113 (0.112)	Data 0.000 (0.003)	Loss 1.0652 (0.9831)	Acc@1 62.109 (64.374)	Acc@5 94.141 (97.014)
Epoch: [143][192/196]	Time 0.103 (0.113)	Data 0.000 (0.002)	Loss 0.8919 (0.9810)	Acc@1 66.016 (64.613)	Acc@5 98.438 (97.031)
after train
n1: 30 for:
wAcc: 50.93536534361878
test acc: 56.36
Epoche: [144/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [144][0/196]	Time 0.183 (0.183)	Data 0.338 (0.338)	Loss 0.9338 (0.9338)	Acc@1 63.672 (63.672)	Acc@5 96.875 (96.875)
Epoch: [144][64/196]	Time 0.120 (0.116)	Data 0.000 (0.005)	Loss 1.0505 (0.9610)	Acc@1 62.109 (65.294)	Acc@5 97.656 (97.272)
Epoch: [144][128/196]	Time 0.125 (0.114)	Data 0.000 (0.003)	Loss 0.8957 (0.9599)	Acc@1 70.312 (65.492)	Acc@5 97.266 (97.305)
Epoch: [144][192/196]	Time 0.111 (0.115)	Data 0.000 (0.002)	Loss 0.9403 (0.9635)	Acc@1 64.453 (65.392)	Acc@5 96.094 (97.251)
after train
n1: 30 for:
wAcc: 51.636626357163
test acc: 54.09
Epoche: [145/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [145][0/196]	Time 0.152 (0.152)	Data 0.324 (0.324)	Loss 0.9362 (0.9362)	Acc@1 66.406 (66.406)	Acc@5 97.656 (97.656)
Epoch: [145][64/196]	Time 0.113 (0.114)	Data 0.000 (0.005)	Loss 1.0075 (0.9508)	Acc@1 66.016 (65.739)	Acc@5 94.922 (97.224)
Epoch: [145][128/196]	Time 0.115 (0.114)	Data 0.000 (0.003)	Loss 1.0291 (0.9549)	Acc@1 65.234 (65.492)	Acc@5 96.484 (97.175)
Epoch: [145][192/196]	Time 0.114 (0.114)	Data 0.000 (0.002)	Loss 0.8965 (0.9450)	Acc@1 66.016 (66.044)	Acc@5 96.875 (97.219)
after train
n1: 30 for:
wAcc: 51.85996122842794
test acc: 57.41
Epoche: [146/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [146][0/196]	Time 0.159 (0.159)	Data 0.287 (0.287)	Loss 0.9279 (0.9279)	Acc@1 66.406 (66.406)	Acc@5 96.875 (96.875)
Epoch: [146][64/196]	Time 0.119 (0.115)	Data 0.000 (0.005)	Loss 0.9348 (0.9270)	Acc@1 64.844 (66.635)	Acc@5 97.656 (97.590)
Epoch: [146][128/196]	Time 0.120 (0.115)	Data 0.000 (0.003)	Loss 0.9329 (0.9220)	Acc@1 64.062 (66.879)	Acc@5 98.828 (97.487)
Epoch: [146][192/196]	Time 0.118 (0.114)	Data 0.000 (0.002)	Loss 0.8565 (0.9212)	Acc@1 66.797 (67.005)	Acc@5 98.438 (97.464)
after train
n1: 30 for:
wAcc: 51.589185471942024
test acc: 59.57
Epoche: [147/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [147][0/196]	Time 0.169 (0.169)	Data 0.301 (0.301)	Loss 0.8970 (0.8970)	Acc@1 66.797 (66.797)	Acc@5 97.266 (97.266)
Epoch: [147][64/196]	Time 0.096 (0.113)	Data 0.000 (0.005)	Loss 0.9801 (0.9087)	Acc@1 64.844 (67.308)	Acc@5 98.828 (97.362)
Epoch: [147][128/196]	Time 0.099 (0.113)	Data 0.000 (0.003)	Loss 0.8618 (0.9085)	Acc@1 66.406 (67.348)	Acc@5 98.438 (97.469)
Epoch: [147][192/196]	Time 0.113 (0.113)	Data 0.000 (0.002)	Loss 0.8700 (0.9058)	Acc@1 67.969 (67.629)	Acc@5 98.438 (97.466)
after train
n1: 30 for:
wAcc: 52.28477867837038
test acc: 55.64
Epoche: [148/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [148][0/196]	Time 0.260 (0.260)	Data 0.373 (0.373)	Loss 1.0171 (1.0171)	Acc@1 62.891 (62.891)	Acc@5 97.266 (97.266)
Epoch: [148][64/196]	Time 0.117 (0.116)	Data 0.000 (0.006)	Loss 0.8601 (0.8830)	Acc@1 70.703 (68.425)	Acc@5 97.266 (97.740)
Epoch: [148][128/196]	Time 0.119 (0.116)	Data 0.000 (0.003)	Loss 0.9146 (0.8841)	Acc@1 68.359 (68.335)	Acc@5 96.094 (97.677)
Epoch: [148][192/196]	Time 0.126 (0.115)	Data 0.000 (0.002)	Loss 0.8856 (0.8848)	Acc@1 66.016 (68.284)	Acc@5 97.656 (97.662)
after train
n1: 30 for:
wAcc: 52.87999585006489
test acc: 60.0
Epoche: [149/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [149][0/196]	Time 0.153 (0.153)	Data 0.313 (0.313)	Loss 0.8226 (0.8226)	Acc@1 74.609 (74.609)	Acc@5 98.047 (98.047)
Epoch: [149][64/196]	Time 0.125 (0.114)	Data 0.000 (0.005)	Loss 0.7104 (0.8779)	Acc@1 75.391 (68.540)	Acc@5 98.047 (97.638)
Epoch: [149][128/196]	Time 0.110 (0.115)	Data 0.000 (0.003)	Loss 0.9914 (0.8779)	Acc@1 65.234 (68.668)	Acc@5 98.047 (97.647)
Epoch: [149][192/196]	Time 0.099 (0.114)	Data 0.000 (0.002)	Loss 0.9376 (0.8674)	Acc@1 63.672 (68.932)	Acc@5 97.266 (97.705)
after train
n1: 30 for:
wAcc: 53.625582839853294
test acc: 59.08
Epoche: [150/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [150][0/196]	Time 0.184 (0.184)	Data 0.320 (0.320)	Loss 0.8275 (0.8275)	Acc@1 70.703 (70.703)	Acc@5 96.875 (96.875)
Epoch: [150][64/196]	Time 0.120 (0.114)	Data 0.000 (0.005)	Loss 0.7977 (0.8416)	Acc@1 72.656 (69.940)	Acc@5 97.266 (97.752)
Epoch: [150][128/196]	Time 0.115 (0.113)	Data 0.000 (0.003)	Loss 0.8530 (0.8399)	Acc@1 71.484 (69.946)	Acc@5 98.438 (97.865)
Epoch: [150][192/196]	Time 0.093 (0.113)	Data 0.000 (0.002)	Loss 0.7858 (0.8389)	Acc@1 72.656 (70.039)	Acc@5 99.219 (97.869)
after train
n1: 30 for:
wAcc: 54.414056624026706
test acc: 55.6
Epoche: [151/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [151][0/196]	Time 0.166 (0.166)	Data 0.315 (0.315)	Loss 0.8974 (0.8974)	Acc@1 67.188 (67.188)	Acc@5 95.312 (95.312)
Epoch: [151][64/196]	Time 0.119 (0.116)	Data 0.000 (0.005)	Loss 0.7898 (0.8252)	Acc@1 72.266 (70.216)	Acc@5 97.656 (98.011)
Epoch: [151][128/196]	Time 0.115 (0.116)	Data 0.000 (0.003)	Loss 0.7074 (0.8210)	Acc@1 75.000 (70.585)	Acc@5 99.219 (97.962)
Epoch: [151][192/196]	Time 0.122 (0.115)	Data 0.000 (0.002)	Loss 0.7525 (0.8209)	Acc@1 74.219 (70.723)	Acc@5 98.438 (97.962)
after train
n1: 30 for:
wAcc: 54.133502053505936
test acc: 57.06
Epoche: [152/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [152][0/196]	Time 0.166 (0.166)	Data 0.341 (0.341)	Loss 0.8615 (0.8615)	Acc@1 72.266 (72.266)	Acc@5 97.266 (97.266)
Epoch: [152][64/196]	Time 0.112 (0.116)	Data 0.000 (0.006)	Loss 0.8405 (0.8040)	Acc@1 69.531 (71.526)	Acc@5 96.875 (97.849)
Epoch: [152][128/196]	Time 0.118 (0.115)	Data 0.000 (0.003)	Loss 0.8611 (0.8079)	Acc@1 72.266 (71.197)	Acc@5 96.484 (97.947)
Epoch: [152][192/196]	Time 0.111 (0.114)	Data 0.000 (0.002)	Loss 0.9197 (0.8055)	Acc@1 71.094 (71.379)	Acc@5 97.266 (97.976)
after train
n1: 30 for:
wAcc: 52.9518648099717
test acc: 64.78
Epoche: [153/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [153][0/196]	Time 0.168 (0.168)	Data 0.352 (0.352)	Loss 0.7299 (0.7299)	Acc@1 73.828 (73.828)	Acc@5 98.047 (98.047)
Epoch: [153][64/196]	Time 0.102 (0.117)	Data 0.000 (0.006)	Loss 0.7517 (0.7949)	Acc@1 75.781 (71.490)	Acc@5 98.047 (98.173)
Epoch: [153][128/196]	Time 0.101 (0.113)	Data 0.000 (0.003)	Loss 0.8307 (0.7941)	Acc@1 70.312 (71.781)	Acc@5 98.047 (98.065)
Epoch: [153][192/196]	Time 0.110 (0.113)	Data 0.000 (0.002)	Loss 0.7584 (0.7879)	Acc@1 71.875 (72.124)	Acc@5 98.047 (98.110)
after train
n1: 30 for:
wAcc: 54.93796108037767
test acc: 67.69
Epoche: [154/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [154][0/196]	Time 0.181 (0.181)	Data 0.355 (0.355)	Loss 0.7753 (0.7753)	Acc@1 72.656 (72.656)	Acc@5 98.828 (98.828)
Epoch: [154][64/196]	Time 0.120 (0.114)	Data 0.000 (0.006)	Loss 0.8804 (0.7752)	Acc@1 69.141 (72.788)	Acc@5 97.266 (98.083)
Epoch: [154][128/196]	Time 0.119 (0.113)	Data 0.000 (0.003)	Loss 0.7940 (0.7628)	Acc@1 71.484 (73.186)	Acc@5 99.609 (98.232)
Epoch: [154][192/196]	Time 0.099 (0.113)	Data 0.000 (0.002)	Loss 0.6493 (0.7633)	Acc@1 75.391 (73.148)	Acc@5 99.609 (98.241)
after train
n1: 30 for:
wAcc: 55.88210497682446
test acc: 49.72
Epoche: [155/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [155][0/196]	Time 0.160 (0.160)	Data 0.411 (0.411)	Loss 0.7349 (0.7349)	Acc@1 76.172 (76.172)	Acc@5 96.875 (96.875)
Epoch: [155][64/196]	Time 0.115 (0.115)	Data 0.000 (0.007)	Loss 0.6283 (0.7422)	Acc@1 77.344 (74.237)	Acc@5 99.219 (98.323)
Epoch: [155][128/196]	Time 0.113 (0.114)	Data 0.000 (0.003)	Loss 0.6869 (0.7446)	Acc@1 78.516 (73.937)	Acc@5 98.828 (98.341)
Epoch: [155][192/196]	Time 0.103 (0.113)	Data 0.000 (0.002)	Loss 0.7920 (0.7495)	Acc@1 72.266 (73.773)	Acc@5 97.656 (98.284)
after train
n1: 30 for:
wAcc: 55.717293924190436
test acc: 61.81
Epoche: [156/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [156][0/196]	Time 0.181 (0.181)	Data 0.296 (0.296)	Loss 0.7022 (0.7022)	Acc@1 75.000 (75.000)	Acc@5 98.438 (98.438)
Epoch: [156][64/196]	Time 0.127 (0.115)	Data 0.000 (0.005)	Loss 0.7945 (0.7480)	Acc@1 69.922 (74.020)	Acc@5 98.828 (98.329)
Epoch: [156][128/196]	Time 0.115 (0.114)	Data 0.000 (0.003)	Loss 0.7354 (0.7375)	Acc@1 71.484 (74.288)	Acc@5 98.828 (98.356)
Epoch: [156][192/196]	Time 0.112 (0.114)	Data 0.000 (0.002)	Loss 0.7243 (0.7330)	Acc@1 74.219 (74.356)	Acc@5 97.656 (98.344)
after train
n1: 30 for:
wAcc: 56.56863187199305
test acc: 63.45
Epoche: [157/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [157][0/196]	Time 0.166 (0.166)	Data 0.334 (0.334)	Loss 0.6103 (0.6103)	Acc@1 79.297 (79.297)	Acc@5 98.438 (98.438)
Epoch: [157][64/196]	Time 0.124 (0.115)	Data 0.000 (0.005)	Loss 0.6456 (0.7089)	Acc@1 75.391 (74.706)	Acc@5 98.438 (98.606)
Epoch: [157][128/196]	Time 0.121 (0.114)	Data 0.000 (0.003)	Loss 0.8336 (0.7130)	Acc@1 67.188 (74.761)	Acc@5 97.266 (98.556)
Epoch: [157][192/196]	Time 0.112 (0.114)	Data 0.000 (0.002)	Loss 0.7128 (0.7113)	Acc@1 75.391 (74.812)	Acc@5 98.438 (98.498)
after train
n1: 30 for:
wAcc: 57.057405188803315
test acc: 67.69
Epoche: [158/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [158][0/196]	Time 0.186 (0.186)	Data 0.266 (0.266)	Loss 0.5886 (0.5886)	Acc@1 81.250 (81.250)	Acc@5 99.609 (99.609)
Epoch: [158][64/196]	Time 0.102 (0.113)	Data 0.000 (0.004)	Loss 0.7087 (0.6895)	Acc@1 76.172 (75.968)	Acc@5 97.266 (98.630)
Epoch: [158][128/196]	Time 0.119 (0.113)	Data 0.000 (0.002)	Loss 0.7215 (0.6938)	Acc@1 73.828 (75.778)	Acc@5 98.828 (98.492)
Epoch: [158][192/196]	Time 0.109 (0.114)	Data 0.000 (0.002)	Loss 0.6315 (0.6947)	Acc@1 77.344 (75.747)	Acc@5 98.438 (98.442)
after train
n1: 30 for:
wAcc: 57.37619269219318
test acc: 74.01
Epoche: [159/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [159][0/196]	Time 0.164 (0.164)	Data 0.383 (0.383)	Loss 0.7278 (0.7278)	Acc@1 72.656 (72.656)	Acc@5 98.828 (98.828)
Epoch: [159][64/196]	Time 0.115 (0.116)	Data 0.000 (0.006)	Loss 0.7407 (0.6694)	Acc@1 76.172 (76.881)	Acc@5 98.438 (98.738)
Epoch: [159][128/196]	Time 0.121 (0.114)	Data 0.000 (0.003)	Loss 0.7238 (0.6789)	Acc@1 72.656 (76.453)	Acc@5 98.438 (98.634)
Epoch: [159][192/196]	Time 0.092 (0.115)	Data 0.000 (0.002)	Loss 0.7745 (0.6841)	Acc@1 73.438 (76.263)	Acc@5 97.266 (98.569)
after train
n1: 30 for:
wAcc: 58.189130747724114
test acc: 68.69
Epoche: [160/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [160][0/196]	Time 0.236 (0.236)	Data 0.273 (0.273)	Loss 0.5924 (0.5924)	Acc@1 79.688 (79.688)	Acc@5 99.609 (99.609)
Epoch: [160][64/196]	Time 0.099 (0.115)	Data 0.000 (0.004)	Loss 0.7107 (0.6908)	Acc@1 73.047 (75.871)	Acc@5 98.438 (98.690)
Epoch: [160][128/196]	Time 0.106 (0.115)	Data 0.000 (0.002)	Loss 0.7044 (0.6790)	Acc@1 75.000 (76.429)	Acc@5 98.828 (98.595)
Epoch: [160][192/196]	Time 0.110 (0.113)	Data 0.000 (0.002)	Loss 0.5850 (0.6702)	Acc@1 79.688 (76.670)	Acc@5 99.219 (98.608)
after train
n1: 30 for:
wAcc: 59.79035453413708
test acc: 67.61
Epoche: [161/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [161][0/196]	Time 0.192 (0.192)	Data 0.266 (0.266)	Loss 0.5784 (0.5784)	Acc@1 80.469 (80.469)	Acc@5 99.609 (99.609)
Epoch: [161][64/196]	Time 0.114 (0.114)	Data 0.000 (0.004)	Loss 0.6996 (0.6489)	Acc@1 76.953 (77.386)	Acc@5 98.047 (98.786)
Epoch: [161][128/196]	Time 0.117 (0.113)	Data 0.000 (0.002)	Loss 0.6294 (0.6500)	Acc@1 78.906 (77.332)	Acc@5 99.219 (98.668)
Epoch: [161][192/196]	Time 0.097 (0.113)	Data 0.000 (0.002)	Loss 0.7500 (0.6571)	Acc@1 75.000 (77.014)	Acc@5 96.094 (98.654)
after train
n1: 30 for:
wAcc: 58.21605259684601
test acc: 70.78
Epoche: [162/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [162][0/196]	Time 0.161 (0.161)	Data 0.361 (0.361)	Loss 0.6441 (0.6441)	Acc@1 78.906 (78.906)	Acc@5 98.828 (98.828)
Epoch: [162][64/196]	Time 0.116 (0.115)	Data 0.000 (0.006)	Loss 0.6182 (0.6360)	Acc@1 80.469 (77.716)	Acc@5 98.047 (98.756)
Epoch: [162][128/196]	Time 0.122 (0.116)	Data 0.000 (0.003)	Loss 0.6458 (0.6432)	Acc@1 76.953 (77.541)	Acc@5 98.828 (98.762)
Epoch: [162][192/196]	Time 0.105 (0.114)	Data 0.000 (0.002)	Loss 0.5169 (0.6366)	Acc@1 84.375 (77.801)	Acc@5 98.047 (98.729)
after train
n1: 30 for:
wAcc: 61.14734789341604
test acc: 58.28
Epoche: [163/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [163][0/196]	Time 0.180 (0.180)	Data 0.318 (0.318)	Loss 0.6396 (0.6396)	Acc@1 80.078 (80.078)	Acc@5 99.219 (99.219)
Epoch: [163][64/196]	Time 0.121 (0.114)	Data 0.000 (0.005)	Loss 0.5694 (0.6243)	Acc@1 79.297 (78.918)	Acc@5 98.828 (98.786)
Epoch: [163][128/196]	Time 0.106 (0.115)	Data 0.000 (0.003)	Loss 0.7555 (0.6298)	Acc@1 75.000 (78.531)	Acc@5 97.656 (98.780)
Epoch: [163][192/196]	Time 0.112 (0.115)	Data 0.000 (0.002)	Loss 0.7540 (0.6337)	Acc@1 73.828 (78.263)	Acc@5 98.828 (98.723)
after train
n1: 30 for:
wAcc: 58.12750556921037
test acc: 67.39
Epoche: [164/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [164][0/196]	Time 0.185 (0.185)	Data 0.301 (0.301)	Loss 0.5728 (0.5728)	Acc@1 78.906 (78.906)	Acc@5 99.609 (99.609)
Epoch: [164][64/196]	Time 0.102 (0.117)	Data 0.000 (0.005)	Loss 0.6551 (0.6178)	Acc@1 77.734 (78.492)	Acc@5 98.047 (98.822)
Epoch: [164][128/196]	Time 0.099 (0.115)	Data 0.000 (0.003)	Loss 0.5613 (0.6185)	Acc@1 81.641 (78.558)	Acc@5 99.219 (98.777)
Epoch: [164][192/196]	Time 0.105 (0.115)	Data 0.000 (0.002)	Loss 0.6548 (0.6144)	Acc@1 76.562 (78.603)	Acc@5 98.438 (98.838)
after train
n1: 30 for:
wAcc: 61.61053453763647
test acc: 71.97
Epoche: [165/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [165][0/196]	Time 0.187 (0.187)	Data 0.370 (0.370)	Loss 0.4897 (0.4897)	Acc@1 86.328 (86.328)	Acc@5 98.047 (98.047)
Epoch: [165][64/196]	Time 0.112 (0.113)	Data 0.000 (0.006)	Loss 0.6931 (0.6139)	Acc@1 74.609 (79.081)	Acc@5 98.047 (98.756)
Epoch: [165][128/196]	Time 0.123 (0.113)	Data 0.000 (0.003)	Loss 0.6361 (0.6098)	Acc@1 76.172 (79.027)	Acc@5 98.438 (98.725)
Epoch: [165][192/196]	Time 0.103 (0.112)	Data 0.000 (0.002)	Loss 0.6121 (0.6025)	Acc@1 76.562 (79.279)	Acc@5 99.219 (98.818)
after train
n1: 30 for:
wAcc: 62.00132895820512
test acc: 73.16
Epoche: [166/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [166][0/196]	Time 0.155 (0.155)	Data 0.307 (0.307)	Loss 0.7134 (0.7134)	Acc@1 76.172 (76.172)	Acc@5 98.438 (98.438)
Epoch: [166][64/196]	Time 0.143 (0.116)	Data 0.000 (0.005)	Loss 0.6592 (0.6027)	Acc@1 77.344 (78.894)	Acc@5 99.609 (98.954)
Epoch: [166][128/196]	Time 0.104 (0.114)	Data 0.000 (0.003)	Loss 0.6570 (0.5930)	Acc@1 76.172 (79.209)	Acc@5 98.438 (98.934)
Epoch: [166][192/196]	Time 0.115 (0.114)	Data 0.000 (0.002)	Loss 0.6140 (0.5947)	Acc@1 77.344 (79.244)	Acc@5 99.609 (98.946)
after train
n1: 30 for:
wAcc: 62.05481444007622
test acc: 70.3
Epoche: [167/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [167][0/196]	Time 0.160 (0.160)	Data 0.365 (0.365)	Loss 0.5205 (0.5205)	Acc@1 81.250 (81.250)	Acc@5 99.219 (99.219)
Epoch: [167][64/196]	Time 0.123 (0.113)	Data 0.000 (0.006)	Loss 0.6322 (0.5949)	Acc@1 75.781 (79.171)	Acc@5 98.047 (98.912)
Epoch: [167][128/196]	Time 0.106 (0.115)	Data 0.000 (0.003)	Loss 0.5640 (0.5947)	Acc@1 82.422 (79.118)	Acc@5 98.438 (98.861)
Epoch: [167][192/196]	Time 0.120 (0.114)	Data 0.000 (0.002)	Loss 0.6354 (0.5962)	Acc@1 77.734 (79.182)	Acc@5 99.609 (98.844)
after train
n1: 30 for:
wAcc: 63.16211689338199
test acc: 69.65
Epoche: [168/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [168][0/196]	Time 0.190 (0.190)	Data 0.272 (0.272)	Loss 0.5126 (0.5126)	Acc@1 81.641 (81.641)	Acc@5 99.609 (99.609)
Epoch: [168][64/196]	Time 0.100 (0.119)	Data 0.000 (0.004)	Loss 0.5900 (0.5847)	Acc@1 78.125 (79.700)	Acc@5 99.219 (98.828)
Epoch: [168][128/196]	Time 0.112 (0.114)	Data 0.000 (0.002)	Loss 0.5679 (0.5812)	Acc@1 80.078 (79.745)	Acc@5 98.828 (98.852)
Epoch: [168][192/196]	Time 0.111 (0.114)	Data 0.000 (0.002)	Loss 0.5592 (0.5812)	Acc@1 79.688 (79.912)	Acc@5 98.828 (98.893)
after train
n1: 30 for:
wAcc: 64.32807324798067
test acc: 70.85
Epoche: [169/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [169][0/196]	Time 0.158 (0.158)	Data 0.317 (0.317)	Loss 0.4723 (0.4723)	Acc@1 80.859 (80.859)	Acc@5 100.000 (100.000)
Epoch: [169][64/196]	Time 0.110 (0.114)	Data 0.000 (0.005)	Loss 0.6099 (0.5720)	Acc@1 79.297 (80.210)	Acc@5 99.609 (98.966)
Epoch: [169][128/196]	Time 0.119 (0.114)	Data 0.000 (0.003)	Loss 0.6391 (0.5750)	Acc@1 76.953 (80.220)	Acc@5 99.219 (98.973)
Epoch: [169][192/196]	Time 0.098 (0.113)	Data 0.000 (0.002)	Loss 0.5891 (0.5732)	Acc@1 81.250 (80.230)	Acc@5 98.828 (98.972)
after train
n1: 30 for:
wAcc: 64.30214750397228
test acc: 66.26
Epoche: [170/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [170][0/196]	Time 0.174 (0.174)	Data 0.308 (0.308)	Loss 0.4892 (0.4892)	Acc@1 82.422 (82.422)	Acc@5 99.609 (99.609)
Epoch: [170][64/196]	Time 0.125 (0.118)	Data 0.000 (0.005)	Loss 0.6942 (0.5494)	Acc@1 76.562 (81.076)	Acc@5 98.438 (99.044)
Epoch: [170][128/196]	Time 0.099 (0.113)	Data 0.000 (0.003)	Loss 0.5089 (0.5599)	Acc@1 83.594 (80.541)	Acc@5 99.219 (99.007)
Epoch: [170][192/196]	Time 0.121 (0.114)	Data 0.000 (0.002)	Loss 0.5569 (0.5580)	Acc@1 79.688 (80.671)	Acc@5 99.219 (98.996)
after train
n1: 30 for:
wAcc: 63.40351912737981
test acc: 66.64
Epoche: [171/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [171][0/196]	Time 0.180 (0.180)	Data 0.358 (0.358)	Loss 0.4529 (0.4529)	Acc@1 84.766 (84.766)	Acc@5 99.219 (99.219)
Epoch: [171][64/196]	Time 0.121 (0.117)	Data 0.000 (0.006)	Loss 0.5157 (0.5630)	Acc@1 83.984 (80.817)	Acc@5 98.828 (98.822)
Epoch: [171][128/196]	Time 0.112 (0.114)	Data 0.000 (0.003)	Loss 0.4506 (0.5654)	Acc@1 82.812 (80.605)	Acc@5 100.000 (98.892)
Epoch: [171][192/196]	Time 0.153 (0.114)	Data 0.000 (0.002)	Loss 0.5467 (0.5625)	Acc@1 83.594 (80.643)	Acc@5 98.828 (98.978)
after train
n1: 30 for:
wAcc: 64.7052097177247
test acc: 65.78
Epoche: [172/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [172][0/196]	Time 0.178 (0.178)	Data 0.350 (0.350)	Loss 0.3859 (0.3859)	Acc@1 87.891 (87.891)	Acc@5 99.219 (99.219)
Epoch: [172][64/196]	Time 0.107 (0.116)	Data 0.000 (0.006)	Loss 0.5608 (0.5708)	Acc@1 79.297 (80.409)	Acc@5 98.828 (98.936)
Epoch: [172][128/196]	Time 0.098 (0.115)	Data 0.000 (0.003)	Loss 0.5403 (0.5626)	Acc@1 81.641 (80.762)	Acc@5 98.828 (98.925)
Epoch: [172][192/196]	Time 0.087 (0.113)	Data 0.000 (0.002)	Loss 0.5430 (0.5534)	Acc@1 81.641 (80.971)	Acc@5 98.828 (98.976)
after train
n1: 30 for:
wAcc: 64.63866316245027
test acc: 70.64
Epoche: [173/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [173][0/196]	Time 0.167 (0.167)	Data 0.311 (0.311)	Loss 0.5340 (0.5340)	Acc@1 79.688 (79.688)	Acc@5 99.609 (99.609)
Epoch: [173][64/196]	Time 0.120 (0.115)	Data 0.000 (0.005)	Loss 0.4949 (0.5426)	Acc@1 81.641 (81.238)	Acc@5 99.609 (99.141)
Epoch: [173][128/196]	Time 0.111 (0.115)	Data 0.000 (0.003)	Loss 0.4867 (0.5332)	Acc@1 84.766 (81.665)	Acc@5 99.219 (99.073)
Epoch: [173][192/196]	Time 0.127 (0.115)	Data 0.000 (0.002)	Loss 0.5256 (0.5365)	Acc@1 80.078 (81.550)	Acc@5 99.219 (99.041)
after train
n1: 30 for:
wAcc: 64.69769144928622
test acc: 70.46
Epoche: [174/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [174][0/196]	Time 0.193 (0.193)	Data 0.336 (0.336)	Loss 0.4861 (0.4861)	Acc@1 82.812 (82.812)	Acc@5 100.000 (100.000)
Epoch: [174][64/196]	Time 0.110 (0.114)	Data 0.000 (0.005)	Loss 0.5603 (0.5374)	Acc@1 80.859 (81.394)	Acc@5 98.828 (99.069)
Epoch: [174][128/196]	Time 0.116 (0.115)	Data 0.000 (0.003)	Loss 0.5601 (0.5341)	Acc@1 79.688 (81.510)	Acc@5 98.828 (99.101)
Epoch: [174][192/196]	Time 0.112 (0.114)	Data 0.000 (0.002)	Loss 0.5255 (0.5352)	Acc@1 82.031 (81.543)	Acc@5 98.828 (99.105)
after train
n1: 30 for:
wAcc: 65.54939766131426
test acc: 69.28
Epoche: [175/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [175][0/196]	Time 0.173 (0.173)	Data 0.291 (0.291)	Loss 0.4968 (0.4968)	Acc@1 83.984 (83.984)	Acc@5 100.000 (100.000)
Epoch: [175][64/196]	Time 0.122 (0.112)	Data 0.000 (0.005)	Loss 0.4279 (0.5065)	Acc@1 84.375 (82.602)	Acc@5 98.828 (99.129)
Epoch: [175][128/196]	Time 0.100 (0.113)	Data 0.000 (0.003)	Loss 0.5699 (0.5232)	Acc@1 80.078 (81.937)	Acc@5 99.219 (99.064)
Epoch: [175][192/196]	Time 0.108 (0.113)	Data 0.000 (0.002)	Loss 0.6760 (0.5269)	Acc@1 78.906 (81.898)	Acc@5 97.266 (99.035)
after train
n1: 30 for:
wAcc: 66.10233464680968
test acc: 76.14
Epoche: [176/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [176][0/196]	Time 0.173 (0.173)	Data 0.340 (0.340)	Loss 0.5820 (0.5820)	Acc@1 80.469 (80.469)	Acc@5 99.219 (99.219)
Epoch: [176][64/196]	Time 0.129 (0.115)	Data 0.000 (0.006)	Loss 0.5304 (0.5170)	Acc@1 82.812 (82.338)	Acc@5 98.438 (99.153)
Epoch: [176][128/196]	Time 0.121 (0.114)	Data 0.000 (0.003)	Loss 0.4347 (0.5153)	Acc@1 85.938 (82.298)	Acc@5 99.219 (99.182)
Epoch: [176][192/196]	Time 0.095 (0.113)	Data 0.000 (0.002)	Loss 0.5519 (0.5163)	Acc@1 80.859 (82.219)	Acc@5 99.219 (99.172)
after train
n1: 30 for:
wAcc: 66.18179903995404
test acc: 73.04
Epoche: [177/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [177][0/196]	Time 0.164 (0.164)	Data 0.381 (0.381)	Loss 0.4941 (0.4941)	Acc@1 83.984 (83.984)	Acc@5 99.219 (99.219)
Epoch: [177][64/196]	Time 0.119 (0.114)	Data 0.000 (0.006)	Loss 0.4811 (0.5243)	Acc@1 83.203 (81.899)	Acc@5 99.609 (98.990)
Epoch: [177][128/196]	Time 0.113 (0.114)	Data 0.000 (0.003)	Loss 0.5078 (0.5146)	Acc@1 80.078 (82.413)	Acc@5 100.000 (99.037)
Epoch: [177][192/196]	Time 0.119 (0.114)	Data 0.000 (0.002)	Loss 0.5125 (0.5199)	Acc@1 83.594 (82.128)	Acc@5 99.219 (99.051)
after train
n1: 30 for:
wAcc: 67.25455200760068
test acc: 73.92
Epoche: [178/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [178][0/196]	Time 0.167 (0.167)	Data 0.341 (0.341)	Loss 0.4619 (0.4619)	Acc@1 84.766 (84.766)	Acc@5 99.219 (99.219)
Epoch: [178][64/196]	Time 0.121 (0.114)	Data 0.000 (0.006)	Loss 0.4988 (0.5050)	Acc@1 82.812 (82.590)	Acc@5 98.828 (99.189)
Epoch: [178][128/196]	Time 0.129 (0.114)	Data 0.000 (0.003)	Loss 0.3959 (0.5111)	Acc@1 87.109 (82.404)	Acc@5 100.000 (99.128)
Epoch: [178][192/196]	Time 0.110 (0.114)	Data 0.000 (0.002)	Loss 0.4863 (0.5160)	Acc@1 82.812 (82.224)	Acc@5 99.609 (99.103)
after train
n1: 30 for:
wAcc: 67.55158427767265
test acc: 73.86
Epoche: [179/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [179][0/196]	Time 0.176 (0.176)	Data 0.255 (0.255)	Loss 0.6212 (0.6212)	Acc@1 79.297 (79.297)	Acc@5 98.828 (98.828)
Epoch: [179][64/196]	Time 0.117 (0.118)	Data 0.000 (0.004)	Loss 0.4319 (0.5111)	Acc@1 83.984 (82.332)	Acc@5 100.000 (99.069)
Epoch: [179][128/196]	Time 0.107 (0.116)	Data 0.000 (0.002)	Loss 0.5166 (0.5077)	Acc@1 82.422 (82.413)	Acc@5 99.219 (99.116)
Epoch: [179][192/196]	Time 0.118 (0.114)	Data 0.000 (0.002)	Loss 0.5469 (0.5075)	Acc@1 82.031 (82.549)	Acc@5 98.438 (99.118)
after train
n1: 30 for:
wAcc: 67.45550462119805
test acc: 73.55
Epoche: [180/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [180][0/196]	Time 0.158 (0.158)	Data 0.323 (0.323)	Loss 0.4967 (0.4967)	Acc@1 83.984 (83.984)	Acc@5 99.219 (99.219)
Epoch: [180][64/196]	Time 0.127 (0.112)	Data 0.000 (0.005)	Loss 0.5529 (0.5099)	Acc@1 80.078 (82.368)	Acc@5 98.828 (99.075)
Epoch: [180][128/196]	Time 0.115 (0.113)	Data 0.000 (0.003)	Loss 0.5033 (0.5042)	Acc@1 81.641 (82.652)	Acc@5 100.000 (99.110)
Epoch: [180][192/196]	Time 0.100 (0.112)	Data 0.000 (0.002)	Loss 0.5064 (0.5019)	Acc@1 85.156 (82.721)	Acc@5 97.266 (99.122)
after train
n1: 30 for:
wAcc: 68.05975774501802
test acc: 76.83
Max memory: 112.5757952
 22.395s  