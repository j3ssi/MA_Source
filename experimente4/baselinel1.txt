no display found. Using non-interactive Agg backend
[5, 5, 5]
[16, 32, 64]
Pytorch Training main.py; workers: 6; numOfStages: 3; layerinBlock: 1;widthofFirstLayer: 16; Epochen: 180; reset: False; start epoche: 1; test: True pathtoModell: None; checkpoint: ./output/experimente4/baselinel1; saveModell: False; LR: 0.1
random number: 8194
Files already downloaded and verified

width: 16
module: Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
module: ReLU(inplace=True)
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
conv gefunden
(i,j): (3, 0
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
conv gefunden
(i,j): (4, 0
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
conv gefunden
(i,j): (5, 0
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
conv gefunden
(i,j): (6, 0
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
conv gefunden
(i,j): (7, 0
module: Sequential(
  (0): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
module: Sequential(
  (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
)
width Module: 32
module: Sequential(
  (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
module: Sequential(
  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 64
module: Sequential(
  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 64
module: Sequential(
  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 64
module: Sequential(
  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 64
module: AdaptiveAvgPool2d(output_size=(1, 1))
module: Linear(in_features=64, out_features=10, bias=True)
width: 32
module: Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
module: ReLU(inplace=True)
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
)
width Module: 16
conv gefunden
module: Sequential(
  (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
conv gefunden
(i,j): (9, 0
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
conv gefunden
(i,j): (10, 0
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
conv gefunden
(i,j): (11, 0
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
conv gefunden
(i,j): (12, 0
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
conv gefunden
(i,j): (13, 0
module: Sequential(
  (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
)
width Module: 32
module: Sequential(
  (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
module: Sequential(
  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 64
module: Sequential(
  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 64
module: Sequential(
  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 64
module: Sequential(
  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 64
module: AdaptiveAvgPool2d(output_size=(1, 1))
module: Linear(in_features=64, out_features=10, bias=True)
width: 64
module: Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
module: ReLU(inplace=True)
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 16
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
module: Sequential(
  (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
module: Sequential(
  (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (2): ReLU(inplace=True)
)
width Module: 32
conv gefunden
module: Sequential(
  (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 32
conv gefunden
(i,j): (15, 0
module: Sequential(
  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 64
conv gefunden
(i,j): (16, 0
module: Sequential(
  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 64
conv gefunden
(i,j): (17, 0
module: Sequential(
  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 64
conv gefunden
(i,j): (18, 0
module: Sequential(
  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
width Module: 64
conv gefunden
(i,j): (19, 0
module: AdaptiveAvgPool2d(output_size=(1, 1))
module: Linear(in_features=64, out_features=10, bias=True)
stagesI: {16: [(3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0)], 32: [(10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0)], 64: [(16, 0), (17, 0), (18, 0), (19, 0), (21, None)]}
stagesO: {16: [(0, None), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0)], 32: [(8, 0), (9, 0), (10, 0), (11, 0), (12, 0), (13, 0)], 64: [(14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0)]}
Modell Erstellung
N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): Sequential(
      (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (4): Sequential(
      (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (5): Sequential(
      (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (6): Sequential(
      (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (7): Sequential(
      (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (8): Sequential(
      (0): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (9): Sequential(
      (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (10): Sequential(
      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (11): Sequential(
      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (12): Sequential(
      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (13): Sequential(
      (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (14): Sequential(
      (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (15): Sequential(
      (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (16): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (17): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (18): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (19): Sequential(
      (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (20): AdaptiveAvgPool2d(output_size=(1, 1))
    (21): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
device count: 1
Startepoche: 1
deeper epoch: 0
Epoche: [1/180]; Lr: 0.1
batch Size 256
befor train
/home/jessica.buehler/venv/lib/python3.6/site-packages/torch/cuda/memory.py:234: FutureWarning: torch.cuda.reset_max_memory_allocated now calls torch.cuda.reset_peak_memory_stats, which resets /all/ peak memory stats.
  FutureWarning)
Epoch: [1][0/196]	Time 0.118 (0.118)	Data 0.546 (0.546)	Loss 2.5829 (2.5829)	Acc@1 11.719 (11.719)	Acc@5 54.688 (54.688)
Epoch: [1][64/196]	Time 0.107 (0.087)	Data 0.000 (0.009)	Loss 1.8140 (2.0063)	Acc@1 28.906 (25.012)	Acc@5 87.891 (78.119)
Epoch: [1][128/196]	Time 0.086 (0.087)	Data 0.000 (0.005)	Loss 1.5703 (1.8487)	Acc@1 40.234 (30.669)	Acc@5 90.625 (83.106)
Epoch: [1][192/196]	Time 0.070 (0.086)	Data 0.000 (0.003)	Loss 1.4623 (1.7494)	Acc@1 49.219 (34.760)	Acc@5 89.844 (85.674)
after train
test acc: 44.48
Epoche: [2/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [2][0/196]	Time 0.153 (0.153)	Data 0.525 (0.525)	Loss 1.4706 (1.4706)	Acc@1 44.141 (44.141)	Acc@5 90.234 (90.234)
Epoch: [2][64/196]	Time 0.082 (0.083)	Data 0.000 (0.008)	Loss 1.3189 (1.4297)	Acc@1 44.922 (47.548)	Acc@5 95.312 (92.572)
Epoch: [2][128/196]	Time 0.083 (0.086)	Data 0.000 (0.004)	Loss 1.2269 (1.3668)	Acc@1 53.906 (49.818)	Acc@5 92.578 (93.405)
Epoch: [2][192/196]	Time 0.089 (0.084)	Data 0.000 (0.003)	Loss 1.0347 (1.3064)	Acc@1 63.672 (52.253)	Acc@5 94.922 (93.979)
after train
test acc: 57.24
Epoche: [3/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [3][0/196]	Time 0.107 (0.107)	Data 0.477 (0.477)	Loss 1.2666 (1.2666)	Acc@1 53.516 (53.516)	Acc@5 93.750 (93.750)
Epoch: [3][64/196]	Time 0.081 (0.087)	Data 0.000 (0.008)	Loss 1.0134 (1.1142)	Acc@1 65.625 (59.790)	Acc@5 97.656 (95.769)
Epoch: [3][128/196]	Time 0.071 (0.087)	Data 0.000 (0.004)	Loss 0.9689 (1.0889)	Acc@1 65.625 (60.789)	Acc@5 97.266 (96.124)
Epoch: [3][192/196]	Time 0.073 (0.085)	Data 0.000 (0.003)	Loss 1.0717 (1.0589)	Acc@1 64.062 (61.949)	Acc@5 96.484 (96.318)
after train
test acc: 57.73
Epoche: [4/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [4][0/196]	Time 0.113 (0.113)	Data 0.474 (0.474)	Loss 0.9760 (0.9760)	Acc@1 65.625 (65.625)	Acc@5 96.875 (96.875)
Epoch: [4][64/196]	Time 0.089 (0.086)	Data 0.000 (0.008)	Loss 0.9835 (0.9709)	Acc@1 61.719 (64.988)	Acc@5 96.484 (96.953)
Epoch: [4][128/196]	Time 0.098 (0.085)	Data 0.000 (0.004)	Loss 0.9875 (0.9572)	Acc@1 64.453 (65.652)	Acc@5 95.312 (97.005)
Epoch: [4][192/196]	Time 0.067 (0.085)	Data 0.000 (0.003)	Loss 0.8606 (0.9384)	Acc@1 68.359 (66.455)	Acc@5 98.828 (97.138)
after train
test acc: 60.72
Epoche: [5/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [5][0/196]	Time 0.159 (0.159)	Data 0.574 (0.574)	Loss 0.8499 (0.8499)	Acc@1 69.141 (69.141)	Acc@5 99.219 (99.219)
Epoch: [5][64/196]	Time 0.082 (0.093)	Data 0.000 (0.009)	Loss 1.0127 (0.8814)	Acc@1 66.406 (69.153)	Acc@5 94.531 (97.470)
Epoch: [5][128/196]	Time 0.076 (0.088)	Data 0.000 (0.005)	Loss 0.8780 (0.8614)	Acc@1 67.578 (69.689)	Acc@5 96.484 (97.662)
Epoch: [5][192/196]	Time 0.072 (0.087)	Data 0.000 (0.003)	Loss 0.8150 (0.8437)	Acc@1 72.656 (70.225)	Acc@5 96.875 (97.794)
after train
test acc: 65.96
Epoche: [6/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [6][0/196]	Time 0.156 (0.156)	Data 0.557 (0.557)	Loss 0.7159 (0.7159)	Acc@1 76.562 (76.562)	Acc@5 98.047 (98.047)
Epoch: [6][64/196]	Time 0.085 (0.084)	Data 0.000 (0.009)	Loss 0.7637 (0.7781)	Acc@1 73.828 (72.650)	Acc@5 97.656 (98.221)
Epoch: [6][128/196]	Time 0.082 (0.085)	Data 0.000 (0.005)	Loss 0.7779 (0.7671)	Acc@1 75.391 (72.889)	Acc@5 98.828 (98.310)
Epoch: [6][192/196]	Time 0.071 (0.084)	Data 0.000 (0.003)	Loss 0.7665 (0.7662)	Acc@1 73.047 (72.972)	Acc@5 97.656 (98.263)
after train
test acc: 59.51
Epoche: [7/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [7][0/196]	Time 0.158 (0.158)	Data 0.492 (0.492)	Loss 0.6956 (0.6956)	Acc@1 77.734 (77.734)	Acc@5 99.219 (99.219)
Epoch: [7][64/196]	Time 0.111 (0.085)	Data 0.000 (0.008)	Loss 0.6669 (0.7190)	Acc@1 76.953 (74.904)	Acc@5 99.609 (98.546)
Epoch: [7][128/196]	Time 0.085 (0.084)	Data 0.000 (0.004)	Loss 0.7441 (0.7085)	Acc@1 76.562 (75.363)	Acc@5 99.219 (98.489)
Epoch: [7][192/196]	Time 0.076 (0.083)	Data 0.000 (0.003)	Loss 0.7885 (0.7066)	Acc@1 73.047 (75.397)	Acc@5 98.438 (98.472)
after train
test acc: 66.04
Epoche: [8/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [8][0/196]	Time 0.139 (0.139)	Data 0.525 (0.525)	Loss 0.6443 (0.6443)	Acc@1 75.391 (75.391)	Acc@5 99.219 (99.219)
Epoch: [8][64/196]	Time 0.086 (0.087)	Data 0.000 (0.008)	Loss 0.6038 (0.6818)	Acc@1 81.641 (76.028)	Acc@5 98.828 (98.540)
Epoch: [8][128/196]	Time 0.088 (0.087)	Data 0.000 (0.004)	Loss 0.6420 (0.6706)	Acc@1 77.734 (76.608)	Acc@5 99.609 (98.568)
Epoch: [8][192/196]	Time 0.079 (0.087)	Data 0.000 (0.003)	Loss 0.7305 (0.6607)	Acc@1 75.781 (76.937)	Acc@5 98.438 (98.636)
after train
test acc: 72.6
Epoche: [9/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [9][0/196]	Time 0.090 (0.090)	Data 0.682 (0.682)	Loss 0.6153 (0.6153)	Acc@1 76.172 (76.172)	Acc@5 99.219 (99.219)
Epoch: [9][64/196]	Time 0.075 (0.086)	Data 0.000 (0.011)	Loss 0.5468 (0.6300)	Acc@1 82.422 (78.041)	Acc@5 100.000 (98.834)
Epoch: [9][128/196]	Time 0.077 (0.081)	Data 0.000 (0.006)	Loss 0.6665 (0.6324)	Acc@1 77.344 (77.895)	Acc@5 98.438 (98.749)
Epoch: [9][192/196]	Time 0.068 (0.081)	Data 0.000 (0.004)	Loss 0.6624 (0.6253)	Acc@1 78.516 (78.147)	Acc@5 98.047 (98.755)
after train
test acc: 68.35
Epoche: [10/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [10][0/196]	Time 0.115 (0.115)	Data 0.613 (0.613)	Loss 0.5061 (0.5061)	Acc@1 81.641 (81.641)	Acc@5 98.828 (98.828)
Epoch: [10][64/196]	Time 0.075 (0.081)	Data 0.000 (0.010)	Loss 0.6538 (0.6002)	Acc@1 76.172 (79.447)	Acc@5 99.609 (98.858)
Epoch: [10][128/196]	Time 0.079 (0.080)	Data 0.000 (0.005)	Loss 0.5733 (0.6008)	Acc@1 80.469 (79.091)	Acc@5 99.219 (98.831)
Epoch: [10][192/196]	Time 0.084 (0.080)	Data 0.000 (0.003)	Loss 0.5331 (0.5995)	Acc@1 81.641 (79.198)	Acc@5 98.438 (98.830)
after train
test acc: 71.1
Epoche: [11/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [11][0/196]	Time 0.101 (0.101)	Data 0.550 (0.550)	Loss 0.6438 (0.6438)	Acc@1 78.125 (78.125)	Acc@5 98.828 (98.828)
Epoch: [11][64/196]	Time 0.081 (0.081)	Data 0.000 (0.009)	Loss 0.6075 (0.5843)	Acc@1 80.078 (80.036)	Acc@5 99.219 (98.828)
Epoch: [11][128/196]	Time 0.083 (0.080)	Data 0.000 (0.005)	Loss 0.5266 (0.5743)	Acc@1 80.469 (80.290)	Acc@5 99.219 (98.901)
Epoch: [11][192/196]	Time 0.070 (0.078)	Data 0.000 (0.003)	Loss 0.4418 (0.5760)	Acc@1 84.375 (80.169)	Acc@5 100.000 (98.923)
after train
test acc: 61.76
Epoche: [12/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [12][0/196]	Time 0.106 (0.106)	Data 0.422 (0.422)	Loss 0.5439 (0.5439)	Acc@1 82.031 (82.031)	Acc@5 99.609 (99.609)
Epoch: [12][64/196]	Time 0.069 (0.075)	Data 0.000 (0.007)	Loss 0.5617 (0.5607)	Acc@1 80.078 (80.691)	Acc@5 99.219 (98.972)
Epoch: [12][128/196]	Time 0.088 (0.073)	Data 0.000 (0.004)	Loss 0.5908 (0.5602)	Acc@1 78.516 (80.641)	Acc@5 99.609 (98.995)
Epoch: [12][192/196]	Time 0.094 (0.080)	Data 0.000 (0.002)	Loss 0.4746 (0.5572)	Acc@1 81.250 (80.718)	Acc@5 98.828 (99.010)
after train
test acc: 75.66
Epoche: [13/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [13][0/196]	Time 0.124 (0.124)	Data 0.475 (0.475)	Loss 0.5109 (0.5109)	Acc@1 83.984 (83.984)	Acc@5 98.828 (98.828)
Epoch: [13][64/196]	Time 0.069 (0.082)	Data 0.000 (0.008)	Loss 0.5218 (0.5441)	Acc@1 81.250 (81.454)	Acc@5 99.219 (99.081)
Epoch: [13][128/196]	Time 0.067 (0.076)	Data 0.000 (0.004)	Loss 0.4866 (0.5441)	Acc@1 82.422 (81.183)	Acc@5 99.219 (99.110)
Epoch: [13][192/196]	Time 0.068 (0.074)	Data 0.000 (0.003)	Loss 0.5704 (0.5408)	Acc@1 80.078 (81.297)	Acc@5 100.000 (99.087)
after train
test acc: 72.41
Epoche: [14/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [14][0/196]	Time 0.104 (0.104)	Data 0.343 (0.343)	Loss 0.4413 (0.4413)	Acc@1 83.203 (83.203)	Acc@5 99.609 (99.609)
Epoch: [14][64/196]	Time 0.071 (0.072)	Data 0.000 (0.006)	Loss 0.5289 (0.5359)	Acc@1 80.859 (81.466)	Acc@5 99.219 (99.165)
Epoch: [14][128/196]	Time 0.071 (0.071)	Data 0.000 (0.003)	Loss 0.4979 (0.5410)	Acc@1 82.812 (81.301)	Acc@5 99.609 (99.092)
Epoch: [14][192/196]	Time 0.082 (0.074)	Data 0.000 (0.002)	Loss 0.5192 (0.5390)	Acc@1 82.422 (81.473)	Acc@5 98.438 (99.118)
after train
test acc: 70.83
Epoche: [15/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [15][0/196]	Time 0.100 (0.100)	Data 0.651 (0.651)	Loss 0.4719 (0.4719)	Acc@1 83.594 (83.594)	Acc@5 99.609 (99.609)
Epoch: [15][64/196]	Time 0.074 (0.079)	Data 0.000 (0.010)	Loss 0.6142 (0.5188)	Acc@1 80.469 (82.230)	Acc@5 99.219 (99.231)
Epoch: [15][128/196]	Time 0.063 (0.075)	Data 0.000 (0.005)	Loss 0.4533 (0.5149)	Acc@1 83.984 (82.367)	Acc@5 100.000 (99.161)
Epoch: [15][192/196]	Time 0.068 (0.073)	Data 0.000 (0.004)	Loss 0.5568 (0.5178)	Acc@1 81.250 (82.143)	Acc@5 98.828 (99.152)
after train
test acc: 69.49
Epoche: [16/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [16][0/196]	Time 0.092 (0.092)	Data 0.510 (0.510)	Loss 0.4665 (0.4665)	Acc@1 84.766 (84.766)	Acc@5 98.047 (98.047)
Epoch: [16][64/196]	Time 0.068 (0.071)	Data 0.000 (0.008)	Loss 0.5274 (0.5075)	Acc@1 82.031 (82.536)	Acc@5 99.219 (99.177)
Epoch: [16][128/196]	Time 0.069 (0.070)	Data 0.000 (0.004)	Loss 0.5238 (0.5065)	Acc@1 83.203 (82.437)	Acc@5 99.219 (99.182)
Epoch: [16][192/196]	Time 0.068 (0.070)	Data 0.000 (0.003)	Loss 0.4826 (0.5078)	Acc@1 82.812 (82.371)	Acc@5 98.828 (99.194)
after train
test acc: 70.82
Epoche: [17/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [17][0/196]	Time 0.088 (0.088)	Data 0.543 (0.543)	Loss 0.3795 (0.3795)	Acc@1 85.938 (85.938)	Acc@5 100.000 (100.000)
Epoch: [17][64/196]	Time 0.069 (0.072)	Data 0.000 (0.009)	Loss 0.6341 (0.4964)	Acc@1 80.078 (82.999)	Acc@5 100.000 (99.213)
Epoch: [17][128/196]	Time 0.069 (0.073)	Data 0.000 (0.004)	Loss 0.4755 (0.5029)	Acc@1 81.641 (82.679)	Acc@5 99.609 (99.188)
Epoch: [17][192/196]	Time 0.068 (0.072)	Data 0.000 (0.003)	Loss 0.4548 (0.5059)	Acc@1 84.766 (82.598)	Acc@5 99.219 (99.172)
after train
test acc: 69.06
Epoche: [18/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [18][0/196]	Time 0.082 (0.082)	Data 0.566 (0.566)	Loss 0.4659 (0.4659)	Acc@1 83.594 (83.594)	Acc@5 99.219 (99.219)
Epoch: [18][64/196]	Time 0.061 (0.071)	Data 0.000 (0.009)	Loss 0.4305 (0.4946)	Acc@1 83.203 (82.987)	Acc@5 98.828 (99.213)
Epoch: [18][128/196]	Time 0.088 (0.072)	Data 0.000 (0.005)	Loss 0.4815 (0.4929)	Acc@1 82.422 (82.964)	Acc@5 99.219 (99.270)
Epoch: [18][192/196]	Time 0.095 (0.080)	Data 0.000 (0.003)	Loss 0.4381 (0.4915)	Acc@1 85.156 (83.035)	Acc@5 99.609 (99.251)
after train
test acc: 74.55
Epoche: [19/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [19][0/196]	Time 0.124 (0.124)	Data 0.340 (0.340)	Loss 0.4179 (0.4179)	Acc@1 87.500 (87.500)	Acc@5 99.219 (99.219)
Epoch: [19][64/196]	Time 0.088 (0.075)	Data 0.000 (0.005)	Loss 0.5369 (0.4993)	Acc@1 79.688 (82.812)	Acc@5 99.219 (99.147)
Epoch: [19][128/196]	Time 0.093 (0.077)	Data 0.000 (0.003)	Loss 0.4833 (0.4959)	Acc@1 84.375 (82.937)	Acc@5 99.609 (99.161)
Epoch: [19][192/196]	Time 0.095 (0.083)	Data 0.000 (0.002)	Loss 0.4756 (0.4939)	Acc@1 81.250 (83.142)	Acc@5 99.609 (99.190)
after train
test acc: 78.68
Epoche: [20/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [20][0/196]	Time 0.094 (0.094)	Data 0.473 (0.473)	Loss 0.4822 (0.4822)	Acc@1 83.984 (83.984)	Acc@5 98.438 (98.438)
Epoch: [20][64/196]	Time 0.072 (0.078)	Data 0.000 (0.008)	Loss 0.4398 (0.4810)	Acc@1 84.375 (83.564)	Acc@5 100.000 (99.243)
Epoch: [20][128/196]	Time 0.071 (0.073)	Data 0.000 (0.004)	Loss 0.5543 (0.4753)	Acc@1 78.125 (83.694)	Acc@5 98.047 (99.261)
Epoch: [20][192/196]	Time 0.068 (0.072)	Data 0.000 (0.003)	Loss 0.4781 (0.4802)	Acc@1 83.203 (83.569)	Acc@5 98.828 (99.239)
after train
test acc: 78.0
Epoche: [21/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [21][0/196]	Time 0.088 (0.088)	Data 0.566 (0.566)	Loss 0.4429 (0.4429)	Acc@1 84.375 (84.375)	Acc@5 99.609 (99.609)
Epoch: [21][64/196]	Time 0.071 (0.072)	Data 0.000 (0.009)	Loss 0.5871 (0.4633)	Acc@1 80.859 (84.093)	Acc@5 98.047 (99.195)
Epoch: [21][128/196]	Time 0.069 (0.073)	Data 0.000 (0.005)	Loss 0.4650 (0.4664)	Acc@1 84.375 (83.803)	Acc@5 98.828 (99.243)
Epoch: [21][192/196]	Time 0.068 (0.073)	Data 0.000 (0.003)	Loss 0.3875 (0.4727)	Acc@1 85.156 (83.491)	Acc@5 99.609 (99.239)
after train
test acc: 78.31
Epoche: [22/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [22][0/196]	Time 0.103 (0.103)	Data 0.498 (0.498)	Loss 0.5292 (0.5292)	Acc@1 80.469 (80.469)	Acc@5 99.219 (99.219)
Epoch: [22][64/196]	Time 0.069 (0.070)	Data 0.000 (0.008)	Loss 0.6072 (0.4689)	Acc@1 78.906 (84.020)	Acc@5 98.438 (99.279)
Epoch: [22][128/196]	Time 0.069 (0.071)	Data 0.000 (0.004)	Loss 0.4319 (0.4640)	Acc@1 87.500 (84.033)	Acc@5 98.828 (99.304)
Epoch: [22][192/196]	Time 0.068 (0.071)	Data 0.000 (0.003)	Loss 0.4277 (0.4706)	Acc@1 87.500 (83.897)	Acc@5 99.219 (99.302)
after train
test acc: 78.03
Epoche: [23/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [23][0/196]	Time 0.112 (0.112)	Data 0.482 (0.482)	Loss 0.4971 (0.4971)	Acc@1 83.203 (83.203)	Acc@5 99.609 (99.609)
Epoch: [23][64/196]	Time 0.070 (0.071)	Data 0.000 (0.008)	Loss 0.4891 (0.4569)	Acc@1 83.203 (84.165)	Acc@5 98.828 (99.351)
Epoch: [23][128/196]	Time 0.082 (0.072)	Data 0.000 (0.004)	Loss 0.4157 (0.4549)	Acc@1 88.281 (84.333)	Acc@5 98.828 (99.358)
Epoch: [23][192/196]	Time 0.068 (0.074)	Data 0.000 (0.003)	Loss 0.4458 (0.4592)	Acc@1 85.156 (84.160)	Acc@5 100.000 (99.298)
after train
test acc: 73.11
Epoche: [24/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [24][0/196]	Time 0.098 (0.098)	Data 0.500 (0.500)	Loss 0.4530 (0.4530)	Acc@1 85.156 (85.156)	Acc@5 99.609 (99.609)
Epoch: [24][64/196]	Time 0.070 (0.071)	Data 0.000 (0.008)	Loss 0.4834 (0.4646)	Acc@1 80.469 (83.732)	Acc@5 99.219 (99.327)
Epoch: [24][128/196]	Time 0.069 (0.070)	Data 0.000 (0.004)	Loss 0.3580 (0.4615)	Acc@1 88.281 (83.969)	Acc@5 100.000 (99.313)
Epoch: [24][192/196]	Time 0.083 (0.075)	Data 0.000 (0.003)	Loss 0.4771 (0.4569)	Acc@1 81.641 (84.213)	Acc@5 100.000 (99.290)
after train
test acc: 75.27
Epoche: [25/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [25][0/196]	Time 0.090 (0.090)	Data 0.370 (0.370)	Loss 0.4714 (0.4714)	Acc@1 83.203 (83.203)	Acc@5 100.000 (100.000)
Epoch: [25][64/196]	Time 0.069 (0.071)	Data 0.000 (0.006)	Loss 0.4954 (0.4510)	Acc@1 83.984 (84.681)	Acc@5 98.438 (99.345)
Epoch: [25][128/196]	Time 0.069 (0.070)	Data 0.000 (0.003)	Loss 0.5105 (0.4457)	Acc@1 81.250 (84.702)	Acc@5 98.438 (99.388)
Epoch: [25][192/196]	Time 0.069 (0.070)	Data 0.000 (0.002)	Loss 0.5562 (0.4532)	Acc@1 82.812 (84.583)	Acc@5 99.219 (99.332)
after train
test acc: 71.6
Epoche: [26/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [26][0/196]	Time 0.110 (0.110)	Data 0.479 (0.479)	Loss 0.3875 (0.3875)	Acc@1 87.109 (87.109)	Acc@5 99.219 (99.219)
Epoch: [26][64/196]	Time 0.071 (0.077)	Data 0.000 (0.008)	Loss 0.4477 (0.4412)	Acc@1 85.156 (84.645)	Acc@5 100.000 (99.375)
Epoch: [26][128/196]	Time 0.070 (0.076)	Data 0.000 (0.004)	Loss 0.4971 (0.4393)	Acc@1 85.156 (84.893)	Acc@5 98.828 (99.428)
Epoch: [26][192/196]	Time 0.068 (0.074)	Data 0.000 (0.003)	Loss 0.4270 (0.4484)	Acc@1 84.766 (84.561)	Acc@5 100.000 (99.369)
after train
test acc: 78.04
Epoche: [27/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [27][0/196]	Time 0.117 (0.117)	Data 0.494 (0.494)	Loss 0.4786 (0.4786)	Acc@1 85.547 (85.547)	Acc@5 98.828 (98.828)
Epoch: [27][64/196]	Time 0.068 (0.081)	Data 0.000 (0.008)	Loss 0.5501 (0.4449)	Acc@1 80.078 (84.772)	Acc@5 99.219 (99.495)
Epoch: [27][128/196]	Time 0.068 (0.076)	Data 0.000 (0.004)	Loss 0.3925 (0.4418)	Acc@1 88.281 (84.959)	Acc@5 100.000 (99.464)
Epoch: [27][192/196]	Time 0.069 (0.074)	Data 0.000 (0.003)	Loss 0.4462 (0.4476)	Acc@1 85.547 (84.727)	Acc@5 98.828 (99.391)
after train
test acc: 72.78
Epoche: [28/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [28][0/196]	Time 0.096 (0.096)	Data 0.533 (0.533)	Loss 0.5276 (0.5276)	Acc@1 82.031 (82.031)	Acc@5 98.828 (98.828)
Epoch: [28][64/196]	Time 0.070 (0.070)	Data 0.000 (0.008)	Loss 0.3909 (0.4330)	Acc@1 88.281 (84.874)	Acc@5 100.000 (99.483)
Epoch: [28][128/196]	Time 0.069 (0.072)	Data 0.000 (0.004)	Loss 0.3733 (0.4441)	Acc@1 86.719 (84.590)	Acc@5 100.000 (99.391)
Epoch: [28][192/196]	Time 0.068 (0.071)	Data 0.000 (0.003)	Loss 0.3713 (0.4393)	Acc@1 88.281 (84.762)	Acc@5 98.438 (99.381)
after train
test acc: 75.47
Epoche: [29/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [29][0/196]	Time 0.144 (0.144)	Data 0.336 (0.336)	Loss 0.4850 (0.4850)	Acc@1 83.203 (83.203)	Acc@5 100.000 (100.000)
Epoch: [29][64/196]	Time 0.096 (0.097)	Data 0.000 (0.005)	Loss 0.3907 (0.4434)	Acc@1 85.938 (84.778)	Acc@5 99.219 (99.399)
Epoch: [29][128/196]	Time 0.096 (0.096)	Data 0.000 (0.003)	Loss 0.4981 (0.4412)	Acc@1 83.594 (84.790)	Acc@5 98.828 (99.358)
Epoch: [29][192/196]	Time 0.095 (0.096)	Data 0.000 (0.002)	Loss 0.5048 (0.4410)	Acc@1 80.859 (84.802)	Acc@5 99.609 (99.352)
after train
test acc: 73.16
Epoche: [30/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [30][0/196]	Time 0.115 (0.115)	Data 0.519 (0.519)	Loss 0.4103 (0.4103)	Acc@1 82.812 (82.812)	Acc@5 100.000 (100.000)
Epoch: [30][64/196]	Time 0.069 (0.073)	Data 0.000 (0.008)	Loss 0.4057 (0.4475)	Acc@1 86.719 (84.339)	Acc@5 100.000 (99.417)
Epoch: [30][128/196]	Time 0.067 (0.075)	Data 0.000 (0.004)	Loss 0.5467 (0.4378)	Acc@1 81.250 (84.693)	Acc@5 98.828 (99.425)
Epoch: [30][192/196]	Time 0.093 (0.077)	Data 0.000 (0.003)	Loss 0.5065 (0.4372)	Acc@1 84.766 (84.851)	Acc@5 98.438 (99.409)
after train
test acc: 76.92
Epoche: [31/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [31][0/196]	Time 0.119 (0.119)	Data 0.493 (0.493)	Loss 0.4156 (0.4156)	Acc@1 86.719 (86.719)	Acc@5 99.219 (99.219)
Epoch: [31][64/196]	Time 0.071 (0.075)	Data 0.000 (0.008)	Loss 0.3876 (0.4320)	Acc@1 84.375 (84.838)	Acc@5 100.000 (99.441)
Epoch: [31][128/196]	Time 0.070 (0.072)	Data 0.000 (0.004)	Loss 0.4987 (0.4343)	Acc@1 84.766 (84.878)	Acc@5 99.219 (99.449)
Epoch: [31][192/196]	Time 0.068 (0.071)	Data 0.000 (0.003)	Loss 0.4414 (0.4378)	Acc@1 84.375 (84.758)	Acc@5 99.609 (99.407)
after train
test acc: 76.71
Epoche: [32/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [32][0/196]	Time 0.087 (0.087)	Data 0.510 (0.510)	Loss 0.3833 (0.3833)	Acc@1 85.547 (85.547)	Acc@5 99.609 (99.609)
Epoch: [32][64/196]	Time 0.070 (0.081)	Data 0.000 (0.008)	Loss 0.4354 (0.4299)	Acc@1 84.766 (85.367)	Acc@5 99.609 (99.447)
Epoch: [32][128/196]	Time 0.070 (0.075)	Data 0.000 (0.004)	Loss 0.3789 (0.4243)	Acc@1 87.891 (85.483)	Acc@5 100.000 (99.455)
Epoch: [32][192/196]	Time 0.069 (0.074)	Data 0.000 (0.003)	Loss 0.4662 (0.4295)	Acc@1 81.641 (85.211)	Acc@5 99.219 (99.452)
after train
test acc: 74.23
Epoche: [33/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [33][0/196]	Time 0.099 (0.099)	Data 0.477 (0.477)	Loss 0.3283 (0.3283)	Acc@1 87.109 (87.109)	Acc@5 100.000 (100.000)
Epoch: [33][64/196]	Time 0.091 (0.080)	Data 0.000 (0.008)	Loss 0.4737 (0.4215)	Acc@1 83.984 (85.084)	Acc@5 98.828 (99.501)
Epoch: [33][128/196]	Time 0.096 (0.087)	Data 0.000 (0.004)	Loss 0.4315 (0.4259)	Acc@1 84.375 (85.096)	Acc@5 99.609 (99.479)
Epoch: [33][192/196]	Time 0.068 (0.083)	Data 0.000 (0.003)	Loss 0.3980 (0.4300)	Acc@1 83.984 (84.923)	Acc@5 99.609 (99.441)
after train
test acc: 74.63
Epoche: [34/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [34][0/196]	Time 0.121 (0.121)	Data 0.485 (0.485)	Loss 0.3138 (0.3138)	Acc@1 88.281 (88.281)	Acc@5 99.609 (99.609)
Epoch: [34][64/196]	Time 0.069 (0.072)	Data 0.000 (0.008)	Loss 0.3838 (0.4272)	Acc@1 86.328 (84.934)	Acc@5 99.609 (99.357)
Epoch: [34][128/196]	Time 0.096 (0.081)	Data 0.000 (0.004)	Loss 0.5665 (0.4305)	Acc@1 80.859 (84.938)	Acc@5 98.438 (99.403)
Epoch: [34][192/196]	Time 0.084 (0.083)	Data 0.000 (0.003)	Loss 0.4164 (0.4293)	Acc@1 85.938 (85.069)	Acc@5 99.609 (99.401)
after train
test acc: 75.25
Epoche: [35/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [35][0/196]	Time 0.095 (0.095)	Data 0.368 (0.368)	Loss 0.4497 (0.4497)	Acc@1 85.547 (85.547)	Acc@5 99.219 (99.219)
Epoch: [35][64/196]	Time 0.083 (0.074)	Data 0.000 (0.006)	Loss 0.4264 (0.4213)	Acc@1 86.719 (85.613)	Acc@5 98.438 (99.411)
Epoch: [35][128/196]	Time 0.084 (0.078)	Data 0.000 (0.003)	Loss 0.4896 (0.4214)	Acc@1 82.422 (85.541)	Acc@5 100.000 (99.413)
Epoch: [35][192/196]	Time 0.082 (0.080)	Data 0.000 (0.002)	Loss 0.3914 (0.4239)	Acc@1 87.500 (85.486)	Acc@5 99.609 (99.405)
after train
test acc: 77.6
Epoche: [36/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [36][0/196]	Time 0.103 (0.103)	Data 0.548 (0.548)	Loss 0.3938 (0.3938)	Acc@1 86.328 (86.328)	Acc@5 99.609 (99.609)
Epoch: [36][64/196]	Time 0.068 (0.078)	Data 0.000 (0.009)	Loss 0.4418 (0.4183)	Acc@1 86.719 (85.481)	Acc@5 99.219 (99.519)
Epoch: [36][128/196]	Time 0.071 (0.074)	Data 0.000 (0.005)	Loss 0.3929 (0.4208)	Acc@1 85.938 (85.504)	Acc@5 99.219 (99.431)
Epoch: [36][192/196]	Time 0.085 (0.078)	Data 0.000 (0.003)	Loss 0.4041 (0.4249)	Acc@1 86.328 (85.292)	Acc@5 99.219 (99.401)
after train
test acc: 79.99
Epoche: [37/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [37][0/196]	Time 0.108 (0.108)	Data 0.490 (0.490)	Loss 0.4120 (0.4120)	Acc@1 86.328 (86.328)	Acc@5 99.219 (99.219)
Epoch: [37][64/196]	Time 0.087 (0.087)	Data 0.000 (0.008)	Loss 0.3491 (0.4041)	Acc@1 88.281 (86.082)	Acc@5 100.000 (99.417)
Epoch: [37][128/196]	Time 0.085 (0.086)	Data 0.000 (0.004)	Loss 0.4330 (0.4115)	Acc@1 85.547 (85.832)	Acc@5 98.828 (99.367)
Epoch: [37][192/196]	Time 0.084 (0.085)	Data 0.000 (0.003)	Loss 0.4021 (0.4210)	Acc@1 85.547 (85.539)	Acc@5 99.219 (99.383)
after train
test acc: 77.77
Epoche: [38/180]; Lr: 0.1
batch Size 256
befor train
Epoch: [38][0/196]	Time 0.107 (0.107)	Data 0.524 (0.524)	Loss 0.3476 (0.3476)	Acc@1 89.844 (89.844)	Acc@5 99.609 (99.609)
Epoch: [38][64/196]	Time 0.069 (0.073)	Data 0.000 (0.008)	Loss 0.4474 (0.4072)	Acc@1 83.594 (85.787)	Acc@5 100.000 (99.393)
Epoch: [38][128/196]	Time 0.069 (0.071)	Data 0.000 (0.004)	Loss 0.3721 (0.4155)	Acc@1 87.500 (85.668)	Acc@5 100.000 (99.400)
Epoch: [38][192/196]	Time 0.094 (0.075)	Data 0.000 (0.003)	Loss 0.4447 (0.4159)	Acc@1 86.719 (85.727)	Acc@5 99.219 (99.397)
after train
test acc: 67.58
Epoche: [39/180]; Lr: 0.1
batch Size 256
befor train
