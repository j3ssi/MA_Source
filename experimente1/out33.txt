no display found. Using non-interactive Agg backend
[5, 5, 5]
Cifar10: True; cifar100: False
False
Files already downloaded and verified

Arch Num:  [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
count0: 487386

Epoch: [1 | 180] LR: 0.100000
Epoch: [1][0/25]	Time 0.819 (0.819)	Data 0.735 (0.735)	Loss 3.3734 (3.3734)	Acc@1 9.961 (9.961)	Acc@5 51.074 (51.074)

Epoch: [2 | 180] LR: 0.100000
Epoch: [2][0/25]	Time 0.716 (0.716)	Data 0.692 (0.692)	Loss 2.9527 (2.9527)	Acc@1 12.842 (12.842)	Acc@5 55.811 (55.811)

Epoch: [3 | 180] LR: 0.100000
Epoch: [3][0/25]	Time 0.755 (0.755)	Data 0.623 (0.623)	Loss 2.6024 (2.6024)	Acc@1 22.656 (22.656)	Acc@5 79.395 (79.395)

Epoch: [4 | 180] LR: 0.100000
Epoch: [4][0/25]	Time 0.744 (0.744)	Data 0.651 (0.651)	Loss 2.4311 (2.4311)	Acc@1 26.270 (26.270)	Acc@5 83.740 (83.740)

Epoch: [5 | 180] LR: 0.100000
Epoch: [5][0/25]	Time 0.733 (0.733)	Data 0.705 (0.705)	Loss 2.2863 (2.2863)	Acc@1 33.936 (33.936)	Acc@5 87.158 (87.158)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [6 | 180] LR: 0.100000
Epoch: [6][0/25]	Time 0.770 (0.770)	Data 0.642 (0.642)	Loss 2.0644 (2.0644)	Acc@1 40.674 (40.674)	Acc@5 90.967 (90.967)

Epoch: [7 | 180] LR: 0.100000
Epoch: [7][0/25]	Time 0.761 (0.761)	Data 0.770 (0.770)	Loss 1.9699 (1.9699)	Acc@1 44.189 (44.189)	Acc@5 91.943 (91.943)

Epoch: [8 | 180] LR: 0.100000
Epoch: [8][0/25]	Time 0.709 (0.709)	Data 0.975 (0.975)	Loss 1.8625 (1.8625)	Acc@1 47.656 (47.656)	Acc@5 92.236 (92.236)

Epoch: [9 | 180] LR: 0.100000
Epoch: [9][0/25]	Time 0.743 (0.743)	Data 0.631 (0.631)	Loss 1.6833 (1.6833)	Acc@1 51.953 (51.953)	Acc@5 93.945 (93.945)

Epoch: [10 | 180] LR: 0.100000
Epoch: [10][0/25]	Time 0.737 (0.737)	Data 0.654 (0.654)	Loss 1.5008 (1.5008)	Acc@1 58.594 (58.594)	Acc@5 96.094 (96.094)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [11 | 180] LR: 0.100000
Epoch: [11][0/25]	Time 0.695 (0.695)	Data 0.644 (0.644)	Loss 1.3831 (1.3831)	Acc@1 63.965 (63.965)	Acc@5 96.045 (96.045)

Epoch: [12 | 180] LR: 0.100000
Epoch: [12][0/25]	Time 0.741 (0.741)	Data 0.664 (0.664)	Loss 1.3399 (1.3399)	Acc@1 64.258 (64.258)	Acc@5 97.168 (97.168)

Epoch: [13 | 180] LR: 0.100000
Epoch: [13][0/25]	Time 0.765 (0.765)	Data 0.607 (0.607)	Loss 1.2062 (1.2062)	Acc@1 69.043 (69.043)	Acc@5 97.461 (97.461)

Epoch: [14 | 180] LR: 0.100000
Epoch: [14][0/25]	Time 0.757 (0.757)	Data 0.639 (0.639)	Loss 1.1075 (1.1075)	Acc@1 72.412 (72.412)	Acc@5 97.803 (97.803)

Epoch: [15 | 180] LR: 0.100000
Epoch: [15][0/25]	Time 0.711 (0.711)	Data 0.641 (0.641)	Loss 0.9850 (0.9850)	Acc@1 75.977 (75.977)	Acc@5 98.633 (98.633)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [16 | 180] LR: 0.100000
Epoch: [16][0/25]	Time 0.732 (0.732)	Data 0.726 (0.726)	Loss 0.9439 (0.9439)	Acc@1 77.734 (77.734)	Acc@5 98.730 (98.730)

Epoch: [17 | 180] LR: 0.100000
Epoch: [17][0/25]	Time 0.716 (0.716)	Data 0.670 (0.670)	Loss 0.9153 (0.9153)	Acc@1 76.807 (76.807)	Acc@5 98.438 (98.438)

Epoch: [18 | 180] LR: 0.100000
Epoch: [18][0/25]	Time 0.771 (0.771)	Data 0.657 (0.657)	Loss 0.8209 (0.8209)	Acc@1 81.494 (81.494)	Acc@5 99.316 (99.316)

Epoch: [19 | 180] LR: 0.100000
Epoch: [19][0/25]	Time 0.679 (0.679)	Data 0.723 (0.723)	Loss 0.8506 (0.8506)	Acc@1 80.859 (80.859)	Acc@5 98.535 (98.535)

Epoch: [20 | 180] LR: 0.100000
Epoch: [20][0/25]	Time 0.736 (0.736)	Data 0.643 (0.643)	Loss 0.7930 (0.7930)	Acc@1 82.373 (82.373)	Acc@5 99.219 (99.219)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [21 | 180] LR: 0.100000
Epoch: [21][0/25]	Time 0.757 (0.757)	Data 0.614 (0.614)	Loss 0.8228 (0.8228)	Acc@1 80.762 (80.762)	Acc@5 99.365 (99.365)

Epoch: [22 | 180] LR: 0.100000
Epoch: [22][0/25]	Time 0.750 (0.750)	Data 0.661 (0.661)	Loss 0.7097 (0.7097)	Acc@1 84.521 (84.521)	Acc@5 99.365 (99.365)

Epoch: [23 | 180] LR: 0.100000
Epoch: [23][0/25]	Time 0.758 (0.758)	Data 0.698 (0.698)	Loss 0.6666 (0.6666)	Acc@1 86.670 (86.670)	Acc@5 99.561 (99.561)

Epoch: [24 | 180] LR: 0.100000
Epoch: [24][0/25]	Time 0.738 (0.738)	Data 0.681 (0.681)	Loss 0.7504 (0.7504)	Acc@1 83.203 (83.203)	Acc@5 99.219 (99.219)

Epoch: [25 | 180] LR: 0.100000
Epoch: [25][0/25]	Time 0.762 (0.762)	Data 0.688 (0.688)	Loss 0.7727 (0.7727)	Acc@1 82.129 (82.129)	Acc@5 98.877 (98.877)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [26 | 180] LR: 0.100000
Epoch: [26][0/25]	Time 0.701 (0.701)	Data 0.650 (0.650)	Loss 0.7036 (0.7036)	Acc@1 84.863 (84.863)	Acc@5 99.316 (99.316)

Epoch: [27 | 180] LR: 0.100000
Epoch: [27][0/25]	Time 0.737 (0.737)	Data 0.715 (0.715)	Loss 0.7039 (0.7039)	Acc@1 84.277 (84.277)	Acc@5 99.219 (99.219)

Epoch: [28 | 180] LR: 0.100000
Epoch: [28][0/25]	Time 0.858 (0.858)	Data 0.803 (0.803)	Loss 0.6841 (0.6841)	Acc@1 85.742 (85.742)	Acc@5 99.609 (99.609)

Epoch: [29 | 180] LR: 0.100000
Epoch: [29][0/25]	Time 0.722 (0.722)	Data 0.736 (0.736)	Loss 0.6698 (0.6698)	Acc@1 86.279 (86.279)	Acc@5 99.316 (99.316)

Epoch: [30 | 180] LR: 0.100000
Epoch: [30][0/25]	Time 0.692 (0.692)	Data 0.728 (0.728)	Loss 0.7215 (0.7215)	Acc@1 84.277 (84.277)	Acc@5 99.121 (99.121)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 486232 ; 487386 ; 0.9976322668275248

Epoch: [31 | 180] LR: 0.100000
Epoch: [31][0/25]	Time 0.734 (0.734)	Data 0.709 (0.709)	Loss 0.6543 (0.6543)	Acc@1 86.816 (86.816)	Acc@5 99.414 (99.414)

Epoch: [32 | 180] LR: 0.100000
Epoch: [32][0/25]	Time 0.668 (0.668)	Data 0.615 (0.615)	Loss 0.6927 (0.6927)	Acc@1 85.400 (85.400)	Acc@5 99.316 (99.316)

Epoch: [33 | 180] LR: 0.100000
Epoch: [33][0/25]	Time 0.698 (0.698)	Data 0.752 (0.752)	Loss 0.7424 (0.7424)	Acc@1 83.203 (83.203)	Acc@5 99.414 (99.414)

Epoch: [34 | 180] LR: 0.100000
Epoch: [34][0/25]	Time 0.739 (0.739)	Data 0.733 (0.733)	Loss 0.6677 (0.6677)	Acc@1 86.133 (86.133)	Acc@5 99.561 (99.561)

Epoch: [35 | 180] LR: 0.100000
Epoch: [35][0/25]	Time 0.706 (0.706)	Data 0.632 (0.632)	Loss 0.6539 (0.6539)	Acc@1 86.621 (86.621)	Acc@5 99.268 (99.268)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 480748 ; 487386 ; 0.9863804048536479

Epoch: [36 | 180] LR: 0.100000
Epoch: [36][0/25]	Time 0.726 (0.726)	Data 0.654 (0.654)	Loss 0.6515 (0.6515)	Acc@1 87.305 (87.305)	Acc@5 99.609 (99.609)

Epoch: [37 | 180] LR: 0.100000
Epoch: [37][0/25]	Time 0.762 (0.762)	Data 0.669 (0.669)	Loss 0.6154 (0.6154)	Acc@1 87.549 (87.549)	Acc@5 99.609 (99.609)

Epoch: [38 | 180] LR: 0.100000
Epoch: [38][0/25]	Time 0.751 (0.751)	Data 0.633 (0.633)	Loss 0.6638 (0.6638)	Acc@1 86.865 (86.865)	Acc@5 99.512 (99.512)

Epoch: [39 | 180] LR: 0.100000
Epoch: [39][0/25]	Time 0.726 (0.726)	Data 0.806 (0.806)	Loss 0.6433 (0.6433)	Acc@1 87.012 (87.012)	Acc@5 99.756 (99.756)

Epoch: [40 | 180] LR: 0.100000
Epoch: [40][0/25]	Time 0.739 (0.739)	Data 0.705 (0.705)	Loss 0.6483 (0.6483)	Acc@1 86.914 (86.914)	Acc@5 99.561 (99.561)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 53, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(53, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(53, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 472956 ; 487386 ; 0.9703930765348204

Epoch: [41 | 180] LR: 0.100000
Epoch: [41][0/25]	Time 0.752 (0.752)	Data 0.683 (0.683)	Loss 0.6397 (0.6397)	Acc@1 87.305 (87.305)	Acc@5 99.414 (99.414)

Epoch: [42 | 180] LR: 0.100000
Epoch: [42][0/25]	Time 0.715 (0.715)	Data 0.725 (0.725)	Loss 0.6238 (0.6238)	Acc@1 86.377 (86.377)	Acc@5 99.854 (99.854)

Epoch: [43 | 180] LR: 0.100000
Epoch: [43][0/25]	Time 0.760 (0.760)	Data 0.664 (0.664)	Loss 0.6600 (0.6600)	Acc@1 85.889 (85.889)	Acc@5 99.414 (99.414)

Epoch: [44 | 180] LR: 0.100000
Epoch: [44][0/25]	Time 0.741 (0.741)	Data 0.668 (0.668)	Loss 0.6053 (0.6053)	Acc@1 89.355 (89.355)	Acc@5 99.561 (99.561)

Epoch: [45 | 180] LR: 0.100000
Epoch: [45][0/25]	Time 0.729 (0.729)	Data 0.816 (0.816)	Loss 0.6376 (0.6376)	Acc@1 87.256 (87.256)	Acc@5 99.658 (99.658)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 46, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(46, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(46, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 459676 ; 487386 ; 0.9431456791947245

Epoch: [46 | 180] LR: 0.100000
Epoch: [46][0/25]	Time 0.710 (0.710)	Data 0.671 (0.671)	Loss 0.6726 (0.6726)	Acc@1 86.377 (86.377)	Acc@5 99.561 (99.561)

Epoch: [47 | 180] LR: 0.100000
Epoch: [47][0/25]	Time 0.713 (0.713)	Data 0.676 (0.676)	Loss 0.5859 (0.5859)	Acc@1 88.818 (88.818)	Acc@5 99.561 (99.561)

Epoch: [48 | 180] LR: 0.100000
Epoch: [48][0/25]	Time 0.886 (0.886)	Data 0.826 (0.826)	Loss 0.6517 (0.6517)	Acc@1 87.158 (87.158)	Acc@5 99.561 (99.561)

Epoch: [49 | 180] LR: 0.100000
Epoch: [49][0/25]	Time 0.695 (0.695)	Data 0.659 (0.659)	Loss 0.6296 (0.6296)	Acc@1 87.939 (87.939)	Acc@5 99.609 (99.609)

Epoch: [50 | 180] LR: 0.100000
Epoch: [50][0/25]	Time 0.680 (0.680)	Data 0.651 (0.651)	Loss 0.5898 (0.5898)	Acc@1 89.209 (89.209)	Acc@5 99.609 (99.609)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 41, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(41, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(41, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 450438 ; 487386 ; 0.9241915032438355

Epoch: [51 | 180] LR: 0.100000
Epoch: [51][0/25]	Time 0.741 (0.741)	Data 0.708 (0.708)	Loss 0.6256 (0.6256)	Acc@1 87.256 (87.256)	Acc@5 99.707 (99.707)

Epoch: [52 | 180] LR: 0.100000
Epoch: [52][0/25]	Time 0.771 (0.771)	Data 0.666 (0.666)	Loss 0.5833 (0.5833)	Acc@1 89.062 (89.062)	Acc@5 99.561 (99.561)

Epoch: [53 | 180] LR: 0.100000
Epoch: [53][0/25]	Time 0.687 (0.687)	Data 0.669 (0.669)	Loss 0.6052 (0.6052)	Acc@1 89.307 (89.307)	Acc@5 99.365 (99.365)

Epoch: [54 | 180] LR: 0.100000
Epoch: [54][0/25]	Time 0.771 (0.771)	Data 0.743 (0.743)	Loss 0.6273 (0.6273)	Acc@1 87.988 (87.988)	Acc@5 99.609 (99.609)

Epoch: [55 | 180] LR: 0.100000
Epoch: [55][0/25]	Time 0.735 (0.735)	Data 0.799 (0.799)	Loss 0.5955 (0.5955)	Acc@1 88.525 (88.525)	Acc@5 99.463 (99.463)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(10, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 35, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(35, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(35, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 433978 ; 487386 ; 0.8904195032274214

Epoch: [56 | 180] LR: 0.100000
Epoch: [56][0/25]	Time 0.695 (0.695)	Data 0.620 (0.620)	Loss 0.5895 (0.5895)	Acc@1 88.867 (88.867)	Acc@5 99.658 (99.658)

Epoch: [57 | 180] LR: 0.100000
Epoch: [57][0/25]	Time 0.709 (0.709)	Data 0.669 (0.669)	Loss 0.5844 (0.5844)	Acc@1 88.916 (88.916)	Acc@5 99.658 (99.658)

Epoch: [58 | 180] LR: 0.100000
Epoch: [58][0/25]	Time 0.701 (0.701)	Data 0.682 (0.682)	Loss 0.6332 (0.6332)	Acc@1 87.451 (87.451)	Acc@5 99.707 (99.707)

Epoch: [59 | 180] LR: 0.100000
Epoch: [59][0/25]	Time 0.689 (0.689)	Data 0.840 (0.840)	Loss 0.5622 (0.5622)	Acc@1 90.283 (90.283)	Acc@5 99.707 (99.707)

Epoch: [60 | 180] LR: 0.100000
Epoch: [60][0/25]	Time 0.668 (0.668)	Data 0.660 (0.660)	Loss 0.6020 (0.6020)	Acc@1 88.428 (88.428)	Acc@5 99.854 (99.854)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(8, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(6, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(25, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 418098 ; 487386 ; 0.8578375250827885

Epoch: [61 | 180] LR: 0.100000
Epoch: [61][0/25]	Time 0.739 (0.739)	Data 0.731 (0.731)	Loss 0.6121 (0.6121)	Acc@1 88.818 (88.818)	Acc@5 99.561 (99.561)

Epoch: [62 | 180] LR: 0.100000
Epoch: [62][0/25]	Time 0.712 (0.712)	Data 0.703 (0.703)	Loss 0.5955 (0.5955)	Acc@1 88.037 (88.037)	Acc@5 99.756 (99.756)

Epoch: [63 | 180] LR: 0.100000
Epoch: [63][0/25]	Time 0.748 (0.748)	Data 0.631 (0.631)	Loss 0.6305 (0.6305)	Acc@1 86.719 (86.719)	Acc@5 99.707 (99.707)

Epoch: [64 | 180] LR: 0.100000
Epoch: [64][0/25]	Time 0.747 (0.747)	Data 0.627 (0.627)	Loss 0.5833 (0.5833)	Acc@1 88.916 (88.916)	Acc@5 99.609 (99.609)

Epoch: [65 | 180] LR: 0.100000
Epoch: [65][0/25]	Time 0.669 (0.669)	Data 0.682 (0.682)	Loss 0.6397 (0.6397)	Acc@1 87.012 (87.012)	Acc@5 99.658 (99.658)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(7, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 5, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(5, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(22, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 410302 ; 487386 ; 0.8418419897165696

Epoch: [66 | 180] LR: 0.100000
Epoch: [66][0/25]	Time 0.735 (0.735)	Data 0.652 (0.652)	Loss 0.5929 (0.5929)	Acc@1 88.721 (88.721)	Acc@5 99.658 (99.658)

Epoch: [67 | 180] LR: 0.100000
Epoch: [67][0/25]	Time 0.676 (0.676)	Data 0.649 (0.649)	Loss 0.5836 (0.5836)	Acc@1 89.697 (89.697)	Acc@5 99.707 (99.707)

Epoch: [68 | 180] LR: 0.100000
Epoch: [68][0/25]	Time 0.719 (0.719)	Data 0.669 (0.669)	Loss 0.5760 (0.5760)	Acc@1 89.160 (89.160)	Acc@5 99.658 (99.658)

Epoch: [69 | 180] LR: 0.100000
Epoch: [69][0/25]	Time 0.734 (0.734)	Data 0.650 (0.650)	Loss 0.5879 (0.5879)	Acc@1 89.209 (89.209)	Acc@5 99.463 (99.463)

Epoch: [70 | 180] LR: 0.100000
Epoch: [70][0/25]	Time 0.744 (0.744)	Data 0.750 (0.750)	Loss 0.6054 (0.6054)	Acc@1 88.721 (88.721)	Acc@5 99.512 (99.512)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 58, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(58, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(20, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 401640 ; 487386 ; 0.8240696285900703

Epoch: [71 | 180] LR: 0.100000
Epoch: [71][0/25]	Time 0.681 (0.681)	Data 0.687 (0.687)	Loss 0.6040 (0.6040)	Acc@1 88.916 (88.916)	Acc@5 99.756 (99.756)

Epoch: [72 | 180] LR: 0.100000
Epoch: [72][0/25]	Time 0.714 (0.714)	Data 0.640 (0.640)	Loss 0.5751 (0.5751)	Acc@1 89.551 (89.551)	Acc@5 99.707 (99.707)

Epoch: [73 | 180] LR: 0.100000
Epoch: [73][0/25]	Time 0.698 (0.698)	Data 0.668 (0.668)	Loss 0.5635 (0.5635)	Acc@1 89.062 (89.062)	Acc@5 99.756 (99.756)

Epoch: [74 | 180] LR: 0.100000
Epoch: [74][0/25]	Time 0.714 (0.714)	Data 0.671 (0.671)	Loss 0.5873 (0.5873)	Acc@1 89.307 (89.307)	Acc@5 99.268 (99.268)

Epoch: [75 | 180] LR: 0.100000
Epoch: [75][0/25]	Time 0.720 (0.720)	Data 0.680 (0.680)	Loss 0.5767 (0.5767)	Acc@1 89.258 (89.258)	Acc@5 99.463 (99.463)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 5, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(5, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(2, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 57, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(57, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(57, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(17, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 394710 ; 487386 ; 0.8098509189841316

Epoch: [76 | 180] LR: 0.100000
Epoch: [76][0/25]	Time 0.665 (0.665)	Data 0.670 (0.670)	Loss 0.5852 (0.5852)	Acc@1 89.404 (89.404)	Acc@5 99.707 (99.707)

Epoch: [77 | 180] LR: 0.100000
Epoch: [77][0/25]	Time 0.703 (0.703)	Data 0.718 (0.718)	Loss 0.5693 (0.5693)	Acc@1 89.111 (89.111)	Acc@5 99.512 (99.512)

Epoch: [78 | 180] LR: 0.100000
Epoch: [78][0/25]	Time 0.668 (0.668)	Data 0.629 (0.629)	Loss 0.5987 (0.5987)	Acc@1 88.867 (88.867)	Acc@5 99.756 (99.756)

Epoch: [79 | 180] LR: 0.100000
Epoch: [79][0/25]	Time 0.640 (0.640)	Data 0.745 (0.745)	Loss 0.5692 (0.5692)	Acc@1 89.307 (89.307)	Acc@5 99.707 (99.707)

Epoch: [80 | 180] LR: 0.100000
Epoch: [80][0/25]	Time 0.703 (0.703)	Data 0.679 (0.679)	Loss 0.6464 (0.6464)	Acc@1 87.402 (87.402)	Acc@5 99.561 (99.561)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...

 RM:  module.conv21.weight

 RM:  module.conv22.weight

Module List Length:  68
Index1: 40
Index: 21


Stage:  0


	Block:  0
j: 2; k: 2
Bool1: False
Bool2: True
j: 3; k: 2
Bool1: False
Bool2: True


	Block:  1
j: 4; k: 4
Bool1: False
Bool2: True
j: 5; k: 4
Bool1: False
Bool2: True


	Block:  2
j: 6; k: 6
Bool1: False
Bool2: True
j: 7; k: 6
Bool1: False
Bool2: True


	Block:  3
j: 8; k: 8
Bool1: False
Bool2: True
j: 9; k: 8
Bool1: False
Bool2: True


	Block:  4
j: 10; k: 10
Bool1: False
Bool2: True
j: 11; k: 10
Bool1: False
Bool2: True


Stage:  1


	Block:  0
j: 12; k: 12
Bool1: False
Bool2: False
j: 13; k: 12
Bool1: False
Bool2: False
j: 14; k: 12
Bool1: False
Bool2: False


	Block:  1
j: 15; k: 15
Bool1: False
Bool2: True
j: 16; k: 15
Bool1: False
Bool2: True


	Block:  2
j: 17; k: 17
Bool1: False
Bool2: True
j: 18; k: 17
Bool1: False
Bool2: True


	Block:  3
j: 19; k: 19
Bool1: False
Bool2: True
j: 20; k: 19
Bool1: False
Bool2: True


	Block:  4
j: 21; k: 21
Bool1: True
Bool2: True
numDelete: 2
j: 22; k: 21
Bool1: False
Bool2: True


Stage:  2


	Block:  0
j: 23; k: 23
Bool1: False
Bool2: False
j: 24; k: 23
Bool1: False
Bool2: False
j: 25; k: 23
Bool1: False
Bool2: False


	Block:  1
j: 26; k: 26
Bool1: False
Bool2: True
j: 27; k: 26
Bool1: False
Bool2: True


	Block:  2
j: 28; k: 28
Bool1: False
Bool2: True
j: 29; k: 28
Bool1: False
Bool2: True


	Block:  3
j: 30; k: 30
Bool1: False
Bool2: True
j: 31; k: 30
Bool1: False
Bool2: True


	Block:  4
j: 32; k: 32
Bool1: False
Bool2: True
j: 33; k: 32
Bool1: False
Bool2: True
Kopiere 0: Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 1: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 2: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 3: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 4: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 5: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 6: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 7: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 8: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 9: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 10: Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 11: BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 12: Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 13: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 14: Conv2d(16, 5, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 15: BatchNorm2d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 16: Conv2d(5, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 17: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 18: Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 19: BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 20: Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 21: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 22: Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
Kopiere 23: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 24: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 25: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 26: Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
Kopiere 27: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 28: Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 29: BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 30: Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 31: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 32: Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 33: BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 34: Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 35: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 36: Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 37: BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 38: Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 39: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 40: Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 41: BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 42: Conv2d(2, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 43: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 44: Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
Kopiere 45: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 46: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 47: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 48: Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
Kopiere 49: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 50: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 51: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 52: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 53: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 54: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 55: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 56: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 57: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 58: Conv2d(64, 57, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 59: BatchNorm2d(57, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 60: Conv2d(57, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 61: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Shape1: torch.Size([15, 64, 3, 3])
Traceback (most recent call last):
  File "main.py", line 725, in <module>
    main()
  File "main.py", line 332, in main
    genDenseModel(model, dense_chs, optimizer, 'cifar', use_gpu)
  File "/home/jessica.buehler/MA_Source/src/checkpoint_utils.py", line 307, in genDenseModel
    model.delete(module, index)
  File "/home/jessica.buehler/MA_Source/src/n2n.py", line 689, in delete
    print(f'Shape2: {self.module_list[layers+layers + 2 * numDelete].weight.size()}')
  File "/home/jessica.buehler/env/local/lib/python3.6/site-packages/torch/nn/modules/container.py", line 147, in __getitem__
    return self._modules[self._get_abs_string_index(idx)]
  File "/home/jessica.buehler/env/local/lib/python3.6/site-packages/torch/nn/modules/container.py", line 137, in _get_abs_string_index
    raise IndexError('index {} is out of range'.format(idx))
IndexError: index 128 is out of range
no display found. Using non-interactive Agg backend
[5, 5, 5]
Cifar10: True; cifar100: False
False
Files already downloaded and verified

Arch Num:  [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
count0: 487386

Epoch: [1 | 180] LR: 0.100000
Epoch: [1][0/25]	Time 0.755 (0.755)	Data 0.891 (0.891)	Loss 3.4334 (3.4334)	Acc@1 10.010 (10.010)	Acc@5 49.219 (49.219)

Epoch: [2 | 180] LR: 0.100000
Epoch: [2][0/25]	Time 0.716 (0.716)	Data 0.646 (0.646)	Loss 3.1033 (3.1033)	Acc@1 12.012 (12.012)	Acc@5 53.174 (53.174)

Epoch: [3 | 180] LR: 0.100000
Epoch: [3][0/25]	Time 0.684 (0.684)	Data 0.648 (0.648)	Loss 3.0466 (3.0466)	Acc@1 12.646 (12.646)	Acc@5 52.148 (52.148)

Epoch: [4 | 180] LR: 0.100000
Epoch: [4][0/25]	Time 0.700 (0.700)	Data 0.670 (0.670)	Loss 2.9494 (2.9494)	Acc@1 16.553 (16.553)	Acc@5 63.037 (63.037)

Epoch: [5 | 180] LR: 0.100000
Epoch: [5][0/25]	Time 0.705 (0.705)	Data 0.636 (0.636)	Loss 2.7078 (2.7078)	Acc@1 21.191 (21.191)	Acc@5 79.541 (79.541)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [6 | 180] LR: 0.100000
Epoch: [6][0/25]	Time 0.659 (0.659)	Data 0.680 (0.680)	Loss 2.5597 (2.5597)	Acc@1 23.779 (23.779)	Acc@5 81.055 (81.055)

Epoch: [7 | 180] LR: 0.100000
Epoch: [7][0/25]	Time 0.746 (0.746)	Data 0.644 (0.644)	Loss 2.4501 (2.4501)	Acc@1 25.879 (25.879)	Acc@5 83.203 (83.203)

Epoch: [8 | 180] LR: 0.100000
Epoch: [8][0/25]	Time 0.740 (0.740)	Data 0.650 (0.650)	Loss 2.3358 (2.3358)	Acc@1 31.201 (31.201)	Acc@5 85.010 (85.010)

Epoch: [9 | 180] LR: 0.100000
Epoch: [9][0/25]	Time 0.747 (0.747)	Data 0.800 (0.800)	Loss 2.1876 (2.1876)	Acc@1 33.643 (33.643)	Acc@5 89.014 (89.014)

Epoch: [10 | 180] LR: 0.100000
Epoch: [10][0/25]	Time 0.678 (0.678)	Data 0.656 (0.656)	Loss 2.0827 (2.0827)	Acc@1 38.232 (38.232)	Acc@5 89.893 (89.893)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [11 | 180] LR: 0.100000
Epoch: [11][0/25]	Time 0.735 (0.735)	Data 0.655 (0.655)	Loss 1.8706 (1.8706)	Acc@1 45.459 (45.459)	Acc@5 92.090 (92.090)

Epoch: [12 | 180] LR: 0.100000
Epoch: [12][0/25]	Time 0.667 (0.667)	Data 0.627 (0.627)	Loss 1.7298 (1.7298)	Acc@1 50.000 (50.000)	Acc@5 93.945 (93.945)

Epoch: [13 | 180] LR: 0.100000
Epoch: [13][0/25]	Time 0.775 (0.775)	Data 0.692 (0.692)	Loss 1.5659 (1.5659)	Acc@1 57.031 (57.031)	Acc@5 95.459 (95.459)

Epoch: [14 | 180] LR: 0.100000
Epoch: [14][0/25]	Time 0.694 (0.694)	Data 0.709 (0.709)	Loss 1.4301 (1.4301)	Acc@1 61.963 (61.963)	Acc@5 96.436 (96.436)

Epoch: [15 | 180] LR: 0.100000
Epoch: [15][0/25]	Time 0.758 (0.758)	Data 0.751 (0.751)	Loss 1.2842 (1.2842)	Acc@1 65.918 (65.918)	Acc@5 97.559 (97.559)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [16 | 180] LR: 0.100000
Epoch: [16][0/25]	Time 0.720 (0.720)	Data 0.686 (0.686)	Loss 1.1484 (1.1484)	Acc@1 70.752 (70.752)	Acc@5 98.486 (98.486)

Epoch: [17 | 180] LR: 0.100000
Epoch: [17][0/25]	Time 0.746 (0.746)	Data 0.645 (0.645)	Loss 1.1567 (1.1567)	Acc@1 70.947 (70.947)	Acc@5 97.852 (97.852)

Epoch: [18 | 180] LR: 0.100000
Epoch: [18][0/25]	Time 0.761 (0.761)	Data 0.637 (0.637)	Loss 1.0262 (1.0262)	Acc@1 75.635 (75.635)	Acc@5 98.389 (98.389)

Epoch: [19 | 180] LR: 0.100000
Epoch: [19][0/25]	Time 0.714 (0.714)	Data 0.642 (0.642)	Loss 0.9359 (0.9359)	Acc@1 77.979 (77.979)	Acc@5 98.779 (98.779)

Epoch: [20 | 180] LR: 0.100000
Epoch: [20][0/25]	Time 0.741 (0.741)	Data 0.691 (0.691)	Loss 0.8712 (0.8712)	Acc@1 79.834 (79.834)	Acc@5 98.926 (98.926)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [21 | 180] LR: 0.100000
Epoch: [21][0/25]	Time 0.744 (0.744)	Data 0.717 (0.717)	Loss 0.8862 (0.8862)	Acc@1 78.467 (78.467)	Acc@5 98.730 (98.730)

Epoch: [22 | 180] LR: 0.100000
Epoch: [22][0/25]	Time 0.740 (0.740)	Data 0.670 (0.670)	Loss 0.7997 (0.7997)	Acc@1 82.178 (82.178)	Acc@5 99.170 (99.170)

Epoch: [23 | 180] LR: 0.100000
Epoch: [23][0/25]	Time 0.766 (0.766)	Data 0.804 (0.804)	Loss 0.8058 (0.8058)	Acc@1 81.201 (81.201)	Acc@5 99.219 (99.219)

Epoch: [24 | 180] LR: 0.100000
Epoch: [24][0/25]	Time 0.706 (0.706)	Data 0.859 (0.859)	Loss 0.7502 (0.7502)	Acc@1 83.984 (83.984)	Acc@5 99.121 (99.121)

Epoch: [25 | 180] LR: 0.100000
Epoch: [25][0/25]	Time 0.737 (0.737)	Data 0.780 (0.780)	Loss 0.7389 (0.7389)	Acc@1 83.936 (83.936)	Acc@5 99.609 (99.609)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [26 | 180] LR: 0.100000
Epoch: [26][0/25]	Time 0.760 (0.760)	Data 0.632 (0.632)	Loss 0.7279 (0.7279)	Acc@1 83.643 (83.643)	Acc@5 99.170 (99.170)

Epoch: [27 | 180] LR: 0.100000
Epoch: [27][0/25]	Time 0.807 (0.807)	Data 0.752 (0.752)	Loss 0.7554 (0.7554)	Acc@1 83.301 (83.301)	Acc@5 99.365 (99.365)

Epoch: [28 | 180] LR: 0.100000
Epoch: [28][0/25]	Time 0.708 (0.708)	Data 0.649 (0.649)	Loss 0.7269 (0.7269)	Acc@1 84.668 (84.668)	Acc@5 99.268 (99.268)

Epoch: [29 | 180] LR: 0.100000
Epoch: [29][0/25]	Time 0.724 (0.724)	Data 0.645 (0.645)	Loss 0.7149 (0.7149)	Acc@1 85.303 (85.303)	Acc@5 99.219 (99.219)

Epoch: [30 | 180] LR: 0.100000
Epoch: [30][0/25]	Time 0.690 (0.690)	Data 0.724 (0.724)	Loss 0.6804 (0.6804)	Acc@1 85.889 (85.889)	Acc@5 99.609 (99.609)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [31 | 180] LR: 0.100000
Epoch: [31][0/25]	Time 0.745 (0.745)	Data 0.757 (0.757)	Loss 0.7098 (0.7098)	Acc@1 85.059 (85.059)	Acc@5 99.365 (99.365)

Epoch: [32 | 180] LR: 0.100000
Epoch: [32][0/25]	Time 0.729 (0.729)	Data 0.730 (0.730)	Loss 0.6975 (0.6975)	Acc@1 84.668 (84.668)	Acc@5 99.414 (99.414)

Epoch: [33 | 180] LR: 0.100000
Epoch: [33][0/25]	Time 0.674 (0.674)	Data 0.699 (0.699)	Loss 0.6622 (0.6622)	Acc@1 86.035 (86.035)	Acc@5 99.609 (99.609)

Epoch: [34 | 180] LR: 0.100000
Epoch: [34][0/25]	Time 0.700 (0.700)	Data 0.704 (0.704)	Loss 0.6609 (0.6609)	Acc@1 86.914 (86.914)	Acc@5 99.365 (99.365)

Epoch: [35 | 180] LR: 0.100000
Epoch: [35][0/25]	Time 0.712 (0.712)	Data 0.716 (0.716)	Loss 0.6756 (0.6756)	Acc@1 86.035 (86.035)	Acc@5 99.609 (99.609)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [36 | 180] LR: 0.100000
Epoch: [36][0/25]	Time 0.725 (0.725)	Data 0.664 (0.664)	Loss 0.6600 (0.6600)	Acc@1 86.572 (86.572)	Acc@5 99.561 (99.561)

Epoch: [37 | 180] LR: 0.100000
Epoch: [37][0/25]	Time 0.760 (0.760)	Data 0.650 (0.650)	Loss 0.6681 (0.6681)	Acc@1 86.279 (86.279)	Acc@5 99.316 (99.316)

Epoch: [38 | 180] LR: 0.100000
Epoch: [38][0/25]	Time 0.758 (0.758)	Data 0.666 (0.666)	Loss 0.6233 (0.6233)	Acc@1 88.428 (88.428)	Acc@5 99.463 (99.463)

Epoch: [39 | 180] LR: 0.100000
Epoch: [39][0/25]	Time 0.677 (0.677)	Data 0.651 (0.651)	Loss 0.6344 (0.6344)	Acc@1 87.158 (87.158)	Acc@5 99.609 (99.609)

Epoch: [40 | 180] LR: 0.100000
Epoch: [40][0/25]	Time 0.684 (0.684)	Data 0.727 (0.727)	Loss 0.6518 (0.6518)	Acc@1 86.914 (86.914)	Acc@5 99.463 (99.463)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 486808 ; 487386 ; 0.9988140816519145

Epoch: [41 | 180] LR: 0.100000
Epoch: [41][0/25]	Time 0.740 (0.740)	Data 0.685 (0.685)	Loss 0.6355 (0.6355)	Acc@1 87.354 (87.354)	Acc@5 99.707 (99.707)

Epoch: [42 | 180] LR: 0.100000
Epoch: [42][0/25]	Time 0.729 (0.729)	Data 0.649 (0.649)	Loss 0.5882 (0.5882)	Acc@1 89.209 (89.209)	Acc@5 99.609 (99.609)

Epoch: [43 | 180] LR: 0.100000
Epoch: [43][0/25]	Time 0.775 (0.775)	Data 0.842 (0.842)	Loss 0.6260 (0.6260)	Acc@1 87.158 (87.158)	Acc@5 99.609 (99.609)

Epoch: [44 | 180] LR: 0.100000
Epoch: [44][0/25]	Time 0.764 (0.764)	Data 0.739 (0.739)	Loss 0.6144 (0.6144)	Acc@1 88.086 (88.086)	Acc@5 99.805 (99.805)

Epoch: [45 | 180] LR: 0.100000
Epoch: [45][0/25]	Time 0.788 (0.788)	Data 0.766 (0.766)	Loss 0.6685 (0.6685)	Acc@1 86.670 (86.670)	Acc@5 99.707 (99.707)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 485506 ; 487386 ; 0.9961426877259503

Epoch: [46 | 180] LR: 0.100000
Epoch: [46][0/25]	Time 0.747 (0.747)	Data 0.714 (0.714)	Loss 0.6436 (0.6436)	Acc@1 86.768 (86.768)	Acc@5 99.609 (99.609)

Epoch: [47 | 180] LR: 0.100000
Epoch: [47][0/25]	Time 0.734 (0.734)	Data 0.704 (0.704)	Loss 0.6116 (0.6116)	Acc@1 88.135 (88.135)	Acc@5 99.561 (99.561)

Epoch: [48 | 180] LR: 0.100000
Epoch: [48][0/25]	Time 0.827 (0.827)	Data 0.801 (0.801)	Loss 0.6395 (0.6395)	Acc@1 87.109 (87.109)	Acc@5 99.756 (99.756)

Epoch: [49 | 180] LR: 0.100000
Epoch: [49][0/25]	Time 0.666 (0.666)	Data 0.671 (0.671)	Loss 0.6100 (0.6100)	Acc@1 88.477 (88.477)	Acc@5 99.219 (99.219)

Epoch: [50 | 180] LR: 0.100000
Epoch: [50][0/25]	Time 0.768 (0.768)	Data 0.650 (0.650)	Loss 0.5976 (0.5976)	Acc@1 89.404 (89.404)	Acc@5 99.414 (99.414)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 483770 ; 487386 ; 0.992580829157998

Epoch: [51 | 180] LR: 0.100000
Epoch: [51][0/25]	Time 0.658 (0.658)	Data 0.783 (0.783)	Loss 0.5888 (0.5888)	Acc@1 89.355 (89.355)	Acc@5 99.805 (99.805)

Epoch: [52 | 180] LR: 0.100000
Epoch: [52][0/25]	Time 0.734 (0.734)	Data 0.679 (0.679)	Loss 0.5925 (0.5925)	Acc@1 88.818 (88.818)	Acc@5 99.658 (99.658)

Epoch: [53 | 180] LR: 0.100000
Epoch: [53][0/25]	Time 0.724 (0.724)	Data 0.740 (0.740)	Loss 0.6182 (0.6182)	Acc@1 87.988 (87.988)	Acc@5 99.756 (99.756)

Epoch: [54 | 180] LR: 0.100000
Epoch: [54][0/25]	Time 0.770 (0.770)	Data 0.658 (0.658)	Loss 0.6025 (0.6025)	Acc@1 88.672 (88.672)	Acc@5 99.463 (99.463)

Epoch: [55 | 180] LR: 0.100000
Epoch: [55][0/25]	Time 0.729 (0.729)	Data 0.707 (0.707)	Loss 0.6659 (0.6659)	Acc@1 86.182 (86.182)	Acc@5 99.512 (99.512)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 479436 ; 487386 ; 0.9836884933092046

Epoch: [56 | 180] LR: 0.100000
Epoch: [56][0/25]	Time 0.697 (0.697)	Data 0.735 (0.735)	Loss 0.5817 (0.5817)	Acc@1 89.551 (89.551)	Acc@5 99.756 (99.756)

Epoch: [57 | 180] LR: 0.100000
Epoch: [57][0/25]	Time 0.661 (0.661)	Data 0.783 (0.783)	Loss 0.6045 (0.6045)	Acc@1 88.281 (88.281)	Acc@5 99.805 (99.805)

Epoch: [58 | 180] LR: 0.100000
Epoch: [58][0/25]	Time 0.760 (0.760)	Data 0.696 (0.696)	Loss 0.6126 (0.6126)	Acc@1 87.939 (87.939)	Acc@5 99.609 (99.609)

Epoch: [59 | 180] LR: 0.100000
Epoch: [59][0/25]	Time 0.674 (0.674)	Data 0.676 (0.676)	Loss 0.6170 (0.6170)	Acc@1 88.574 (88.574)	Acc@5 99.463 (99.463)

Epoch: [60 | 180] LR: 0.100000
Epoch: [60][0/25]	Time 0.760 (0.760)	Data 0.740 (0.740)	Loss 0.6143 (0.6143)	Acc@1 88.037 (88.037)	Acc@5 99.561 (99.561)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 475394 ; 487386 ; 0.9753952719199978

Epoch: [61 | 180] LR: 0.100000
Epoch: [61][0/25]	Time 0.725 (0.725)	Data 0.731 (0.731)	Loss 0.6023 (0.6023)	Acc@1 89.014 (89.014)	Acc@5 99.658 (99.658)

Epoch: [62 | 180] LR: 0.100000
Epoch: [62][0/25]	Time 0.670 (0.670)	Data 0.668 (0.668)	Loss 0.5697 (0.5697)	Acc@1 89.160 (89.160)	Acc@5 99.951 (99.951)

Epoch: [63 | 180] LR: 0.100000
Epoch: [63][0/25]	Time 0.749 (0.749)	Data 0.708 (0.708)	Loss 0.5965 (0.5965)	Acc@1 88.184 (88.184)	Acc@5 99.854 (99.854)

Epoch: [64 | 180] LR: 0.100000
Epoch: [64][0/25]	Time 0.705 (0.705)	Data 0.670 (0.670)	Loss 0.5852 (0.5852)	Acc@1 89.551 (89.551)	Acc@5 99.658 (99.658)

Epoch: [65 | 180] LR: 0.100000
Epoch: [65][0/25]	Time 0.720 (0.720)	Data 0.755 (0.755)	Loss 0.5786 (0.5786)	Acc@1 89.697 (89.697)	Acc@5 99.902 (99.902)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 470482 ; 487386 ; 0.9653170177231188

Epoch: [66 | 180] LR: 0.100000
Epoch: [66][0/25]	Time 0.733 (0.733)	Data 0.716 (0.716)	Loss 0.5977 (0.5977)	Acc@1 89.014 (89.014)	Acc@5 99.512 (99.512)

Epoch: [67 | 180] LR: 0.100000
Epoch: [67][0/25]	Time 0.754 (0.754)	Data 0.661 (0.661)	Loss 0.5847 (0.5847)	Acc@1 89.502 (89.502)	Acc@5 99.512 (99.512)

Epoch: [68 | 180] LR: 0.100000
Epoch: [68][0/25]	Time 0.776 (0.776)	Data 0.721 (0.721)	Loss 0.5674 (0.5674)	Acc@1 90.039 (90.039)	Acc@5 99.756 (99.756)

Epoch: [69 | 180] LR: 0.100000
Epoch: [69][0/25]	Time 0.715 (0.715)	Data 0.735 (0.735)	Loss 0.5782 (0.5782)	Acc@1 90.137 (90.137)	Acc@5 99.756 (99.756)

Epoch: [70 | 180] LR: 0.100000
Epoch: [70][0/25]	Time 0.684 (0.684)	Data 0.705 (0.705)	Loss 0.5909 (0.5909)	Acc@1 89.502 (89.502)	Acc@5 99.805 (99.805)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 466436 ; 487386 ; 0.9570155892865203

Epoch: [71 | 180] LR: 0.100000
Epoch: [71][0/25]	Time 0.741 (0.741)	Data 0.742 (0.742)	Loss 0.5847 (0.5847)	Acc@1 89.795 (89.795)	Acc@5 99.805 (99.805)

Epoch: [72 | 180] LR: 0.100000
Epoch: [72][0/25]	Time 0.743 (0.743)	Data 0.737 (0.737)	Loss 0.6045 (0.6045)	Acc@1 88.574 (88.574)	Acc@5 99.902 (99.902)

Epoch: [73 | 180] LR: 0.100000
Epoch: [73][0/25]	Time 0.723 (0.723)	Data 0.665 (0.665)	Loss 0.6113 (0.6113)	Acc@1 89.307 (89.307)	Acc@5 99.512 (99.512)

Epoch: [74 | 180] LR: 0.100000
Epoch: [74][0/25]	Time 0.682 (0.682)	Data 0.685 (0.685)	Loss 0.6176 (0.6176)	Acc@1 89.600 (89.600)	Acc@5 99.609 (99.609)

Epoch: [75 | 180] LR: 0.100000
Epoch: [75][0/25]	Time 0.692 (0.692)	Data 0.711 (0.711)	Loss 0.5921 (0.5921)	Acc@1 89.697 (89.697)	Acc@5 99.609 (99.609)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(56, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 457484 ; 487386 ; 0.9386482172241304

Epoch: [76 | 180] LR: 0.100000
Epoch: [76][0/25]	Time 0.737 (0.737)	Data 0.697 (0.697)	Loss 0.6108 (0.6108)	Acc@1 89.258 (89.258)	Acc@5 99.805 (99.805)

Epoch: [77 | 180] LR: 0.100000
Epoch: [77][0/25]	Time 0.729 (0.729)	Data 0.678 (0.678)	Loss 0.5747 (0.5747)	Acc@1 90.186 (90.186)	Acc@5 99.854 (99.854)

Epoch: [78 | 180] LR: 0.100000
Epoch: [78][0/25]	Time 0.731 (0.731)	Data 0.767 (0.767)	Loss 0.6130 (0.6130)	Acc@1 88.623 (88.623)	Acc@5 99.805 (99.805)

Epoch: [79 | 180] LR: 0.100000
Epoch: [79][0/25]	Time 0.699 (0.699)	Data 0.648 (0.648)	Loss 0.6121 (0.6121)	Acc@1 88.525 (88.525)	Acc@5 99.658 (99.658)

Epoch: [80 | 180] LR: 0.100000
Epoch: [80][0/25]	Time 0.682 (0.682)	Data 0.680 (0.680)	Loss 0.5762 (0.5762)	Acc@1 90.771 (90.771)	Acc@5 99.658 (99.658)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(15, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 55, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(55, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(55, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 453150 ; 487386 ; 0.929755881375337

Epoch: [81 | 180] LR: 0.100000
Traceback (most recent call last):
  File "main.py", line 725, in <module>
    main()
  File "main.py", line 318, in main
    use_gpu_num)
  File "main.py", line 442, in train
    outputs = model.forward(inputs)
  File "/home/jessica.buehler/MA_Source/src/n2n.py", line 467, in forward
    _x = self.module_list[j](_x)
  File "/home/jessica.buehler/env/local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 532, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/jessica.buehler/env/local/lib/python3.6/site-packages/torch/nn/modules/conv.py", line 345, in forward
    return self.conv2d_forward(input, self.weight)
  File "/home/jessica.buehler/env/local/lib/python3.6/site-packages/torch/nn/modules/conv.py", line 342, in conv2d_forward
    self.padding, self.dilation, self.groups)
RuntimeError: Given groups=1, weight of size 16 15 3 3, expected input[2048, 16, 32, 32] to have 15 channels, but got 16 channels instead
no display found. Using non-interactive Agg backend
[5, 5, 5]
Cifar10: True; cifar100: False
False
Files already downloaded and verified

Arch Num:  [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
count0: 487386

Epoch: [1 | 180] LR: 0.100000
Epoch: [1][0/25]	Time 0.771 (0.771)	Data 0.719 (0.719)	Loss 3.2967 (3.2967)	Acc@1 10.693 (10.693)	Acc@5 51.465 (51.465)

Epoch: [2 | 180] LR: 0.100000
Epoch: [2][0/25]	Time 0.732 (0.732)	Data 0.767 (0.767)	Loss 2.9826 (2.9826)	Acc@1 10.547 (10.547)	Acc@5 49.463 (49.463)

Epoch: [3 | 180] LR: 0.100000
Epoch: [3][0/25]	Time 0.722 (0.722)	Data 0.673 (0.673)	Loss 2.9337 (2.9337)	Acc@1 10.400 (10.400)	Acc@5 51.172 (51.172)

Epoch: [4 | 180] LR: 0.100000
Epoch: [4][0/25]	Time 0.759 (0.759)	Data 0.778 (0.778)	Loss 2.8635 (2.8635)	Acc@1 15.723 (15.723)	Acc@5 59.424 (59.424)

Epoch: [5 | 180] LR: 0.100000
Epoch: [5][0/25]	Time 0.722 (0.722)	Data 0.741 (0.741)	Loss 2.6751 (2.6751)	Acc@1 19.238 (19.238)	Acc@5 73.389 (73.389)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [6 | 180] LR: 0.100000
Epoch: [6][0/25]	Time 0.765 (0.765)	Data 0.624 (0.624)	Loss 2.5216 (2.5216)	Acc@1 20.947 (20.947)	Acc@5 75.830 (75.830)

Epoch: [7 | 180] LR: 0.100000
Epoch: [7][0/25]	Time 0.691 (0.691)	Data 0.639 (0.639)	Loss 2.4114 (2.4114)	Acc@1 25.049 (25.049)	Acc@5 81.787 (81.787)

Epoch: [8 | 180] LR: 0.100000
Epoch: [8][0/25]	Time 0.714 (0.714)	Data 0.665 (0.665)	Loss 2.2803 (2.2803)	Acc@1 27.344 (27.344)	Acc@5 85.596 (85.596)

Epoch: [9 | 180] LR: 0.100000
Epoch: [9][0/25]	Time 0.718 (0.718)	Data 0.658 (0.658)	Loss 2.1120 (2.1120)	Acc@1 34.961 (34.961)	Acc@5 87.793 (87.793)

Epoch: [10 | 180] LR: 0.100000
Epoch: [10][0/25]	Time 0.699 (0.699)	Data 0.675 (0.675)	Loss 1.9993 (1.9993)	Acc@1 36.865 (36.865)	Acc@5 89.014 (89.014)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [11 | 180] LR: 0.100000
Epoch: [11][0/25]	Time 0.707 (0.707)	Data 0.628 (0.628)	Loss 1.7940 (1.7940)	Acc@1 44.824 (44.824)	Acc@5 92.627 (92.627)

Epoch: [12 | 180] LR: 0.100000
Epoch: [12][0/25]	Time 0.735 (0.735)	Data 0.687 (0.687)	Loss 2.0600 (2.0600)	Acc@1 34.521 (34.521)	Acc@5 88.281 (88.281)

Epoch: [13 | 180] LR: 0.100000
Epoch: [13][0/25]	Time 0.744 (0.744)	Data 0.682 (0.682)	Loss 1.7330 (1.7330)	Acc@1 45.215 (45.215)	Acc@5 93.701 (93.701)

Epoch: [14 | 180] LR: 0.100000
Epoch: [14][0/25]	Time 0.731 (0.731)	Data 0.656 (0.656)	Loss 1.5861 (1.5861)	Acc@1 52.588 (52.588)	Acc@5 93.750 (93.750)

Epoch: [15 | 180] LR: 0.100000
Epoch: [15][0/25]	Time 0.740 (0.740)	Data 0.803 (0.803)	Loss 1.3792 (1.3792)	Acc@1 58.154 (58.154)	Acc@5 96.631 (96.631)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [16 | 180] LR: 0.100000
Epoch: [16][0/25]	Time 0.675 (0.675)	Data 0.833 (0.833)	Loss 1.2716 (1.2716)	Acc@1 63.623 (63.623)	Acc@5 96.875 (96.875)

Epoch: [17 | 180] LR: 0.100000
Epoch: [17][0/25]	Time 0.732 (0.732)	Data 0.624 (0.624)	Loss 1.2645 (1.2645)	Acc@1 63.330 (63.330)	Acc@5 96.289 (96.289)

Epoch: [18 | 180] LR: 0.100000
Epoch: [18][0/25]	Time 0.745 (0.745)	Data 0.692 (0.692)	Loss 1.1105 (1.1105)	Acc@1 69.189 (69.189)	Acc@5 97.656 (97.656)

Epoch: [19 | 180] LR: 0.100000
Epoch: [19][0/25]	Time 0.753 (0.753)	Data 0.804 (0.804)	Loss 1.0079 (1.0079)	Acc@1 72.949 (72.949)	Acc@5 98.389 (98.389)

Epoch: [20 | 180] LR: 0.100000
Epoch: [20][0/25]	Time 0.738 (0.738)	Data 0.640 (0.640)	Loss 0.8887 (0.8887)	Acc@1 76.660 (76.660)	Acc@5 99.170 (99.170)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [21 | 180] LR: 0.100000
Epoch: [21][0/25]	Time 0.726 (0.726)	Data 0.713 (0.713)	Loss 0.8956 (0.8956)	Acc@1 76.074 (76.074)	Acc@5 98.633 (98.633)

Epoch: [22 | 180] LR: 0.100000
Epoch: [22][0/25]	Time 0.708 (0.708)	Data 0.650 (0.650)	Loss 0.8565 (0.8565)	Acc@1 78.174 (78.174)	Acc@5 98.389 (98.389)

Epoch: [23 | 180] LR: 0.100000
Epoch: [23][0/25]	Time 0.701 (0.701)	Data 0.629 (0.629)	Loss 0.8366 (0.8366)	Acc@1 78.760 (78.760)	Acc@5 98.828 (98.828)

Epoch: [24 | 180] LR: 0.100000
Epoch: [24][0/25]	Time 0.759 (0.759)	Data 0.679 (0.679)	Loss 0.7870 (0.7870)	Acc@1 80.762 (80.762)	Acc@5 99.121 (99.121)

Epoch: [25 | 180] LR: 0.100000
Epoch: [25][0/25]	Time 0.758 (0.758)	Data 0.647 (0.647)	Loss 0.7661 (0.7661)	Acc@1 81.738 (81.738)	Acc@5 98.975 (98.975)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [26 | 180] LR: 0.100000
Epoch: [26][0/25]	Time 0.676 (0.676)	Data 0.712 (0.712)	Loss 0.7399 (0.7399)	Acc@1 82.178 (82.178)	Acc@5 99.121 (99.121)

Epoch: [27 | 180] LR: 0.100000
Epoch: [27][0/25]	Time 0.725 (0.725)	Data 0.666 (0.666)	Loss 0.6852 (0.6852)	Acc@1 85.303 (85.303)	Acc@5 99.414 (99.414)

Epoch: [28 | 180] LR: 0.100000
Epoch: [28][0/25]	Time 0.738 (0.738)	Data 0.653 (0.653)	Loss 0.7174 (0.7174)	Acc@1 82.812 (82.812)	Acc@5 99.316 (99.316)

Epoch: [29 | 180] LR: 0.100000
Epoch: [29][0/25]	Time 0.628 (0.628)	Data 0.734 (0.734)	Loss 0.6750 (0.6750)	Acc@1 84.375 (84.375)	Acc@5 99.316 (99.316)

Epoch: [30 | 180] LR: 0.100000
Epoch: [30][0/25]	Time 0.707 (0.707)	Data 0.838 (0.838)	Loss 0.6991 (0.6991)	Acc@1 84.131 (84.131)	Acc@5 99.072 (99.072)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [31 | 180] LR: 0.100000
Epoch: [31][0/25]	Time 0.727 (0.727)	Data 0.698 (0.698)	Loss 0.6751 (0.6751)	Acc@1 85.010 (85.010)	Acc@5 99.561 (99.561)

Epoch: [32 | 180] LR: 0.100000
Epoch: [32][0/25]	Time 0.701 (0.701)	Data 0.717 (0.717)	Loss 0.6818 (0.6818)	Acc@1 84.521 (84.521)	Acc@5 99.463 (99.463)

Epoch: [33 | 180] LR: 0.100000
Epoch: [33][0/25]	Time 0.711 (0.711)	Data 0.630 (0.630)	Loss 0.6437 (0.6437)	Acc@1 85.791 (85.791)	Acc@5 99.561 (99.561)

Epoch: [34 | 180] LR: 0.100000
Epoch: [34][0/25]	Time 0.750 (0.750)	Data 0.804 (0.804)	Loss 0.6716 (0.6716)	Acc@1 85.205 (85.205)	Acc@5 99.463 (99.463)

Epoch: [35 | 180] LR: 0.100000
Epoch: [35][0/25]	Time 0.693 (0.693)	Data 0.658 (0.658)	Loss 0.6715 (0.6715)	Acc@1 86.426 (86.426)	Acc@5 99.316 (99.316)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 485942 ; 487386 ; 0.9970372558916342

Epoch: [36 | 180] LR: 0.100000
Epoch: [36][0/25]	Time 0.714 (0.714)	Data 0.624 (0.624)	Loss 0.6582 (0.6582)	Acc@1 85.352 (85.352)	Acc@5 99.316 (99.316)

Epoch: [37 | 180] LR: 0.100000
Epoch: [37][0/25]	Time 0.741 (0.741)	Data 0.658 (0.658)	Loss 0.6706 (0.6706)	Acc@1 85.547 (85.547)	Acc@5 99.170 (99.170)

Epoch: [38 | 180] LR: 0.100000
Epoch: [38][0/25]	Time 0.719 (0.719)	Data 0.731 (0.731)	Loss 0.6429 (0.6429)	Acc@1 86.475 (86.475)	Acc@5 99.072 (99.072)

Epoch: [39 | 180] LR: 0.100000
Epoch: [39][0/25]	Time 0.749 (0.749)	Data 0.641 (0.641)	Loss 0.6776 (0.6776)	Acc@1 85.205 (85.205)	Acc@5 99.219 (99.219)

Epoch: [40 | 180] LR: 0.100000
Epoch: [40][0/25]	Time 0.704 (0.704)	Data 0.805 (0.805)	Loss 0.6549 (0.6549)	Acc@1 86.670 (86.670)	Acc@5 99.414 (99.414)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [41 | 180] LR: 0.100000
Epoch: [41][0/25]	Time 0.717 (0.717)	Data 0.666 (0.666)	Loss 0.6263 (0.6263)	Acc@1 86.621 (86.621)	Acc@5 99.609 (99.609)

Epoch: [42 | 180] LR: 0.100000
Epoch: [42][0/25]	Time 0.748 (0.748)	Data 0.750 (0.750)	Loss 0.6093 (0.6093)	Acc@1 88.232 (88.232)	Acc@5 99.463 (99.463)

Epoch: [43 | 180] LR: 0.100000
Epoch: [43][0/25]	Time 0.769 (0.769)	Data 0.731 (0.731)	Loss 0.6483 (0.6483)	Acc@1 86.572 (86.572)	Acc@5 99.609 (99.609)

Epoch: [44 | 180] LR: 0.100000
Epoch: [44][0/25]	Time 0.727 (0.727)	Data 0.755 (0.755)	Loss 0.6421 (0.6421)	Acc@1 86.865 (86.865)	Acc@5 99.316 (99.316)

Epoch: [45 | 180] LR: 0.100000
Epoch: [45][0/25]	Time 0.761 (0.761)	Data 0.805 (0.805)	Loss 0.6338 (0.6338)	Acc@1 87.402 (87.402)	Acc@5 99.512 (99.512)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 481610 ; 487386 ; 0.9881490235665366

Epoch: [46 | 180] LR: 0.100000
Epoch: [46][0/25]	Time 0.833 (0.833)	Data 0.811 (0.811)	Loss 0.6316 (0.6316)	Acc@1 86.475 (86.475)	Acc@5 99.512 (99.512)

Epoch: [47 | 180] LR: 0.100000
Epoch: [47][0/25]	Time 0.727 (0.727)	Data 0.785 (0.785)	Loss 0.5722 (0.5722)	Acc@1 89.014 (89.014)	Acc@5 99.609 (99.609)

Epoch: [48 | 180] LR: 0.100000
Epoch: [48][0/25]	Time 0.759 (0.759)	Data 0.706 (0.706)	Loss 0.6400 (0.6400)	Acc@1 86.914 (86.914)	Acc@5 99.609 (99.609)

Epoch: [49 | 180] LR: 0.100000
Epoch: [49][0/25]	Time 0.683 (0.683)	Data 0.686 (0.686)	Loss 0.6481 (0.6481)	Acc@1 86.670 (86.670)	Acc@5 99.561 (99.561)

Epoch: [50 | 180] LR: 0.100000
Epoch: [50][0/25]	Time 0.719 (0.719)	Data 0.674 (0.674)	Loss 0.6086 (0.6086)	Acc@1 88.330 (88.330)	Acc@5 99.561 (99.561)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 477854 ; 487386 ; 0.9804426060658288

Epoch: [51 | 180] LR: 0.100000
Epoch: [51][0/25]	Time 0.682 (0.682)	Data 0.631 (0.631)	Loss 0.5972 (0.5972)	Acc@1 88.623 (88.623)	Acc@5 99.609 (99.609)

Epoch: [52 | 180] LR: 0.100000
Epoch: [52][0/25]	Time 0.699 (0.699)	Data 0.675 (0.675)	Loss 0.5659 (0.5659)	Acc@1 89.355 (89.355)	Acc@5 99.805 (99.805)

Epoch: [53 | 180] LR: 0.100000
Epoch: [53][0/25]	Time 0.765 (0.765)	Data 0.709 (0.709)	Loss 0.6102 (0.6102)	Acc@1 88.281 (88.281)	Acc@5 99.414 (99.414)

Epoch: [54 | 180] LR: 0.100000
Epoch: [54][0/25]	Time 0.739 (0.739)	Data 0.676 (0.676)	Loss 0.6075 (0.6075)	Acc@1 88.281 (88.281)	Acc@5 99.512 (99.512)

Epoch: [55 | 180] LR: 0.100000
Epoch: [55][0/25]	Time 0.739 (0.739)	Data 0.728 (0.728)	Loss 0.5999 (0.5999)	Acc@1 88.818 (88.818)	Acc@5 99.463 (99.463)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 55, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(55, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(55, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 462836 ; 487386 ; 0.9496292466340847

Epoch: [56 | 180] LR: 0.100000
Epoch: [56][0/25]	Time 0.724 (0.724)	Data 0.704 (0.704)	Loss 0.6023 (0.6023)	Acc@1 88.428 (88.428)	Acc@5 99.658 (99.658)

Epoch: [57 | 180] LR: 0.100000
Epoch: [57][0/25]	Time 0.703 (0.703)	Data 0.709 (0.709)	Loss 0.5913 (0.5913)	Acc@1 89.209 (89.209)	Acc@5 99.854 (99.854)

Epoch: [58 | 180] LR: 0.100000
Epoch: [58][0/25]	Time 0.764 (0.764)	Data 0.692 (0.692)	Loss 0.6076 (0.6076)	Acc@1 88.135 (88.135)	Acc@5 99.805 (99.805)

Epoch: [59 | 180] LR: 0.100000
Epoch: [59][0/25]	Time 0.682 (0.682)	Data 0.676 (0.676)	Loss 0.5919 (0.5919)	Acc@1 88.281 (88.281)	Acc@5 99.756 (99.756)

Epoch: [60 | 180] LR: 0.100000
Epoch: [60][0/25]	Time 0.661 (0.661)	Data 0.685 (0.685)	Loss 0.6297 (0.6297)	Acc@1 87.646 (87.646)	Acc@5 99.658 (99.658)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(12, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 49, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(49, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(49, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 450710 ; 487386 ; 0.924749582466464

Epoch: [61 | 180] LR: 0.100000
Epoch: [61][0/25]	Time 0.661 (0.661)	Data 0.666 (0.666)	Loss 0.5430 (0.5430)	Acc@1 90.479 (90.479)	Acc@5 99.658 (99.658)

Epoch: [62 | 180] LR: 0.100000
Epoch: [62][0/25]	Time 0.709 (0.709)	Data 0.742 (0.742)	Loss 0.6104 (0.6104)	Acc@1 87.402 (87.402)	Acc@5 99.805 (99.805)

Epoch: [63 | 180] LR: 0.100000
Epoch: [63][0/25]	Time 0.739 (0.739)	Data 0.721 (0.721)	Loss 0.6353 (0.6353)	Acc@1 87.256 (87.256)	Acc@5 99.561 (99.561)

Epoch: [64 | 180] LR: 0.100000
Epoch: [64][0/25]	Time 0.742 (0.742)	Data 0.652 (0.652)	Loss 0.5724 (0.5724)	Acc@1 89.404 (89.404)	Acc@5 99.707 (99.707)

Epoch: [65 | 180] LR: 0.100000
Epoch: [65][0/25]	Time 0.705 (0.705)	Data 0.684 (0.684)	Loss 0.6207 (0.6207)	Acc@1 87.646 (87.646)	Acc@5 99.463 (99.463)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 5, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(5, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 46, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(46, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(46, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 440314 ; 487386 ; 0.9034194662957081

Epoch: [66 | 180] LR: 0.100000
Epoch: [66][0/25]	Time 0.663 (0.663)	Data 0.750 (0.750)	Loss 0.5963 (0.5963)	Acc@1 88.281 (88.281)	Acc@5 99.707 (99.707)

Epoch: [67 | 180] LR: 0.100000
Epoch: [67][0/25]	Time 0.794 (0.794)	Data 0.926 (0.926)	Loss 0.5886 (0.5886)	Acc@1 88.379 (88.379)	Acc@5 99.609 (99.609)

Epoch: [68 | 180] LR: 0.100000
Epoch: [68][0/25]	Time 0.625 (0.625)	Data 0.625 (0.625)	Loss 0.5988 (0.5988)	Acc@1 87.891 (87.891)	Acc@5 99.512 (99.512)

Epoch: [69 | 180] LR: 0.100000
Epoch: [69][0/25]	Time 0.660 (0.660)	Data 0.653 (0.653)	Loss 0.5854 (0.5854)	Acc@1 89.014 (89.014)	Acc@5 99.512 (99.512)

Epoch: [70 | 180] LR: 0.100000
Epoch: [70][0/25]	Time 0.734 (0.734)	Data 0.699 (0.699)	Loss 0.5607 (0.5607)	Acc@1 90.137 (90.137)	Acc@5 99.658 (99.658)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(23, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(44, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 433672 ; 487386 ; 0.8897916641019643

Epoch: [71 | 180] LR: 0.100000
Epoch: [71][0/25]	Time 0.707 (0.707)	Data 0.721 (0.721)	Loss 0.6140 (0.6140)	Acc@1 88.037 (88.037)	Acc@5 99.609 (99.609)

Epoch: [72 | 180] LR: 0.100000
Epoch: [72][0/25]	Time 0.697 (0.697)	Data 0.668 (0.668)	Loss 0.5364 (0.5364)	Acc@1 90.234 (90.234)	Acc@5 99.854 (99.854)

Epoch: [73 | 180] LR: 0.100000
Epoch: [73][0/25]	Time 0.725 (0.725)	Data 0.660 (0.660)	Loss 0.5693 (0.5693)	Acc@1 89.209 (89.209)	Acc@5 99.658 (99.658)

Epoch: [74 | 180] LR: 0.100000
Epoch: [74][0/25]	Time 0.703 (0.703)	Data 0.712 (0.712)	Loss 0.5651 (0.5651)	Acc@1 89.648 (89.648)	Acc@5 99.658 (99.658)

Epoch: [75 | 180] LR: 0.100000
Epoch: [75][0/25]	Time 0.695 (0.695)	Data 0.693 (0.693)	Loss 0.5929 (0.5929)	Acc@1 88.965 (88.965)	Acc@5 99.707 (99.707)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 41, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(41, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(41, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 426742 ; 487386 ; 0.8755729544960258

Epoch: [76 | 180] LR: 0.100000
Epoch: [76][0/25]	Time 0.785 (0.785)	Data 0.762 (0.762)	Loss 0.5584 (0.5584)	Acc@1 90.088 (90.088)	Acc@5 99.609 (99.609)

Epoch: [77 | 180] LR: 0.100000
Epoch: [77][0/25]	Time 0.878 (0.878)	Data 0.771 (0.771)	Loss 0.5265 (0.5265)	Acc@1 90.674 (90.674)	Acc@5 100.000 (100.000)

Epoch: [78 | 180] LR: 0.100000
Epoch: [78][0/25]	Time 0.664 (0.664)	Data 0.649 (0.649)	Loss 0.5643 (0.5643)	Acc@1 89.404 (89.404)	Acc@5 99.756 (99.756)

Epoch: [79 | 180] LR: 0.100000
Epoch: [79][0/25]	Time 0.699 (0.699)	Data 0.777 (0.777)	Loss 0.5951 (0.5951)	Acc@1 88.965 (88.965)	Acc@5 99.609 (99.609)

Epoch: [80 | 180] LR: 0.100000
Epoch: [80][0/25]	Time 0.710 (0.710)	Data 0.739 (0.739)	Loss 0.6061 (0.6061)	Acc@1 88.281 (88.281)	Acc@5 99.756 (99.756)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(20, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(40, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 423854 ; 487386 ; 0.869647466279294

Epoch: [81 | 180] LR: 0.100000
Epoch: [81][0/25]	Time 0.688 (0.688)	Data 0.764 (0.764)	Loss 0.5521 (0.5521)	Acc@1 89.697 (89.697)	Acc@5 99.658 (99.658)

Epoch: [82 | 180] LR: 0.100000
Epoch: [82][0/25]	Time 0.746 (0.746)	Data 0.671 (0.671)	Loss 0.5450 (0.5450)	Acc@1 90.234 (90.234)	Acc@5 99.707 (99.707)

Epoch: [83 | 180] LR: 0.100000
Epoch: [83][0/25]	Time 0.613 (0.613)	Data 0.670 (0.670)	Loss 0.5885 (0.5885)	Acc@1 88.916 (88.916)	Acc@5 99.658 (99.658)

Epoch: [84 | 180] LR: 0.100000
Epoch: [84][0/25]	Time 0.676 (0.676)	Data 0.783 (0.783)	Loss 0.5998 (0.5998)	Acc@1 88.525 (88.525)	Acc@5 99.219 (99.219)

Epoch: [85 | 180] LR: 0.100000
Epoch: [85][0/25]	Time 0.674 (0.674)	Data 0.767 (0.767)	Loss 0.5446 (0.5446)	Acc@1 90.332 (90.332)	Acc@5 99.756 (99.756)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(20, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 38, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(38, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(38, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 421256 ; 487386 ; 0.864316988998453

Epoch: [86 | 180] LR: 0.100000
Epoch: [86][0/25]	Time 0.686 (0.686)	Data 0.666 (0.666)	Loss 0.5650 (0.5650)	Acc@1 89.453 (89.453)	Acc@5 99.756 (99.756)

Epoch: [87 | 180] LR: 0.100000
Epoch: [87][0/25]	Time 0.650 (0.650)	Data 0.719 (0.719)	Loss 0.5464 (0.5464)	Acc@1 90.625 (90.625)	Acc@5 99.902 (99.902)

Epoch: [88 | 180] LR: 0.100000
Epoch: [88][0/25]	Time 0.724 (0.724)	Data 0.665 (0.665)	Loss 0.6243 (0.6243)	Acc@1 87.451 (87.451)	Acc@5 99.512 (99.512)

Epoch: [89 | 180] LR: 0.100000
Epoch: [89][0/25]	Time 0.734 (0.734)	Data 0.654 (0.654)	Loss 0.6023 (0.6023)	Acc@1 88.037 (88.037)	Acc@5 99.707 (99.707)

Epoch: [90 | 180] LR: 0.100000
Epoch: [90][0/25]	Time 0.701 (0.701)	Data 0.686 (0.686)	Loss 0.5592 (0.5592)	Acc@1 90.039 (90.039)	Acc@5 99.756 (99.756)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(18, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 37, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(37, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(37, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 418946 ; 487386 ; 0.8595774191298068

Epoch: [91 | 180] LR: 0.100000
Epoch: [91][0/25]	Time 0.729 (0.729)	Data 0.736 (0.736)	Loss 0.5477 (0.5477)	Acc@1 90.186 (90.186)	Acc@5 99.658 (99.658)

Epoch: [92 | 180] LR: 0.100000
Epoch: [92][0/25]	Time 0.677 (0.677)	Data 0.679 (0.679)	Loss 0.5430 (0.5430)	Acc@1 90.479 (90.479)	Acc@5 99.854 (99.854)

Epoch: [93 | 180] LR: 0.040000
Epoch: [93][0/25]	Time 0.749 (0.749)	Data 0.774 (0.774)	Loss 0.5921 (0.5921)	Acc@1 89.062 (89.062)	Acc@5 99.561 (99.561)

Epoch: [94 | 180] LR: 0.040000
Epoch: [94][0/25]	Time 0.709 (0.709)	Data 0.729 (0.729)	Loss 0.4307 (0.4307)	Acc@1 93.506 (93.506)	Acc@5 99.902 (99.902)

Epoch: [95 | 180] LR: 0.040000
Epoch: [95][0/25]	Time 0.691 (0.691)	Data 0.698 (0.698)	Loss 0.3946 (0.3946)	Acc@1 95.654 (95.654)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(18, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 37, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(37, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(37, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 417792 ; 487386 ; 0.8572096859573316

Epoch: [96 | 180] LR: 0.040000
Epoch: [96][0/25]	Time 0.714 (0.714)	Data 0.670 (0.670)	Loss 0.3681 (0.3681)	Acc@1 96.045 (96.045)	Acc@5 100.000 (100.000)

Epoch: [97 | 180] LR: 0.040000
Epoch: [97][0/25]	Time 0.717 (0.717)	Data 0.608 (0.608)	Loss 0.3527 (0.3527)	Acc@1 96.533 (96.533)	Acc@5 100.000 (100.000)

Epoch: [98 | 180] LR: 0.040000
Epoch: [98][0/25]	Time 0.691 (0.691)	Data 0.691 (0.691)	Loss 0.3567 (0.3567)	Acc@1 96.143 (96.143)	Acc@5 99.902 (99.902)

Epoch: [99 | 180] LR: 0.040000
Epoch: [99][0/25]	Time 0.624 (0.624)	Data 0.647 (0.647)	Loss 0.3537 (0.3537)	Acc@1 96.680 (96.680)	Acc@5 99.902 (99.902)

Epoch: [100 | 180] LR: 0.040000
Epoch: [100][0/25]	Time 0.682 (0.682)	Data 0.655 (0.655)	Loss 0.3428 (0.3428)	Acc@1 96.729 (96.729)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 37, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(37, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(37, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 417214 ; 487386 ; 0.856023767609246

Epoch: [101 | 180] LR: 0.040000
Epoch: [101][0/25]	Time 0.681 (0.681)	Data 0.707 (0.707)	Loss 0.3337 (0.3337)	Acc@1 96.777 (96.777)	Acc@5 99.951 (99.951)

Epoch: [102 | 180] LR: 0.040000
Epoch: [102][0/25]	Time 0.667 (0.667)	Data 0.661 (0.661)	Loss 0.3107 (0.3107)	Acc@1 97.754 (97.754)	Acc@5 100.000 (100.000)

Epoch: [103 | 180] LR: 0.040000
Epoch: [103][0/25]	Time 0.727 (0.727)	Data 0.644 (0.644)	Loss 0.3208 (0.3208)	Acc@1 97.070 (97.070)	Acc@5 100.000 (100.000)

Epoch: [104 | 180] LR: 0.040000
Epoch: [104][0/25]	Time 0.724 (0.724)	Data 0.644 (0.644)	Loss 0.3236 (0.3236)	Acc@1 97.266 (97.266)	Acc@5 100.000 (100.000)

Epoch: [105 | 180] LR: 0.040000
Epoch: [105][0/25]	Time 0.723 (0.723)	Data 0.710 (0.710)	Loss 0.3109 (0.3109)	Acc@1 96.973 (96.973)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 37, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(37, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(37, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [106 | 180] LR: 0.040000
Epoch: [106][0/25]	Time 0.708 (0.708)	Data 0.692 (0.692)	Loss 0.3085 (0.3085)	Acc@1 97.412 (97.412)	Acc@5 99.854 (99.854)

Epoch: [107 | 180] LR: 0.040000
Epoch: [107][0/25]	Time 0.705 (0.705)	Data 0.737 (0.737)	Loss 0.2841 (0.2841)	Acc@1 97.949 (97.949)	Acc@5 100.000 (100.000)

Epoch: [108 | 180] LR: 0.040000
Epoch: [108][0/25]	Time 0.691 (0.691)	Data 0.675 (0.675)	Loss 0.2891 (0.2891)	Acc@1 97.705 (97.705)	Acc@5 99.951 (99.951)

Epoch: [109 | 180] LR: 0.040000
Epoch: [109][0/25]	Time 0.601 (0.601)	Data 0.643 (0.643)	Loss 0.2974 (0.2974)	Acc@1 97.510 (97.510)	Acc@5 99.951 (99.951)

Epoch: [110 | 180] LR: 0.040000
Epoch: [110][0/25]	Time 0.692 (0.692)	Data 0.666 (0.666)	Loss 0.2843 (0.2843)	Acc@1 97.754 (97.754)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(36, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 416060 ; 487386 ; 0.8536560344367708

Epoch: [111 | 180] LR: 0.040000
Epoch: [111][0/25]	Time 0.726 (0.726)	Data 0.646 (0.646)	Loss 0.2829 (0.2829)	Acc@1 97.949 (97.949)	Acc@5 99.951 (99.951)

Epoch: [112 | 180] LR: 0.040000
Epoch: [112][0/25]	Time 0.702 (0.702)	Data 0.677 (0.677)	Loss 0.2744 (0.2744)	Acc@1 97.949 (97.949)	Acc@5 100.000 (100.000)

Epoch: [113 | 180] LR: 0.040000
Epoch: [113][0/25]	Time 0.735 (0.735)	Data 0.678 (0.678)	Loss 0.2708 (0.2708)	Acc@1 97.998 (97.998)	Acc@5 100.000 (100.000)

Epoch: [114 | 180] LR: 0.040000
Epoch: [114][0/25]	Time 0.687 (0.687)	Data 0.756 (0.756)	Loss 0.2630 (0.2630)	Acc@1 98.389 (98.389)	Acc@5 100.000 (100.000)

Epoch: [115 | 180] LR: 0.040000
Epoch: [115][0/25]	Time 0.735 (0.735)	Data 0.704 (0.704)	Loss 0.2657 (0.2657)	Acc@1 98.096 (98.096)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(36, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 415482 ; 487386 ; 0.8524701160886854

Epoch: [116 | 180] LR: 0.040000
Epoch: [116][0/25]	Time 0.703 (0.703)	Data 0.653 (0.653)	Loss 0.2557 (0.2557)	Acc@1 98.242 (98.242)	Acc@5 100.000 (100.000)

Epoch: [117 | 180] LR: 0.040000
Epoch: [117][0/25]	Time 0.657 (0.657)	Data 0.683 (0.683)	Loss 0.2582 (0.2582)	Acc@1 98.486 (98.486)	Acc@5 99.902 (99.902)

Epoch: [118 | 180] LR: 0.040000
Epoch: [118][0/25]	Time 0.732 (0.732)	Data 0.709 (0.709)	Loss 0.2461 (0.2461)	Acc@1 98.584 (98.584)	Acc@5 100.000 (100.000)

Epoch: [119 | 180] LR: 0.040000
Epoch: [119][0/25]	Time 0.677 (0.677)	Data 0.657 (0.657)	Loss 0.2504 (0.2504)	Acc@1 98.291 (98.291)	Acc@5 100.000 (100.000)

Epoch: [120 | 180] LR: 0.040000
Epoch: [120][0/25]	Time 0.745 (0.745)	Data 0.779 (0.779)	Loss 0.2483 (0.2483)	Acc@1 98.291 (98.291)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(36, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [121 | 180] LR: 0.040000
Epoch: [121][0/25]	Time 0.708 (0.708)	Data 0.653 (0.653)	Loss 0.2449 (0.2449)	Acc@1 98.193 (98.193)	Acc@5 100.000 (100.000)

Epoch: [122 | 180] LR: 0.040000
Epoch: [122][0/25]	Time 0.745 (0.745)	Data 0.666 (0.666)	Loss 0.2336 (0.2336)	Acc@1 99.023 (99.023)	Acc@5 100.000 (100.000)

Epoch: [123 | 180] LR: 0.040000
Epoch: [123][0/25]	Time 0.669 (0.669)	Data 0.703 (0.703)	Loss 0.2355 (0.2355)	Acc@1 98.486 (98.486)	Acc@5 100.000 (100.000)

Epoch: [124 | 180] LR: 0.040000
Epoch: [124][0/25]	Time 0.698 (0.698)	Data 0.633 (0.633)	Loss 0.2365 (0.2365)	Acc@1 98.584 (98.584)	Acc@5 100.000 (100.000)

Epoch: [125 | 180] LR: 0.040000
Epoch: [125][0/25]	Time 0.726 (0.726)	Data 0.665 (0.665)	Loss 0.2406 (0.2406)	Acc@1 98.242 (98.242)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(36, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [126 | 180] LR: 0.040000
Epoch: [126][0/25]	Time 0.687 (0.687)	Data 0.631 (0.631)	Loss 0.2333 (0.2333)	Acc@1 98.535 (98.535)	Acc@5 100.000 (100.000)

Epoch: [127 | 180] LR: 0.040000
Epoch: [127][0/25]	Time 0.714 (0.714)	Data 0.706 (0.706)	Loss 0.2274 (0.2274)	Acc@1 98.779 (98.779)	Acc@5 100.000 (100.000)

Epoch: [128 | 180] LR: 0.040000
Epoch: [128][0/25]	Time 0.739 (0.739)	Data 0.642 (0.642)	Loss 0.2366 (0.2366)	Acc@1 98.096 (98.096)	Acc@5 100.000 (100.000)

Epoch: [129 | 180] LR: 0.040000
Epoch: [129][0/25]	Time 0.738 (0.738)	Data 0.652 (0.652)	Loss 0.2288 (0.2288)	Acc@1 98.730 (98.730)	Acc@5 100.000 (100.000)

Epoch: [130 | 180] LR: 0.040000
Epoch: [130][0/25]	Time 0.721 (0.721)	Data 0.657 (0.657)	Loss 0.2282 (0.2282)	Acc@1 98.779 (98.779)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(36, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [131 | 180] LR: 0.040000
Epoch: [131][0/25]	Time 0.704 (0.704)	Data 0.671 (0.671)	Loss 0.2287 (0.2287)	Acc@1 98.486 (98.486)	Acc@5 100.000 (100.000)

Epoch: [132 | 180] LR: 0.040000
Epoch: [132][0/25]	Time 0.729 (0.729)	Data 0.750 (0.750)	Loss 0.2175 (0.2175)	Acc@1 98.682 (98.682)	Acc@5 100.000 (100.000)

Epoch: [133 | 180] LR: 0.040000
Epoch: [133][0/25]	Time 0.732 (0.732)	Data 0.643 (0.643)	Loss 0.2181 (0.2181)	Acc@1 98.633 (98.633)	Acc@5 100.000 (100.000)

Epoch: [134 | 180] LR: 0.040000
Epoch: [134][0/25]	Time 0.737 (0.737)	Data 0.610 (0.610)	Loss 0.2229 (0.2229)	Acc@1 98.486 (98.486)	Acc@5 100.000 (100.000)

Epoch: [135 | 180] LR: 0.040000
Epoch: [135][0/25]	Time 0.719 (0.719)	Data 0.760 (0.760)	Loss 0.2245 (0.2245)	Acc@1 98.438 (98.438)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(36, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 415192 ; 487386 ; 0.8518751051527947

Epoch: [136 | 180] LR: 0.040000
Epoch: [136][0/25]	Time 0.679 (0.679)	Data 0.713 (0.713)	Loss 0.2242 (0.2242)	Acc@1 98.193 (98.193)	Acc@5 100.000 (100.000)

Epoch: [137 | 180] LR: 0.040000
Epoch: [137][0/25]	Time 0.713 (0.713)	Data 0.711 (0.711)	Loss 0.2141 (0.2141)	Acc@1 98.877 (98.877)	Acc@5 99.951 (99.951)

Epoch: [138 | 180] LR: 0.040000
Epoch: [138][0/25]	Time 0.645 (0.645)	Data 0.689 (0.689)	Loss 0.2289 (0.2289)	Acc@1 97.852 (97.852)	Acc@5 100.000 (100.000)

Epoch: [139 | 180] LR: 0.040000
Epoch: [139][0/25]	Time 0.685 (0.685)	Data 0.697 (0.697)	Loss 0.2126 (0.2126)	Acc@1 98.340 (98.340)	Acc@5 100.000 (100.000)

Epoch: [140 | 180] LR: 0.040000
Epoch: [140][0/25]	Time 0.707 (0.707)	Data 0.623 (0.623)	Loss 0.2235 (0.2235)	Acc@1 97.754 (97.754)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(36, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [141 | 180] LR: 0.040000
Epoch: [141][0/25]	Time 0.696 (0.696)	Data 0.628 (0.628)	Loss 0.2098 (0.2098)	Acc@1 98.438 (98.438)	Acc@5 100.000 (100.000)

Epoch: [142 | 180] LR: 0.040000
Epoch: [142][0/25]	Time 0.722 (0.722)	Data 0.654 (0.654)	Loss 0.2055 (0.2055)	Acc@1 98.877 (98.877)	Acc@5 100.000 (100.000)

Epoch: [143 | 180] LR: 0.040000
Epoch: [143][0/25]	Time 0.733 (0.733)	Data 0.647 (0.647)	Loss 0.2240 (0.2240)	Acc@1 97.803 (97.803)	Acc@5 100.000 (100.000)

Epoch: [144 | 180] LR: 0.040000
Epoch: [144][0/25]	Time 0.750 (0.750)	Data 0.644 (0.644)	Loss 0.2076 (0.2076)	Acc@1 98.633 (98.633)	Acc@5 100.000 (100.000)

Epoch: [145 | 180] LR: 0.040000
Epoch: [145][0/25]	Time 0.727 (0.727)	Data 0.685 (0.685)	Loss 0.2125 (0.2125)	Acc@1 98.438 (98.438)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(36, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [146 | 180] LR: 0.040000
Epoch: [146][0/25]	Time 0.586 (0.586)	Data 0.639 (0.639)	Loss 0.2140 (0.2140)	Acc@1 98.145 (98.145)	Acc@5 100.000 (100.000)

Epoch: [147 | 180] LR: 0.040000
Epoch: [147][0/25]	Time 0.661 (0.661)	Data 0.841 (0.841)	Loss 0.1987 (0.1987)	Acc@1 98.828 (98.828)	Acc@5 100.000 (100.000)

Epoch: [148 | 180] LR: 0.040000
Epoch: [148][0/25]	Time 0.773 (0.773)	Data 0.745 (0.745)	Loss 0.2175 (0.2175)	Acc@1 97.949 (97.949)	Acc@5 100.000 (100.000)

Epoch: [149 | 180] LR: 0.040000
Epoch: [149][0/25]	Time 0.592 (0.592)	Data 0.640 (0.640)	Loss 0.2171 (0.2171)	Acc@1 97.754 (97.754)	Acc@5 100.000 (100.000)

Epoch: [150 | 180] LR: 0.000400
Epoch: [150][0/25]	Time 0.715 (0.715)	Data 0.674 (0.674)	Loss 0.2273 (0.2273)	Acc@1 97.705 (97.705)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 35, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(35, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(35, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 414038 ; 487386 ; 0.8495073719803194

Epoch: [151 | 180] LR: 0.000400
Epoch: [151][0/25]	Time 0.695 (0.695)	Data 0.645 (0.645)	Loss 0.2131 (0.2131)	Acc@1 98.145 (98.145)	Acc@5 100.000 (100.000)

Epoch: [152 | 180] LR: 0.000400
Epoch: [152][0/25]	Time 0.733 (0.733)	Data 0.777 (0.777)	Loss 0.1937 (0.1937)	Acc@1 98.584 (98.584)	Acc@5 100.000 (100.000)

Epoch: [153 | 180] LR: 0.000400
Epoch: [153][0/25]	Time 0.708 (0.708)	Data 0.644 (0.644)	Loss 0.1984 (0.1984)	Acc@1 98.730 (98.730)	Acc@5 100.000 (100.000)

Epoch: [154 | 180] LR: 0.000400
Epoch: [154][0/25]	Time 0.688 (0.688)	Data 0.787 (0.787)	Loss 0.1931 (0.1931)	Acc@1 98.975 (98.975)	Acc@5 100.000 (100.000)

Epoch: [155 | 180] LR: 0.000400
Epoch: [155][0/25]	Time 0.721 (0.721)	Data 0.678 (0.678)	Loss 0.1899 (0.1899)	Acc@1 99.219 (99.219)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 35, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(35, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(35, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [156 | 180] LR: 0.000400
Epoch: [156][0/25]	Time 0.662 (0.662)	Data 0.753 (0.753)	Loss 0.1862 (0.1862)	Acc@1 99.170 (99.170)	Acc@5 100.000 (100.000)

Epoch: [157 | 180] LR: 0.000400
Epoch: [157][0/25]	Time 0.750 (0.750)	Data 0.758 (0.758)	Loss 0.1960 (0.1960)	Acc@1 98.779 (98.779)	Acc@5 100.000 (100.000)

Epoch: [158 | 180] LR: 0.000400
Epoch: [158][0/25]	Time 0.705 (0.705)	Data 0.734 (0.734)	Loss 0.1886 (0.1886)	Acc@1 99.072 (99.072)	Acc@5 100.000 (100.000)

Epoch: [159 | 180] LR: 0.000400
Epoch: [159][0/25]	Time 0.661 (0.661)	Data 0.790 (0.790)	Loss 0.1907 (0.1907)	Acc@1 99.072 (99.072)	Acc@5 100.000 (100.000)

Epoch: [160 | 180] LR: 0.000400
Epoch: [160][0/25]	Time 0.737 (0.737)	Data 0.682 (0.682)	Loss 0.1899 (0.1899)	Acc@1 98.877 (98.877)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 35, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(35, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(35, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [161 | 180] LR: 0.000400
Epoch: [161][0/25]	Time 0.735 (0.735)	Data 0.636 (0.636)	Loss 0.1877 (0.1877)	Acc@1 99.072 (99.072)	Acc@5 100.000 (100.000)

Epoch: [162 | 180] LR: 0.000400
Epoch: [162][0/25]	Time 0.683 (0.683)	Data 0.690 (0.690)	Loss 0.1857 (0.1857)	Acc@1 99.219 (99.219)	Acc@5 100.000 (100.000)

Epoch: [163 | 180] LR: 0.000400
Epoch: [163][0/25]	Time 0.725 (0.725)	Data 0.693 (0.693)	Loss 0.1824 (0.1824)	Acc@1 99.316 (99.316)	Acc@5 100.000 (100.000)

Epoch: [164 | 180] LR: 0.000400
Epoch: [164][0/25]	Time 0.718 (0.718)	Data 0.741 (0.741)	Loss 0.1871 (0.1871)	Acc@1 99.170 (99.170)	Acc@5 100.000 (100.000)

Epoch: [165 | 180] LR: 0.000400
Epoch: [165][0/25]	Time 0.692 (0.692)	Data 0.640 (0.640)	Loss 0.1859 (0.1859)	Acc@1 99.121 (99.121)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 35, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(35, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(35, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [166 | 180] LR: 0.000400
Epoch: [166][0/25]	Time 0.694 (0.694)	Data 0.690 (0.690)	Loss 0.1782 (0.1782)	Acc@1 99.561 (99.561)	Acc@5 100.000 (100.000)

Epoch: [167 | 180] LR: 0.000400
Epoch: [167][0/25]	Time 0.710 (0.710)	Data 0.648 (0.648)	Loss 0.1829 (0.1829)	Acc@1 99.316 (99.316)	Acc@5 100.000 (100.000)

Epoch: [168 | 180] LR: 0.000400
Epoch: [168][0/25]	Time 0.700 (0.700)	Data 0.628 (0.628)	Loss 0.1782 (0.1782)	Acc@1 99.463 (99.463)	Acc@5 100.000 (100.000)

Epoch: [169 | 180] LR: 0.000400
Epoch: [169][0/25]	Time 0.798 (0.798)	Data 0.856 (0.856)	Loss 0.1790 (0.1790)	Acc@1 99.512 (99.512)	Acc@5 100.000 (100.000)

Epoch: [170 | 180] LR: 0.000400
Epoch: [170][0/25]	Time 0.693 (0.693)	Data 0.628 (0.628)	Loss 0.1774 (0.1774)	Acc@1 99.414 (99.414)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 35, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(35, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(35, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [171 | 180] LR: 0.000400
Epoch: [171][0/25]	Time 0.709 (0.709)	Data 0.636 (0.636)	Loss 0.1801 (0.1801)	Acc@1 99.316 (99.316)	Acc@5 100.000 (100.000)

Epoch: [172 | 180] LR: 0.000400
Epoch: [172][0/25]	Time 0.746 (0.746)	Data 0.697 (0.697)	Loss 0.1860 (0.1860)	Acc@1 99.121 (99.121)	Acc@5 100.000 (100.000)

Epoch: [173 | 180] LR: 0.000400
Epoch: [173][0/25]	Time 0.695 (0.695)	Data 0.765 (0.765)	Loss 0.1837 (0.1837)	Acc@1 99.121 (99.121)	Acc@5 100.000 (100.000)

Epoch: [174 | 180] LR: 0.000400
Epoch: [174][0/25]	Time 0.745 (0.745)	Data 0.690 (0.690)	Loss 0.1762 (0.1762)	Acc@1 99.463 (99.463)	Acc@5 100.000 (100.000)

Epoch: [175 | 180] LR: 0.000400
Epoch: [175][0/25]	Time 0.727 (0.727)	Data 0.695 (0.695)	Loss 0.1837 (0.1837)	Acc@1 99.219 (99.219)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 35, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(35, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(35, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [176 | 180] LR: 0.000400
Epoch: [176][0/25]	Time 0.686 (0.686)	Data 0.680 (0.680)	Loss 0.1796 (0.1796)	Acc@1 99.316 (99.316)	Acc@5 100.000 (100.000)

Epoch: [177 | 180] LR: 0.000400
Epoch: [177][0/25]	Time 0.710 (0.710)	Data 0.693 (0.693)	Loss 0.1806 (0.1806)	Acc@1 99.512 (99.512)	Acc@5 100.000 (100.000)

Epoch: [178 | 180] LR: 0.000400
Epoch: [178][0/25]	Time 0.707 (0.707)	Data 0.686 (0.686)	Loss 0.1786 (0.1786)	Acc@1 99.512 (99.512)	Acc@5 100.000 (100.000)

Epoch: [179 | 180] LR: 0.000400
Epoch: [179][0/25]	Time 0.594 (0.594)	Data 0.794 (0.794)	Loss 0.1788 (0.1788)	Acc@1 99.561 (99.561)	Acc@5 100.000 (100.000)

Epoch: [180 | 180] LR: 0.000400
Epoch: [180][0/25]	Time 0.669 (0.669)	Data 0.680 (0.680)	Loss 0.1800 (0.1800)	Acc@1 99.512 (99.512)	Acc@5 100.000 (100.000)

  2048
  92.13
 17.276s  no display found. Using non-interactive Agg backend
[5, 5, 5]
Cifar10: True; cifar100: False
False
Files already downloaded and verified

Arch Num:  [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
count0: 487386

Epoch: [1 | 180] LR: 0.100000
Epoch: [1][0/25]	Time 0.802 (0.802)	Data 0.741 (0.741)	Loss 3.1261 (3.1261)	Acc@1 9.229 (9.229)	Acc@5 50.977 (50.977)

Epoch: [2 | 180] LR: 0.100000
Epoch: [2][0/25]	Time 0.659 (0.659)	Data 0.670 (0.670)	Loss 3.0236 (3.0236)	Acc@1 10.400 (10.400)	Acc@5 49.951 (49.951)

Epoch: [3 | 180] LR: 0.100000
Epoch: [3][0/25]	Time 0.773 (0.773)	Data 0.756 (0.756)	Loss 2.9499 (2.9499)	Acc@1 12.012 (12.012)	Acc@5 55.713 (55.713)

Epoch: [4 | 180] LR: 0.100000
Epoch: [4][0/25]	Time 0.740 (0.740)	Data 0.690 (0.690)	Loss 2.8172 (2.8172)	Acc@1 17.676 (17.676)	Acc@5 67.480 (67.480)

Epoch: [5 | 180] LR: 0.100000
Epoch: [5][0/25]	Time 0.761 (0.761)	Data 0.767 (0.767)	Loss 2.5977 (2.5977)	Acc@1 22.412 (22.412)	Acc@5 76.221 (76.221)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [6 | 180] LR: 0.100000
Epoch: [6][0/25]	Time 0.701 (0.701)	Data 0.755 (0.755)	Loss 2.4644 (2.4644)	Acc@1 26.562 (26.562)	Acc@5 82.568 (82.568)

Epoch: [7 | 180] LR: 0.100000
Epoch: [7][0/25]	Time 0.730 (0.730)	Data 0.705 (0.705)	Loss 2.3511 (2.3511)	Acc@1 28.662 (28.662)	Acc@5 86.230 (86.230)

Epoch: [8 | 180] LR: 0.100000
Epoch: [8][0/25]	Time 0.647 (0.647)	Data 0.693 (0.693)	Loss 2.2479 (2.2479)	Acc@1 30.518 (30.518)	Acc@5 85.400 (85.400)

Epoch: [9 | 180] LR: 0.100000
Epoch: [9][0/25]	Time 0.829 (0.829)	Data 0.747 (0.747)	Loss 2.1633 (2.1633)	Acc@1 32.764 (32.764)	Acc@5 87.891 (87.891)

Epoch: [10 | 180] LR: 0.100000
Epoch: [10][0/25]	Time 0.736 (0.736)	Data 0.660 (0.660)	Loss 2.0837 (2.0837)	Acc@1 36.182 (36.182)	Acc@5 87.549 (87.549)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [11 | 180] LR: 0.100000
Epoch: [11][0/25]	Time 0.665 (0.665)	Data 0.705 (0.705)	Loss 2.0488 (2.0488)	Acc@1 36.768 (36.768)	Acc@5 87.939 (87.939)

Epoch: [12 | 180] LR: 0.100000
Epoch: [12][0/25]	Time 0.762 (0.762)	Data 0.696 (0.696)	Loss 1.9772 (1.9772)	Acc@1 38.965 (38.965)	Acc@5 89.990 (89.990)

Epoch: [13 | 180] LR: 0.100000
Epoch: [13][0/25]	Time 0.735 (0.735)	Data 0.709 (0.709)	Loss 1.7748 (1.7748)	Acc@1 46.826 (46.826)	Acc@5 92.969 (92.969)

Epoch: [14 | 180] LR: 0.100000
Epoch: [14][0/25]	Time 0.700 (0.700)	Data 0.677 (0.677)	Loss 1.6367 (1.6367)	Acc@1 50.586 (50.586)	Acc@5 93.359 (93.359)

Epoch: [15 | 180] LR: 0.100000
Epoch: [15][0/25]	Time 0.774 (0.774)	Data 0.697 (0.697)	Loss 1.4959 (1.4959)	Acc@1 56.055 (56.055)	Acc@5 95.410 (95.410)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [16 | 180] LR: 0.100000
Epoch: [16][0/25]	Time 0.743 (0.743)	Data 0.739 (0.739)	Loss 1.4820 (1.4820)	Acc@1 55.420 (55.420)	Acc@5 94.824 (94.824)

Epoch: [17 | 180] LR: 0.100000
Epoch: [17][0/25]	Time 0.750 (0.750)	Data 0.688 (0.688)	Loss 1.3586 (1.3586)	Acc@1 59.766 (59.766)	Acc@5 95.752 (95.752)

Epoch: [18 | 180] LR: 0.100000
Epoch: [18][0/25]	Time 0.720 (0.720)	Data 0.688 (0.688)	Loss 1.2491 (1.2491)	Acc@1 64.258 (64.258)	Acc@5 96.777 (96.777)

Epoch: [19 | 180] LR: 0.100000
Epoch: [19][0/25]	Time 0.742 (0.742)	Data 0.708 (0.708)	Loss 1.1819 (1.1819)	Acc@1 65.723 (65.723)	Acc@5 96.631 (96.631)

Epoch: [20 | 180] LR: 0.100000
Epoch: [20][0/25]	Time 0.767 (0.767)	Data 0.661 (0.661)	Loss 1.1121 (1.1121)	Acc@1 69.092 (69.092)	Acc@5 97.803 (97.803)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [21 | 180] LR: 0.100000
Epoch: [21][0/25]	Time 0.778 (0.778)	Data 0.806 (0.806)	Loss 1.0059 (1.0059)	Acc@1 71.582 (71.582)	Acc@5 98.193 (98.193)

Epoch: [22 | 180] LR: 0.100000
Epoch: [22][0/25]	Time 0.764 (0.764)	Data 0.672 (0.672)	Loss 0.9300 (0.9300)	Acc@1 75.293 (75.293)	Acc@5 98.975 (98.975)

Epoch: [23 | 180] LR: 0.100000
Epoch: [23][0/25]	Time 0.756 (0.756)	Data 0.680 (0.680)	Loss 0.8829 (0.8829)	Acc@1 77.393 (77.393)	Acc@5 98.877 (98.877)

Epoch: [24 | 180] LR: 0.100000
Epoch: [24][0/25]	Time 0.718 (0.718)	Data 0.706 (0.706)	Loss 0.8546 (0.8546)	Acc@1 78.027 (78.027)	Acc@5 98.877 (98.877)

Epoch: [25 | 180] LR: 0.100000
Epoch: [25][0/25]	Time 0.724 (0.724)	Data 0.678 (0.678)	Loss 0.8679 (0.8679)	Acc@1 77.881 (77.881)	Acc@5 98.730 (98.730)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [26 | 180] LR: 0.100000
Epoch: [26][0/25]	Time 0.766 (0.766)	Data 0.843 (0.843)	Loss 0.8000 (0.8000)	Acc@1 80.762 (80.762)	Acc@5 98.730 (98.730)

Epoch: [27 | 180] LR: 0.100000
Epoch: [27][0/25]	Time 0.761 (0.761)	Data 0.729 (0.729)	Loss 0.8281 (0.8281)	Acc@1 78.955 (78.955)	Acc@5 98.779 (98.779)

Epoch: [28 | 180] LR: 0.100000
Epoch: [28][0/25]	Time 0.820 (0.820)	Data 0.766 (0.766)	Loss 0.7715 (0.7715)	Acc@1 81.738 (81.738)	Acc@5 99.023 (99.023)

Epoch: [29 | 180] LR: 0.100000
Epoch: [29][0/25]	Time 0.786 (0.786)	Data 0.715 (0.715)	Loss 0.7253 (0.7253)	Acc@1 82.861 (82.861)	Acc@5 98.975 (98.975)

Epoch: [30 | 180] LR: 0.100000
Epoch: [30][0/25]	Time 0.747 (0.747)	Data 0.670 (0.670)	Loss 0.7255 (0.7255)	Acc@1 82.861 (82.861)	Acc@5 99.023 (99.023)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [31 | 180] LR: 0.100000
Epoch: [31][0/25]	Time 0.731 (0.731)	Data 0.741 (0.741)	Loss 0.6434 (0.6434)	Acc@1 85.889 (85.889)	Acc@5 99.414 (99.414)

Epoch: [32 | 180] LR: 0.100000
Epoch: [32][0/25]	Time 0.744 (0.744)	Data 0.703 (0.703)	Loss 0.6794 (0.6794)	Acc@1 84.668 (84.668)	Acc@5 99.219 (99.219)

Epoch: [33 | 180] LR: 0.100000
Epoch: [33][0/25]	Time 0.719 (0.719)	Data 0.707 (0.707)	Loss 0.6956 (0.6956)	Acc@1 84.131 (84.131)	Acc@5 99.170 (99.170)

Epoch: [34 | 180] LR: 0.100000
Epoch: [34][0/25]	Time 0.752 (0.752)	Data 0.660 (0.660)	Loss 0.6991 (0.6991)	Acc@1 84.180 (84.180)	Acc@5 99.268 (99.268)

Epoch: [35 | 180] LR: 0.100000
Epoch: [35][0/25]	Time 0.711 (0.711)	Data 0.639 (0.639)	Loss 0.6850 (0.6850)	Acc@1 84.766 (84.766)	Acc@5 99.365 (99.365)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 485078 ; 487386 ; 0.9952645336550496

Epoch: [36 | 180] LR: 0.100000
Epoch: [36][0/25]	Time 0.732 (0.732)	Data 0.728 (0.728)	Loss 0.6848 (0.6848)	Acc@1 84.229 (84.229)	Acc@5 99.463 (99.463)

Epoch: [37 | 180] LR: 0.100000
Epoch: [37][0/25]	Time 0.738 (0.738)	Data 0.748 (0.748)	Loss 0.6241 (0.6241)	Acc@1 86.230 (86.230)	Acc@5 99.561 (99.561)

Epoch: [38 | 180] LR: 0.100000
Epoch: [38][0/25]	Time 0.707 (0.707)	Data 0.695 (0.695)	Loss 0.6165 (0.6165)	Acc@1 87.402 (87.402)	Acc@5 99.707 (99.707)

Epoch: [39 | 180] LR: 0.100000
Epoch: [39][0/25]	Time 0.770 (0.770)	Data 0.762 (0.762)	Loss 0.6311 (0.6311)	Acc@1 86.621 (86.621)	Acc@5 99.463 (99.463)

Epoch: [40 | 180] LR: 0.100000
Epoch: [40][0/25]	Time 0.693 (0.693)	Data 0.676 (0.676)	Loss 0.6464 (0.6464)	Acc@1 86.621 (86.621)	Acc@5 99.512 (99.512)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 481038 ; 487386 ; 0.9869754157895385

Epoch: [41 | 180] LR: 0.100000
Epoch: [41][0/25]	Time 0.742 (0.742)	Data 0.712 (0.712)	Loss 0.6592 (0.6592)	Acc@1 85.498 (85.498)	Acc@5 99.658 (99.658)

Epoch: [42 | 180] LR: 0.100000
Epoch: [42][0/25]	Time 0.771 (0.771)	Data 0.658 (0.658)	Loss 0.6312 (0.6312)	Acc@1 86.523 (86.523)	Acc@5 99.316 (99.316)

Epoch: [43 | 180] LR: 0.100000
Epoch: [43][0/25]	Time 0.729 (0.729)	Data 0.673 (0.673)	Loss 0.6387 (0.6387)	Acc@1 86.182 (86.182)	Acc@5 99.561 (99.561)

Epoch: [44 | 180] LR: 0.100000
Epoch: [44][0/25]	Time 0.743 (0.743)	Data 0.720 (0.720)	Loss 0.6408 (0.6408)	Acc@1 86.328 (86.328)	Acc@5 99.316 (99.316)

Epoch: [45 | 180] LR: 0.100000
Epoch: [45][0/25]	Time 0.724 (0.724)	Data 0.770 (0.770)	Loss 0.6528 (0.6528)	Acc@1 85.791 (85.791)	Acc@5 99.316 (99.316)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 53, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(53, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(53, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 473824 ; 487386 ; 0.9721740058187966

Epoch: [46 | 180] LR: 0.100000
Epoch: [46][0/25]	Time 0.762 (0.762)	Data 0.632 (0.632)	Loss 0.6122 (0.6122)	Acc@1 87.793 (87.793)	Acc@5 99.756 (99.756)

Epoch: [47 | 180] LR: 0.100000
Epoch: [47][0/25]	Time 0.759 (0.759)	Data 0.742 (0.742)	Loss 0.6062 (0.6062)	Acc@1 87.354 (87.354)	Acc@5 99.463 (99.463)

Epoch: [48 | 180] LR: 0.100000
Epoch: [48][0/25]	Time 0.729 (0.729)	Data 0.693 (0.693)	Loss 0.6077 (0.6077)	Acc@1 87.207 (87.207)	Acc@5 99.512 (99.512)

Epoch: [49 | 180] LR: 0.100000
Epoch: [49][0/25]	Time 0.701 (0.701)	Data 0.725 (0.725)	Loss 0.5948 (0.5948)	Acc@1 88.135 (88.135)	Acc@5 99.902 (99.902)

Epoch: [50 | 180] LR: 0.100000
Epoch: [50][0/25]	Time 0.663 (0.663)	Data 0.662 (0.662)	Loss 0.5940 (0.5940)	Acc@1 88.037 (88.037)	Acc@5 99.658 (99.658)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 43, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(43, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(43, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 458526 ; 487386 ; 0.9407861530696409

Epoch: [51 | 180] LR: 0.100000
Epoch: [51][0/25]	Time 0.683 (0.683)	Data 0.689 (0.689)	Loss 0.5967 (0.5967)	Acc@1 88.379 (88.379)	Acc@5 99.561 (99.561)

Epoch: [52 | 180] LR: 0.100000
Epoch: [52][0/25]	Time 0.734 (0.734)	Data 0.774 (0.774)	Loss 0.5842 (0.5842)	Acc@1 87.305 (87.305)	Acc@5 99.414 (99.414)

Epoch: [53 | 180] LR: 0.100000
Epoch: [53][0/25]	Time 0.752 (0.752)	Data 0.682 (0.682)	Loss 0.6120 (0.6120)	Acc@1 87.891 (87.891)	Acc@5 99.609 (99.609)

Epoch: [54 | 180] LR: 0.100000
Epoch: [54][0/25]	Time 0.745 (0.745)	Data 0.654 (0.654)	Loss 0.5694 (0.5694)	Acc@1 89.014 (89.014)	Acc@5 99.512 (99.512)

Epoch: [55 | 180] LR: 0.100000
Epoch: [55][0/25]	Time 0.722 (0.722)	Data 0.717 (0.717)	Loss 0.5930 (0.5930)	Acc@1 88.281 (88.281)	Acc@5 99.609 (99.609)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 37, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(37, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(37, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 450444 ; 487386 ; 0.9242038138149229

Epoch: [56 | 180] LR: 0.100000
Epoch: [56][0/25]	Time 0.715 (0.715)	Data 0.716 (0.716)	Loss 0.5738 (0.5738)	Acc@1 89.502 (89.502)	Acc@5 99.658 (99.658)

Epoch: [57 | 180] LR: 0.100000
Epoch: [57][0/25]	Time 0.721 (0.721)	Data 0.706 (0.706)	Loss 0.6057 (0.6057)	Acc@1 87.354 (87.354)	Acc@5 99.756 (99.756)

Epoch: [58 | 180] LR: 0.100000
Epoch: [58][0/25]	Time 0.720 (0.720)	Data 0.779 (0.779)	Loss 0.6365 (0.6365)	Acc@1 87.939 (87.939)	Acc@5 99.414 (99.414)

Epoch: [59 | 180] LR: 0.100000
Epoch: [59][0/25]	Time 0.660 (0.660)	Data 0.666 (0.666)	Loss 0.5341 (0.5341)	Acc@1 89.795 (89.795)	Acc@5 99.854 (99.854)

Epoch: [60 | 180] LR: 0.100000
Epoch: [60][0/25]	Time 0.670 (0.670)	Data 0.724 (0.724)	Loss 0.5907 (0.5907)	Acc@1 88.135 (88.135)	Acc@5 99.561 (99.561)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 35, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(35, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(35, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 444090 ; 487386 ; 0.911166919033374

Epoch: [61 | 180] LR: 0.100000
Epoch: [61][0/25]	Time 0.670 (0.670)	Data 0.721 (0.721)	Loss 0.5758 (0.5758)	Acc@1 88.525 (88.525)	Acc@5 99.561 (99.561)

Epoch: [62 | 180] LR: 0.100000
Epoch: [62][0/25]	Time 0.714 (0.714)	Data 0.706 (0.706)	Loss 0.5690 (0.5690)	Acc@1 88.672 (88.672)	Acc@5 99.561 (99.561)

Epoch: [63 | 180] LR: 0.100000
Epoch: [63][0/25]	Time 0.761 (0.761)	Data 0.708 (0.708)	Loss 0.5819 (0.5819)	Acc@1 88.818 (88.818)	Acc@5 99.561 (99.561)

Epoch: [64 | 180] LR: 0.100000
Epoch: [64][0/25]	Time 0.715 (0.715)	Data 0.656 (0.656)	Loss 0.5982 (0.5982)	Acc@1 88.184 (88.184)	Acc@5 99.609 (99.609)

Epoch: [65 | 180] LR: 0.100000
Epoch: [65][0/25]	Time 0.712 (0.712)	Data 0.694 (0.694)	Loss 0.5645 (0.5645)	Acc@1 89.014 (89.014)	Acc@5 99.512 (99.512)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(27, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(27, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(28, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 433698 ; 487386 ; 0.8898450099100097

Epoch: [66 | 180] LR: 0.100000
Epoch: [66][0/25]	Time 0.733 (0.733)	Data 0.676 (0.676)	Loss 0.5778 (0.5778)	Acc@1 88.477 (88.477)	Acc@5 99.707 (99.707)

Epoch: [67 | 180] LR: 0.100000
Epoch: [67][0/25]	Time 0.727 (0.727)	Data 0.649 (0.649)	Loss 0.5845 (0.5845)	Acc@1 88.623 (88.623)	Acc@5 99.609 (99.609)

Epoch: [68 | 180] LR: 0.100000
Epoch: [68][0/25]	Time 0.711 (0.711)	Data 0.658 (0.658)	Loss 0.5943 (0.5943)	Acc@1 88.428 (88.428)	Acc@5 99.707 (99.707)

Epoch: [69 | 180] LR: 0.100000
Epoch: [69][0/25]	Time 0.702 (0.702)	Data 0.682 (0.682)	Loss 0.5725 (0.5725)	Acc@1 88.428 (88.428)	Acc@5 99.609 (99.609)

Epoch: [70 | 180] LR: 0.100000
Epoch: [70][0/25]	Time 0.720 (0.720)	Data 0.752 (0.752)	Loss 0.6309 (0.6309)	Acc@1 87.207 (87.207)	Acc@5 99.561 (99.561)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(27, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(27, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(23, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 424748 ; 487386 ; 0.8714817413713155

Epoch: [71 | 180] LR: 0.100000
Epoch: [71][0/25]	Time 0.707 (0.707)	Data 0.695 (0.695)	Loss 0.5444 (0.5444)	Acc@1 89.551 (89.551)	Acc@5 99.707 (99.707)

Epoch: [72 | 180] LR: 0.100000
Epoch: [72][0/25]	Time 0.758 (0.758)	Data 0.753 (0.753)	Loss 0.5510 (0.5510)	Acc@1 89.160 (89.160)	Acc@5 99.854 (99.854)

Epoch: [73 | 180] LR: 0.100000
Epoch: [73][0/25]	Time 0.749 (0.749)	Data 0.627 (0.627)	Loss 0.5392 (0.5392)	Acc@1 89.795 (89.795)	Acc@5 99.854 (99.854)

Epoch: [74 | 180] LR: 0.100000
Epoch: [74][0/25]	Time 0.662 (0.662)	Data 0.667 (0.667)	Loss 0.5668 (0.5668)	Acc@1 89.404 (89.404)	Acc@5 99.609 (99.609)

Epoch: [75 | 180] LR: 0.100000
Epoch: [75][0/25]	Time 0.739 (0.739)	Data 0.665 (0.665)	Loss 0.5559 (0.5559)	Acc@1 89.551 (89.551)	Acc@5 99.805 (99.805)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(27, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(27, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(20, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(23, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 422724 ; 487386 ; 0.8673289753911684

Epoch: [76 | 180] LR: 0.100000
Epoch: [76][0/25]	Time 0.696 (0.696)	Data 0.745 (0.745)	Loss 0.5632 (0.5632)	Acc@1 89.551 (89.551)	Acc@5 99.658 (99.658)

Epoch: [77 | 180] LR: 0.100000
Epoch: [77][0/25]	Time 0.713 (0.713)	Data 0.702 (0.702)	Loss 0.5596 (0.5596)	Acc@1 89.307 (89.307)	Acc@5 99.658 (99.658)

Epoch: [78 | 180] LR: 0.100000
Epoch: [78][0/25]	Time 0.754 (0.754)	Data 0.703 (0.703)	Loss 0.5431 (0.5431)	Acc@1 89.453 (89.453)	Acc@5 99.805 (99.805)

Epoch: [79 | 180] LR: 0.100000
Epoch: [79][0/25]	Time 0.689 (0.689)	Data 0.796 (0.796)	Loss 0.5433 (0.5433)	Acc@1 89.404 (89.404)	Acc@5 99.902 (99.902)

Epoch: [80 | 180] LR: 0.100000
Epoch: [80][0/25]	Time 0.765 (0.765)	Data 0.835 (0.835)	Loss 0.5798 (0.5798)	Acc@1 88.086 (88.086)	Acc@5 99.805 (99.805)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(21, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 417526 ; 487386 ; 0.8566639173057905

Epoch: [81 | 180] LR: 0.100000
Epoch: [81][0/25]	Time 0.688 (0.688)	Data 0.673 (0.673)	Loss 0.5538 (0.5538)	Acc@1 89.502 (89.502)	Acc@5 99.805 (99.805)

Epoch: [82 | 180] LR: 0.100000
Epoch: [82][0/25]	Time 0.739 (0.739)	Data 0.693 (0.693)	Loss 0.5453 (0.5453)	Acc@1 89.893 (89.893)	Acc@5 99.658 (99.658)

Epoch: [83 | 180] LR: 0.100000
Epoch: [83][0/25]	Time 0.693 (0.693)	Data 0.685 (0.685)	Loss 0.5588 (0.5588)	Acc@1 89.453 (89.453)	Acc@5 99.561 (99.561)

Epoch: [84 | 180] LR: 0.100000
Epoch: [84][0/25]	Time 0.749 (0.749)	Data 0.696 (0.696)	Loss 0.5739 (0.5739)	Acc@1 88.965 (88.965)	Acc@5 99.512 (99.512)

Epoch: [85 | 180] LR: 0.100000
Epoch: [85][0/25]	Time 0.766 (0.766)	Data 0.756 (0.756)	Loss 0.5500 (0.5500)	Acc@1 89.453 (89.453)	Acc@5 99.805 (99.805)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(17, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 411176 ; 487386 ; 0.8436352295716332

Epoch: [86 | 180] LR: 0.100000
Epoch: [86][0/25]	Time 0.726 (0.726)	Data 0.738 (0.738)	Loss 0.5392 (0.5392)	Acc@1 88.965 (88.965)	Acc@5 99.609 (99.609)

Epoch: [87 | 180] LR: 0.100000
Epoch: [87][0/25]	Time 0.693 (0.693)	Data 0.778 (0.778)	Loss 0.5511 (0.5511)	Acc@1 89.404 (89.404)	Acc@5 99.512 (99.512)

Epoch: [88 | 180] LR: 0.100000
Epoch: [88][0/25]	Time 0.678 (0.678)	Data 0.776 (0.776)	Loss 0.5562 (0.5562)	Acc@1 89.648 (89.648)	Acc@5 99.707 (99.707)

Epoch: [89 | 180] LR: 0.100000
Epoch: [89][0/25]	Time 0.787 (0.787)	Data 0.860 (0.860)	Loss 0.5263 (0.5263)	Acc@1 90.234 (90.234)	Acc@5 99.805 (99.805)

Epoch: [90 | 180] LR: 0.100000
Epoch: [90][0/25]	Time 0.745 (0.745)	Data 0.719 (0.719)	Loss 0.5455 (0.5455)	Acc@1 89.990 (89.990)	Acc@5 99.756 (99.756)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 408866 ; 487386 ; 0.838895659702987

Epoch: [91 | 180] LR: 0.100000
Epoch: [91][0/25]	Time 0.679 (0.679)	Data 0.771 (0.771)	Loss 0.5342 (0.5342)	Acc@1 89.941 (89.941)	Acc@5 99.854 (99.854)

Epoch: [92 | 180] LR: 0.100000
Epoch: [92][0/25]	Time 0.662 (0.662)	Data 0.701 (0.701)	Loss 0.5301 (0.5301)	Acc@1 90.479 (90.479)	Acc@5 99.951 (99.951)

Epoch: [93 | 180] LR: 0.040000
Epoch: [93][0/25]	Time 0.731 (0.731)	Data 0.720 (0.720)	Loss 0.5707 (0.5707)	Acc@1 89.111 (89.111)	Acc@5 99.658 (99.658)

Epoch: [94 | 180] LR: 0.040000
Epoch: [94][0/25]	Time 0.739 (0.739)	Data 0.658 (0.658)	Loss 0.4352 (0.4352)	Acc@1 93.848 (93.848)	Acc@5 99.854 (99.854)

Epoch: [95 | 180] LR: 0.040000
Epoch: [95][0/25]	Time 0.706 (0.706)	Data 0.748 (0.748)	Loss 0.3870 (0.3870)	Acc@1 95.752 (95.752)	Acc@5 99.805 (99.805)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [96 | 180] LR: 0.040000
Epoch: [96][0/25]	Time 0.702 (0.702)	Data 0.826 (0.826)	Loss 0.3809 (0.3809)	Acc@1 95.410 (95.410)	Acc@5 99.902 (99.902)

Epoch: [97 | 180] LR: 0.040000
Epoch: [97][0/25]	Time 0.704 (0.704)	Data 0.648 (0.648)	Loss 0.3555 (0.3555)	Acc@1 96.631 (96.631)	Acc@5 99.902 (99.902)

Epoch: [98 | 180] LR: 0.040000
Epoch: [98][0/25]	Time 0.717 (0.717)	Data 0.775 (0.775)	Loss 0.3564 (0.3564)	Acc@1 95.947 (95.947)	Acc@5 99.902 (99.902)

Epoch: [99 | 180] LR: 0.040000
Epoch: [99][0/25]	Time 0.628 (0.628)	Data 0.773 (0.773)	Loss 0.3444 (0.3444)	Acc@1 96.680 (96.680)	Acc@5 99.854 (99.854)

Epoch: [100 | 180] LR: 0.040000
Epoch: [100][0/25]	Time 0.739 (0.739)	Data 0.643 (0.643)	Loss 0.3172 (0.3172)	Acc@1 97.510 (97.510)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [101 | 180] LR: 0.040000
Epoch: [101][0/25]	Time 0.736 (0.736)	Data 0.653 (0.653)	Loss 0.3302 (0.3302)	Acc@1 96.484 (96.484)	Acc@5 99.951 (99.951)

Epoch: [102 | 180] LR: 0.040000
Epoch: [102][0/25]	Time 0.726 (0.726)	Data 0.652 (0.652)	Loss 0.3288 (0.3288)	Acc@1 96.484 (96.484)	Acc@5 99.902 (99.902)

Epoch: [103 | 180] LR: 0.040000
Epoch: [103][0/25]	Time 0.752 (0.752)	Data 0.714 (0.714)	Loss 0.3105 (0.3105)	Acc@1 97.607 (97.607)	Acc@5 100.000 (100.000)

Epoch: [104 | 180] LR: 0.040000
Epoch: [104][0/25]	Time 0.725 (0.725)	Data 0.682 (0.682)	Loss 0.2994 (0.2994)	Acc@1 97.803 (97.803)	Acc@5 99.951 (99.951)

Epoch: [105 | 180] LR: 0.040000
Epoch: [105][0/25]	Time 0.704 (0.704)	Data 0.641 (0.641)	Loss 0.3041 (0.3041)	Acc@1 97.266 (97.266)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [106 | 180] LR: 0.040000
Epoch: [106][0/25]	Time 0.689 (0.689)	Data 0.705 (0.705)	Loss 0.2910 (0.2910)	Acc@1 97.656 (97.656)	Acc@5 100.000 (100.000)

Epoch: [107 | 180] LR: 0.040000
Epoch: [107][0/25]	Time 0.645 (0.645)	Data 0.657 (0.657)	Loss 0.2853 (0.2853)	Acc@1 98.193 (98.193)	Acc@5 100.000 (100.000)

Epoch: [108 | 180] LR: 0.040000
Epoch: [108][0/25]	Time 0.746 (0.746)	Data 0.724 (0.724)	Loss 0.2775 (0.2775)	Acc@1 97.803 (97.803)	Acc@5 100.000 (100.000)

Epoch: [109 | 180] LR: 0.040000
Epoch: [109][0/25]	Time 0.723 (0.723)	Data 0.772 (0.772)	Loss 0.2726 (0.2726)	Acc@1 98.242 (98.242)	Acc@5 100.000 (100.000)

Epoch: [110 | 180] LR: 0.040000
Epoch: [110][0/25]	Time 0.757 (0.757)	Data 0.678 (0.678)	Loss 0.2585 (0.2585)	Acc@1 98.633 (98.633)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [111 | 180] LR: 0.040000
Epoch: [111][0/25]	Time 0.723 (0.723)	Data 0.715 (0.715)	Loss 0.2667 (0.2667)	Acc@1 98.291 (98.291)	Acc@5 100.000 (100.000)

Epoch: [112 | 180] LR: 0.040000
Epoch: [112][0/25]	Time 0.629 (0.629)	Data 0.837 (0.837)	Loss 0.2734 (0.2734)	Acc@1 98.096 (98.096)	Acc@5 99.951 (99.951)

Epoch: [113 | 180] LR: 0.040000
Epoch: [113][0/25]	Time 0.726 (0.726)	Data 0.690 (0.690)	Loss 0.2587 (0.2587)	Acc@1 98.779 (98.779)	Acc@5 100.000 (100.000)

Epoch: [114 | 180] LR: 0.040000
Epoch: [114][0/25]	Time 0.721 (0.721)	Data 0.867 (0.867)	Loss 0.2501 (0.2501)	Acc@1 98.975 (98.975)	Acc@5 100.000 (100.000)

Epoch: [115 | 180] LR: 0.040000
Epoch: [115][0/25]	Time 0.688 (0.688)	Data 0.638 (0.638)	Loss 0.2521 (0.2521)	Acc@1 98.584 (98.584)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 408576 ; 487386 ; 0.8383006487670963

Epoch: [116 | 180] LR: 0.040000
Epoch: [116][0/25]	Time 0.694 (0.694)	Data 0.700 (0.700)	Loss 0.2531 (0.2531)	Acc@1 98.486 (98.486)	Acc@5 100.000 (100.000)

Epoch: [117 | 180] LR: 0.040000
Epoch: [117][0/25]	Time 0.751 (0.751)	Data 0.728 (0.728)	Loss 0.2421 (0.2421)	Acc@1 98.779 (98.779)	Acc@5 100.000 (100.000)

Epoch: [118 | 180] LR: 0.040000
Epoch: [118][0/25]	Time 0.725 (0.725)	Data 0.677 (0.677)	Loss 0.2590 (0.2590)	Acc@1 98.340 (98.340)	Acc@5 100.000 (100.000)

Epoch: [119 | 180] LR: 0.040000
Epoch: [119][0/25]	Time 0.695 (0.695)	Data 0.710 (0.710)	Loss 0.2433 (0.2433)	Acc@1 98.633 (98.633)	Acc@5 100.000 (100.000)

Epoch: [120 | 180] LR: 0.040000
Epoch: [120][0/25]	Time 0.733 (0.733)	Data 0.653 (0.653)	Loss 0.2441 (0.2441)	Acc@1 98.389 (98.389)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [121 | 180] LR: 0.040000
Epoch: [121][0/25]	Time 0.740 (0.740)	Data 0.831 (0.831)	Loss 0.2485 (0.2485)	Acc@1 98.047 (98.047)	Acc@5 100.000 (100.000)

Epoch: [122 | 180] LR: 0.040000
Epoch: [122][0/25]	Time 0.763 (0.763)	Data 0.640 (0.640)	Loss 0.2261 (0.2261)	Acc@1 99.023 (99.023)	Acc@5 100.000 (100.000)

Epoch: [123 | 180] LR: 0.040000
Epoch: [123][0/25]	Time 0.696 (0.696)	Data 0.708 (0.708)	Loss 0.2300 (0.2300)	Acc@1 99.023 (99.023)	Acc@5 100.000 (100.000)

Epoch: [124 | 180] LR: 0.040000
Epoch: [124][0/25]	Time 0.689 (0.689)	Data 0.696 (0.696)	Loss 0.2266 (0.2266)	Acc@1 98.828 (98.828)	Acc@5 100.000 (100.000)

Epoch: [125 | 180] LR: 0.040000
Epoch: [125][0/25]	Time 0.711 (0.711)	Data 0.809 (0.809)	Loss 0.2292 (0.2292)	Acc@1 98.877 (98.877)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [126 | 180] LR: 0.040000
Epoch: [126][0/25]	Time 0.702 (0.702)	Data 0.681 (0.681)	Loss 0.2330 (0.2330)	Acc@1 98.486 (98.486)	Acc@5 99.951 (99.951)

Epoch: [127 | 180] LR: 0.040000
Epoch: [127][0/25]	Time 0.700 (0.700)	Data 0.763 (0.763)	Loss 0.2154 (0.2154)	Acc@1 99.365 (99.365)	Acc@5 100.000 (100.000)

Epoch: [128 | 180] LR: 0.040000
Epoch: [128][0/25]	Time 0.638 (0.638)	Data 0.846 (0.846)	Loss 0.2214 (0.2214)	Acc@1 98.877 (98.877)	Acc@5 100.000 (100.000)

Epoch: [129 | 180] LR: 0.040000
Epoch: [129][0/25]	Time 0.739 (0.739)	Data 0.763 (0.763)	Loss 0.2305 (0.2305)	Acc@1 98.291 (98.291)	Acc@5 99.951 (99.951)

Epoch: [130 | 180] LR: 0.040000
Epoch: [130][0/25]	Time 0.731 (0.731)	Data 0.754 (0.754)	Loss 0.2259 (0.2259)	Acc@1 98.535 (98.535)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 408286 ; 487386 ; 0.8377056378312057

Epoch: [131 | 180] LR: 0.040000
Epoch: [131][0/25]	Time 0.762 (0.762)	Data 0.761 (0.761)	Loss 0.2240 (0.2240)	Acc@1 98.389 (98.389)	Acc@5 100.000 (100.000)

Epoch: [132 | 180] LR: 0.040000
Epoch: [132][0/25]	Time 0.618 (0.618)	Data 0.652 (0.652)	Loss 0.2135 (0.2135)	Acc@1 98.926 (98.926)	Acc@5 100.000 (100.000)

Epoch: [133 | 180] LR: 0.040000
Epoch: [133][0/25]	Time 0.750 (0.750)	Data 0.731 (0.731)	Loss 0.2123 (0.2123)	Acc@1 98.682 (98.682)	Acc@5 100.000 (100.000)

Epoch: [134 | 180] LR: 0.040000
Epoch: [134][0/25]	Time 0.678 (0.678)	Data 0.766 (0.766)	Loss 0.2170 (0.2170)	Acc@1 98.535 (98.535)	Acc@5 100.000 (100.000)

Epoch: [135 | 180] LR: 0.040000
Epoch: [135][0/25]	Time 0.702 (0.702)	Data 0.716 (0.716)	Loss 0.2290 (0.2290)	Acc@1 98.145 (98.145)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [136 | 180] LR: 0.040000
Epoch: [136][0/25]	Time 0.722 (0.722)	Data 0.729 (0.729)	Loss 0.2280 (0.2280)	Acc@1 97.998 (97.998)	Acc@5 100.000 (100.000)

Epoch: [137 | 180] LR: 0.040000
Epoch: [137][0/25]	Time 0.768 (0.768)	Data 0.646 (0.646)	Loss 0.2126 (0.2126)	Acc@1 98.682 (98.682)	Acc@5 100.000 (100.000)

Epoch: [138 | 180] LR: 0.040000
Epoch: [138][0/25]	Time 0.752 (0.752)	Data 0.688 (0.688)	Loss 0.2082 (0.2082)	Acc@1 98.730 (98.730)	Acc@5 100.000 (100.000)

Epoch: [139 | 180] LR: 0.040000
Epoch: [139][0/25]	Time 0.682 (0.682)	Data 0.850 (0.850)	Loss 0.2118 (0.2118)	Acc@1 98.389 (98.389)	Acc@5 100.000 (100.000)

Epoch: [140 | 180] LR: 0.040000
Epoch: [140][0/25]	Time 0.753 (0.753)	Data 0.738 (0.738)	Loss 0.2163 (0.2163)	Acc@1 98.730 (98.730)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [141 | 180] LR: 0.040000
Epoch: [141][0/25]	Time 0.616 (0.616)	Data 0.696 (0.696)	Loss 0.2034 (0.2034)	Acc@1 98.926 (98.926)	Acc@5 100.000 (100.000)

Epoch: [142 | 180] LR: 0.040000
Epoch: [142][0/25]	Time 0.748 (0.748)	Data 0.655 (0.655)	Loss 0.1963 (0.1963)	Acc@1 98.926 (98.926)	Acc@5 100.000 (100.000)

Epoch: [143 | 180] LR: 0.040000
Epoch: [143][0/25]	Time 0.763 (0.763)	Data 0.674 (0.674)	Loss 0.2008 (0.2008)	Acc@1 98.779 (98.779)	Acc@5 100.000 (100.000)

Epoch: [144 | 180] LR: 0.040000
Epoch: [144][0/25]	Time 0.738 (0.738)	Data 0.648 (0.648)	Loss 0.2125 (0.2125)	Acc@1 98.193 (98.193)	Acc@5 100.000 (100.000)

Epoch: [145 | 180] LR: 0.040000
Epoch: [145][0/25]	Time 0.723 (0.723)	Data 0.770 (0.770)	Loss 0.2137 (0.2137)	Acc@1 98.242 (98.242)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [146 | 180] LR: 0.040000
Epoch: [146][0/25]	Time 0.703 (0.703)	Data 0.737 (0.737)	Loss 0.2096 (0.2096)	Acc@1 98.291 (98.291)	Acc@5 100.000 (100.000)

Epoch: [147 | 180] LR: 0.040000
Epoch: [147][0/25]	Time 0.660 (0.660)	Data 0.685 (0.685)	Loss 0.1994 (0.1994)	Acc@1 98.975 (98.975)	Acc@5 100.000 (100.000)

Epoch: [148 | 180] LR: 0.040000
Epoch: [148][0/25]	Time 0.672 (0.672)	Data 0.708 (0.708)	Loss 0.1979 (0.1979)	Acc@1 98.877 (98.877)	Acc@5 100.000 (100.000)

Epoch: [149 | 180] LR: 0.040000
Epoch: [149][0/25]	Time 0.710 (0.710)	Data 0.851 (0.851)	Loss 0.2051 (0.2051)	Acc@1 98.389 (98.389)	Acc@5 100.000 (100.000)

Epoch: [150 | 180] LR: 0.000400
Epoch: [150][0/25]	Time 0.788 (0.788)	Data 0.860 (0.860)	Loss 0.2113 (0.2113)	Acc@1 98.438 (98.438)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [151 | 180] LR: 0.000400
Epoch: [151][0/25]	Time 0.757 (0.757)	Data 0.846 (0.846)	Loss 0.1946 (0.1946)	Acc@1 98.975 (98.975)	Acc@5 100.000 (100.000)

Epoch: [152 | 180] LR: 0.000400
Epoch: [152][0/25]	Time 0.712 (0.712)	Data 0.795 (0.795)	Loss 0.1988 (0.1988)	Acc@1 98.682 (98.682)	Acc@5 99.951 (99.951)

Epoch: [153 | 180] LR: 0.000400
Epoch: [153][0/25]	Time 0.716 (0.716)	Data 0.680 (0.680)	Loss 0.1899 (0.1899)	Acc@1 99.023 (99.023)	Acc@5 100.000 (100.000)

Epoch: [154 | 180] LR: 0.000400
Epoch: [154][0/25]	Time 0.761 (0.761)	Data 0.652 (0.652)	Loss 0.1876 (0.1876)	Acc@1 99.023 (99.023)	Acc@5 100.000 (100.000)

Epoch: [155 | 180] LR: 0.000400
Epoch: [155][0/25]	Time 0.720 (0.720)	Data 0.654 (0.654)	Loss 0.1880 (0.1880)	Acc@1 98.975 (98.975)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [156 | 180] LR: 0.000400
Epoch: [156][0/25]	Time 0.675 (0.675)	Data 0.694 (0.694)	Loss 0.1933 (0.1933)	Acc@1 99.023 (99.023)	Acc@5 100.000 (100.000)

Epoch: [157 | 180] LR: 0.000400
Epoch: [157][0/25]	Time 0.697 (0.697)	Data 0.714 (0.714)	Loss 0.1816 (0.1816)	Acc@1 99.316 (99.316)	Acc@5 100.000 (100.000)

Epoch: [158 | 180] LR: 0.000400
Epoch: [158][0/25]	Time 0.637 (0.637)	Data 0.674 (0.674)	Loss 0.1804 (0.1804)	Acc@1 99.561 (99.561)	Acc@5 100.000 (100.000)

Epoch: [159 | 180] LR: 0.000400
Epoch: [159][0/25]	Time 0.656 (0.656)	Data 0.651 (0.651)	Loss 0.1838 (0.1838)	Acc@1 99.316 (99.316)	Acc@5 100.000 (100.000)

Epoch: [160 | 180] LR: 0.000400
Epoch: [160][0/25]	Time 0.703 (0.703)	Data 0.850 (0.850)	Loss 0.1825 (0.1825)	Acc@1 99.365 (99.365)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [161 | 180] LR: 0.000400
Epoch: [161][0/25]	Time 0.685 (0.685)	Data 0.793 (0.793)	Loss 0.1845 (0.1845)	Acc@1 99.219 (99.219)	Acc@5 100.000 (100.000)

Epoch: [162 | 180] LR: 0.000400
Epoch: [162][0/25]	Time 0.714 (0.714)	Data 0.791 (0.791)	Loss 0.1876 (0.1876)	Acc@1 99.023 (99.023)	Acc@5 99.951 (99.951)

Epoch: [163 | 180] LR: 0.000400
Epoch: [163][0/25]	Time 0.692 (0.692)	Data 0.825 (0.825)	Loss 0.1835 (0.1835)	Acc@1 99.219 (99.219)	Acc@5 100.000 (100.000)

Epoch: [164 | 180] LR: 0.000400
Epoch: [164][0/25]	Time 0.678 (0.678)	Data 0.790 (0.790)	Loss 0.1869 (0.1869)	Acc@1 99.121 (99.121)	Acc@5 100.000 (100.000)

Epoch: [165 | 180] LR: 0.000400
Epoch: [165][0/25]	Time 0.742 (0.742)	Data 0.647 (0.647)	Loss 0.1795 (0.1795)	Acc@1 99.365 (99.365)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [166 | 180] LR: 0.000400
Epoch: [166][0/25]	Time 0.668 (0.668)	Data 0.687 (0.687)	Loss 0.1840 (0.1840)	Acc@1 99.268 (99.268)	Acc@5 100.000 (100.000)

Epoch: [167 | 180] LR: 0.000400
Epoch: [167][0/25]	Time 0.710 (0.710)	Data 0.683 (0.683)	Loss 0.1764 (0.1764)	Acc@1 99.463 (99.463)	Acc@5 100.000 (100.000)

Epoch: [168 | 180] LR: 0.000400
Epoch: [168][0/25]	Time 0.743 (0.743)	Data 0.656 (0.656)	Loss 0.1804 (0.1804)	Acc@1 99.512 (99.512)	Acc@5 100.000 (100.000)

Epoch: [169 | 180] LR: 0.000400
Epoch: [169][0/25]	Time 0.689 (0.689)	Data 0.660 (0.660)	Loss 0.1739 (0.1739)	Acc@1 99.756 (99.756)	Acc@5 100.000 (100.000)

Epoch: [170 | 180] LR: 0.000400
Epoch: [170][0/25]	Time 0.681 (0.681)	Data 0.774 (0.774)	Loss 0.1825 (0.1825)	Acc@1 99.316 (99.316)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [171 | 180] LR: 0.000400
Epoch: [171][0/25]	Time 0.737 (0.737)	Data 0.692 (0.692)	Loss 0.1792 (0.1792)	Acc@1 99.414 (99.414)	Acc@5 100.000 (100.000)

Epoch: [172 | 180] LR: 0.000400
Epoch: [172][0/25]	Time 0.746 (0.746)	Data 0.729 (0.729)	Loss 0.1820 (0.1820)	Acc@1 99.219 (99.219)	Acc@5 100.000 (100.000)

Epoch: [173 | 180] LR: 0.000400
Epoch: [173][0/25]	Time 0.720 (0.720)	Data 0.693 (0.693)	Loss 0.1767 (0.1767)	Acc@1 99.414 (99.414)	Acc@5 100.000 (100.000)

Epoch: [174 | 180] LR: 0.000400
Epoch: [174][0/25]	Time 0.693 (0.693)	Data 0.781 (0.781)	Loss 0.1739 (0.1739)	Acc@1 99.609 (99.609)	Acc@5 100.000 (100.000)

Epoch: [175 | 180] LR: 0.000400
Epoch: [175][0/25]	Time 0.741 (0.741)	Data 0.631 (0.631)	Loss 0.1795 (0.1795)	Acc@1 99.219 (99.219)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [176 | 180] LR: 0.000400
Epoch: [176][0/25]	Time 0.695 (0.695)	Data 0.699 (0.699)	Loss 0.1782 (0.1782)	Acc@1 99.414 (99.414)	Acc@5 100.000 (100.000)

Epoch: [177 | 180] LR: 0.000400
Epoch: [177][0/25]	Time 0.705 (0.705)	Data 0.725 (0.725)	Loss 0.1796 (0.1796)	Acc@1 99.463 (99.463)	Acc@5 100.000 (100.000)

Epoch: [178 | 180] LR: 0.000400
Epoch: [178][0/25]	Time 0.711 (0.711)	Data 0.702 (0.702)	Loss 0.1759 (0.1759)	Acc@1 99.561 (99.561)	Acc@5 100.000 (100.000)

Epoch: [179 | 180] LR: 0.000400
Epoch: [179][0/25]	Time 0.721 (0.721)	Data 0.740 (0.740)	Loss 0.1826 (0.1826)	Acc@1 98.975 (98.975)	Acc@5 100.000 (100.000)

Epoch: [180 | 180] LR: 0.000400
Epoch: [180][0/25]	Time 0.695 (0.695)	Data 0.692 (0.692)	Loss 0.1755 (0.1755)	Acc@1 99.512 (99.512)	Acc@5 100.000 (100.000)

  2048
  92.15
 17.323s  no display found. Using non-interactive Agg backend
[5, 5, 5]
Cifar10: True; cifar100: False
False
Files already downloaded and verified

Arch Num:  [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
count0: 487386

Epoch: [1 | 180] LR: 0.100000
Epoch: [1][0/25]	Time 0.821 (0.821)	Data 0.689 (0.689)	Loss 3.1861 (3.1861)	Acc@1 10.303 (10.303)	Acc@5 52.979 (52.979)

Epoch: [2 | 180] LR: 0.100000
Epoch: [2][0/25]	Time 0.764 (0.764)	Data 0.675 (0.675)	Loss 2.8662 (2.8662)	Acc@1 16.455 (16.455)	Acc@5 73.730 (73.730)

Epoch: [3 | 180] LR: 0.100000
Epoch: [3][0/25]	Time 0.747 (0.747)	Data 0.730 (0.730)	Loss 2.6784 (2.6784)	Acc@1 20.703 (20.703)	Acc@5 81.689 (81.689)

Epoch: [4 | 180] LR: 0.100000
Epoch: [4][0/25]	Time 0.753 (0.753)	Data 0.701 (0.701)	Loss 2.4738 (2.4738)	Acc@1 27.588 (27.588)	Acc@5 83.594 (83.594)

Epoch: [5 | 180] LR: 0.100000
Epoch: [5][0/25]	Time 0.716 (0.716)	Data 0.834 (0.834)	Loss 2.3328 (2.3328)	Acc@1 30.518 (30.518)	Acc@5 87.354 (87.354)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [6 | 180] LR: 0.100000
Epoch: [6][0/25]	Time 0.702 (0.702)	Data 0.649 (0.649)	Loss 2.1817 (2.1817)	Acc@1 35.742 (35.742)	Acc@5 89.453 (89.453)

Epoch: [7 | 180] LR: 0.100000
Epoch: [7][0/25]	Time 0.755 (0.755)	Data 0.664 (0.664)	Loss 2.1243 (2.1243)	Acc@1 38.770 (38.770)	Acc@5 89.746 (89.746)

Epoch: [8 | 180] LR: 0.100000
Epoch: [8][0/25]	Time 0.674 (0.674)	Data 0.641 (0.641)	Loss 2.0263 (2.0263)	Acc@1 42.822 (42.822)	Acc@5 90.479 (90.479)

Epoch: [9 | 180] LR: 0.100000
Epoch: [9][0/25]	Time 0.714 (0.714)	Data 0.645 (0.645)	Loss 1.8826 (1.8826)	Acc@1 46.484 (46.484)	Acc@5 92.529 (92.529)

Epoch: [10 | 180] LR: 0.100000
Epoch: [10][0/25]	Time 0.760 (0.760)	Data 0.812 (0.812)	Loss 1.7663 (1.7663)	Acc@1 49.268 (49.268)	Acc@5 93.848 (93.848)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [11 | 180] LR: 0.100000
Epoch: [11][0/25]	Time 0.742 (0.742)	Data 0.687 (0.687)	Loss 1.6364 (1.6364)	Acc@1 54.443 (54.443)	Acc@5 94.775 (94.775)

Epoch: [12 | 180] LR: 0.100000
Epoch: [12][0/25]	Time 0.640 (0.640)	Data 0.623 (0.623)	Loss 1.5404 (1.5404)	Acc@1 58.398 (58.398)	Acc@5 95.215 (95.215)

Epoch: [13 | 180] LR: 0.100000
Epoch: [13][0/25]	Time 0.770 (0.770)	Data 0.627 (0.627)	Loss 1.3804 (1.3804)	Acc@1 61.816 (61.816)	Acc@5 95.557 (95.557)

Epoch: [14 | 180] LR: 0.100000
Epoch: [14][0/25]	Time 0.717 (0.717)	Data 0.646 (0.646)	Loss 1.2032 (1.2032)	Acc@1 68.066 (68.066)	Acc@5 97.754 (97.754)

Epoch: [15 | 180] LR: 0.100000
Epoch: [15][0/25]	Time 0.758 (0.758)	Data 0.677 (0.677)	Loss 1.1409 (1.1409)	Acc@1 71.240 (71.240)	Acc@5 97.803 (97.803)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [16 | 180] LR: 0.100000
Epoch: [16][0/25]	Time 0.702 (0.702)	Data 0.816 (0.816)	Loss 1.0478 (1.0478)	Acc@1 72.363 (72.363)	Acc@5 98.193 (98.193)

Epoch: [17 | 180] LR: 0.100000
Epoch: [17][0/25]	Time 0.747 (0.747)	Data 0.680 (0.680)	Loss 1.0170 (1.0170)	Acc@1 74.170 (74.170)	Acc@5 98.242 (98.242)

Epoch: [18 | 180] LR: 0.100000
Epoch: [18][0/25]	Time 0.748 (0.748)	Data 0.652 (0.652)	Loss 0.9447 (0.9447)	Acc@1 76.758 (76.758)	Acc@5 98.730 (98.730)

Epoch: [19 | 180] LR: 0.100000
Epoch: [19][0/25]	Time 0.720 (0.720)	Data 0.755 (0.755)	Loss 0.9313 (0.9313)	Acc@1 78.418 (78.418)	Acc@5 98.096 (98.096)

Epoch: [20 | 180] LR: 0.100000
Epoch: [20][0/25]	Time 0.754 (0.754)	Data 0.787 (0.787)	Loss 0.9118 (0.9118)	Acc@1 76.953 (76.953)	Acc@5 98.291 (98.291)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [21 | 180] LR: 0.100000
Epoch: [21][0/25]	Time 0.719 (0.719)	Data 0.671 (0.671)	Loss 0.8246 (0.8246)	Acc@1 80.322 (80.322)	Acc@5 98.877 (98.877)

Epoch: [22 | 180] LR: 0.100000
Epoch: [22][0/25]	Time 0.697 (0.697)	Data 0.719 (0.719)	Loss 0.8309 (0.8309)	Acc@1 79.443 (79.443)	Acc@5 98.779 (98.779)

Epoch: [23 | 180] LR: 0.100000
Epoch: [23][0/25]	Time 0.676 (0.676)	Data 0.667 (0.667)	Loss 0.8182 (0.8182)	Acc@1 81.055 (81.055)	Acc@5 98.779 (98.779)

Epoch: [24 | 180] LR: 0.100000
Epoch: [24][0/25]	Time 0.766 (0.766)	Data 0.674 (0.674)	Loss 0.7753 (0.7753)	Acc@1 81.055 (81.055)	Acc@5 98.926 (98.926)

Epoch: [25 | 180] LR: 0.100000
Epoch: [25][0/25]	Time 0.719 (0.719)	Data 0.786 (0.786)	Loss 0.7502 (0.7502)	Acc@1 83.008 (83.008)	Acc@5 99.121 (99.121)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [26 | 180] LR: 0.100000
Epoch: [26][0/25]	Time 0.684 (0.684)	Data 0.758 (0.758)	Loss 0.7217 (0.7217)	Acc@1 82.910 (82.910)	Acc@5 99.463 (99.463)

Epoch: [27 | 180] LR: 0.100000
Epoch: [27][0/25]	Time 0.744 (0.744)	Data 0.687 (0.687)	Loss 0.7182 (0.7182)	Acc@1 83.545 (83.545)	Acc@5 99.219 (99.219)

Epoch: [28 | 180] LR: 0.100000
Epoch: [28][0/25]	Time 0.700 (0.700)	Data 0.675 (0.675)	Loss 0.7561 (0.7561)	Acc@1 81.738 (81.738)	Acc@5 99.170 (99.170)

Epoch: [29 | 180] LR: 0.100000
Epoch: [29][0/25]	Time 0.597 (0.597)	Data 0.715 (0.715)	Loss 0.7319 (0.7319)	Acc@1 82.910 (82.910)	Acc@5 99.170 (99.170)

Epoch: [30 | 180] LR: 0.100000
Epoch: [30][0/25]	Time 0.745 (0.745)	Data 0.691 (0.691)	Loss 0.7290 (0.7290)	Acc@1 83.789 (83.789)	Acc@5 99.268 (99.268)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 485078 ; 487386 ; 0.9952645336550496

Epoch: [31 | 180] LR: 0.100000
Epoch: [31][0/25]	Time 0.746 (0.746)	Data 0.618 (0.618)	Loss 0.7052 (0.7052)	Acc@1 85.059 (85.059)	Acc@5 99.170 (99.170)

Epoch: [32 | 180] LR: 0.100000
Epoch: [32][0/25]	Time 0.717 (0.717)	Data 0.685 (0.685)	Loss 0.6544 (0.6544)	Acc@1 85.742 (85.742)	Acc@5 99.463 (99.463)

Epoch: [33 | 180] LR: 0.100000
Epoch: [33][0/25]	Time 0.780 (0.780)	Data 0.703 (0.703)	Loss 0.7049 (0.7049)	Acc@1 84.033 (84.033)	Acc@5 99.170 (99.170)

Epoch: [34 | 180] LR: 0.100000
Epoch: [34][0/25]	Time 0.773 (0.773)	Data 0.766 (0.766)	Loss 0.6929 (0.6929)	Acc@1 84.717 (84.717)	Acc@5 99.072 (99.072)

Epoch: [35 | 180] LR: 0.100000
Epoch: [35][0/25]	Time 0.777 (0.777)	Data 0.637 (0.637)	Loss 0.6580 (0.6580)	Acc@1 86.230 (86.230)	Acc@5 99.805 (99.805)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 58, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(58, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 479302 ; 487386 ; 0.9834135572215862

Epoch: [36 | 180] LR: 0.100000
Epoch: [36][0/25]	Time 0.746 (0.746)	Data 0.671 (0.671)	Loss 0.6008 (0.6008)	Acc@1 88.184 (88.184)	Acc@5 99.365 (99.365)

Epoch: [37 | 180] LR: 0.100000
Epoch: [37][0/25]	Time 0.747 (0.747)	Data 0.722 (0.722)	Loss 0.6310 (0.6310)	Acc@1 85.693 (85.693)	Acc@5 99.414 (99.414)

Epoch: [38 | 180] LR: 0.100000
Epoch: [38][0/25]	Time 0.731 (0.731)	Data 0.640 (0.640)	Loss 0.6452 (0.6452)	Acc@1 86.621 (86.621)	Acc@5 99.316 (99.316)

Epoch: [39 | 180] LR: 0.100000
Epoch: [39][0/25]	Time 0.680 (0.680)	Data 0.708 (0.708)	Loss 0.6598 (0.6598)	Acc@1 85.889 (85.889)	Acc@5 99.512 (99.512)

Epoch: [40 | 180] LR: 0.100000
Epoch: [40][0/25]	Time 0.740 (0.740)	Data 0.736 (0.736)	Loss 0.6387 (0.6387)	Acc@1 86.670 (86.670)	Acc@5 99.268 (99.268)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 46, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(46, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(46, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 58, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(58, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 457660 ; 487386 ; 0.9390093273093606

Epoch: [41 | 180] LR: 0.100000
Epoch: [41][0/25]	Time 0.699 (0.699)	Data 0.616 (0.616)	Loss 0.6425 (0.6425)	Acc@1 86.719 (86.719)	Acc@5 99.463 (99.463)

Epoch: [42 | 180] LR: 0.100000
Epoch: [42][0/25]	Time 0.797 (0.797)	Data 0.762 (0.762)	Loss 0.5893 (0.5893)	Acc@1 87.988 (87.988)	Acc@5 99.609 (99.609)

Epoch: [43 | 180] LR: 0.100000
Epoch: [43][0/25]	Time 0.710 (0.710)	Data 0.837 (0.837)	Loss 0.6391 (0.6391)	Acc@1 86.523 (86.523)	Acc@5 99.512 (99.512)

Epoch: [44 | 180] LR: 0.100000
Epoch: [44][0/25]	Time 0.711 (0.711)	Data 0.745 (0.745)	Loss 0.6258 (0.6258)	Acc@1 87.158 (87.158)	Acc@5 99.463 (99.463)

Epoch: [45 | 180] LR: 0.100000
Epoch: [45][0/25]	Time 0.695 (0.695)	Data 0.687 (0.687)	Loss 0.5958 (0.5958)	Acc@1 87.549 (87.549)	Acc@5 99.805 (99.805)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 33, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(33, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(33, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(56, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 438032 ; 487386 ; 0.898737345758803

Epoch: [46 | 180] LR: 0.100000
Epoch: [46][0/25]	Time 0.707 (0.707)	Data 0.694 (0.694)	Loss 0.6232 (0.6232)	Acc@1 87.256 (87.256)	Acc@5 99.268 (99.268)

Epoch: [47 | 180] LR: 0.100000
Epoch: [47][0/25]	Time 0.691 (0.691)	Data 0.718 (0.718)	Loss 0.5896 (0.5896)	Acc@1 87.939 (87.939)	Acc@5 99.902 (99.902)

Epoch: [48 | 180] LR: 0.100000
Epoch: [48][0/25]	Time 0.748 (0.748)	Data 0.758 (0.758)	Loss 0.6226 (0.6226)	Acc@1 86.963 (86.963)	Acc@5 99.512 (99.512)

Epoch: [49 | 180] LR: 0.100000
Epoch: [49][0/25]	Time 0.679 (0.679)	Data 0.731 (0.731)	Loss 0.6340 (0.6340)	Acc@1 86.914 (86.914)	Acc@5 99.219 (99.219)

Epoch: [50 | 180] LR: 0.100000
Epoch: [50][0/25]	Time 0.734 (0.734)	Data 0.657 (0.657)	Loss 0.6145 (0.6145)	Acc@1 87.109 (87.109)	Acc@5 99.609 (99.609)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(7, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(24, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 49, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(49, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(49, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 417830 ; 487386 ; 0.8572876529075517

Epoch: [51 | 180] LR: 0.100000
Epoch: [51][0/25]	Time 0.711 (0.711)	Data 0.647 (0.647)	Loss 0.6087 (0.6087)	Acc@1 87.451 (87.451)	Acc@5 99.658 (99.658)

Epoch: [52 | 180] LR: 0.100000
Epoch: [52][0/25]	Time 0.764 (0.764)	Data 0.858 (0.858)	Loss 0.5848 (0.5848)	Acc@1 87.988 (87.988)	Acc@5 99.561 (99.561)

Epoch: [53 | 180] LR: 0.100000
Epoch: [53][0/25]	Time 0.686 (0.686)	Data 0.745 (0.745)	Loss 0.6108 (0.6108)	Acc@1 87.939 (87.939)	Acc@5 99.463 (99.463)

Epoch: [54 | 180] LR: 0.100000
Epoch: [54][0/25]	Time 0.753 (0.753)	Data 0.689 (0.689)	Loss 0.6064 (0.6064)	Acc@1 87.891 (87.891)	Acc@5 99.756 (99.756)

Epoch: [55 | 180] LR: 0.100000
Epoch: [55][0/25]	Time 0.690 (0.690)	Data 0.735 (0.735)	Loss 0.5818 (0.5818)	Acc@1 88.721 (88.721)	Acc@5 99.756 (99.756)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(7, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(19, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 47, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(47, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(47, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 408304 ; 487386 ; 0.8377425695444678

Epoch: [56 | 180] LR: 0.100000
Epoch: [56][0/25]	Time 0.708 (0.708)	Data 0.739 (0.739)	Loss 0.5855 (0.5855)	Acc@1 88.867 (88.867)	Acc@5 99.805 (99.805)

Epoch: [57 | 180] LR: 0.100000
Epoch: [57][0/25]	Time 0.688 (0.688)	Data 0.834 (0.834)	Loss 0.5649 (0.5649)	Acc@1 88.281 (88.281)	Acc@5 99.756 (99.756)

Epoch: [58 | 180] LR: 0.100000
Epoch: [58][0/25]	Time 0.702 (0.702)	Data 0.836 (0.836)	Loss 0.5928 (0.5928)	Acc@1 87.744 (87.744)	Acc@5 99.316 (99.316)

Epoch: [59 | 180] LR: 0.100000
Epoch: [59][0/25]	Time 0.701 (0.701)	Data 0.620 (0.620)	Loss 0.6010 (0.6010)	Acc@1 87.646 (87.646)	Acc@5 99.561 (99.561)

Epoch: [60 | 180] LR: 0.100000
Epoch: [60][0/25]	Time 0.740 (0.740)	Data 0.634 (0.634)	Loss 0.6081 (0.6081)	Acc@1 87.549 (87.549)	Acc@5 99.316 (99.316)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(7, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(12, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 41, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(41, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(41, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 392434 ; 487386 ; 0.8051811090183141

Epoch: [61 | 180] LR: 0.100000
Epoch: [61][0/25]	Time 0.715 (0.715)	Data 0.713 (0.713)	Loss 0.5709 (0.5709)	Acc@1 88.574 (88.574)	Acc@5 99.707 (99.707)

Epoch: [62 | 180] LR: 0.100000
Epoch: [62][0/25]	Time 0.682 (0.682)	Data 0.628 (0.628)	Loss 0.5554 (0.5554)	Acc@1 89.502 (89.502)	Acc@5 99.512 (99.512)

Epoch: [63 | 180] LR: 0.100000
Epoch: [63][0/25]	Time 0.715 (0.715)	Data 0.672 (0.672)	Loss 0.5789 (0.5789)	Acc@1 87.695 (87.695)	Acc@5 99.561 (99.561)

Epoch: [64 | 180] LR: 0.100000
Epoch: [64][0/25]	Time 0.725 (0.725)	Data 0.697 (0.697)	Loss 0.5763 (0.5763)	Acc@1 88.965 (88.965)	Acc@5 99.561 (99.561)

Epoch: [65 | 180] LR: 0.100000
Epoch: [65][0/25]	Time 0.730 (0.730)	Data 0.673 (0.673)	Loss 0.5890 (0.5890)	Acc@1 87.793 (87.793)	Acc@5 99.414 (99.414)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(7, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(9, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 38, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(38, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(38, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 381752 ; 487386 ; 0.7832641889590591

Epoch: [66 | 180] LR: 0.100000
Epoch: [66][0/25]	Time 0.669 (0.669)	Data 0.647 (0.647)	Loss 0.5993 (0.5993)	Acc@1 87.744 (87.744)	Acc@5 99.512 (99.512)

Epoch: [67 | 180] LR: 0.100000
Epoch: [67][0/25]	Time 0.688 (0.688)	Data 0.823 (0.823)	Loss 0.5626 (0.5626)	Acc@1 89.307 (89.307)	Acc@5 99.316 (99.316)

Epoch: [68 | 180] LR: 0.100000
Epoch: [68][0/25]	Time 0.653 (0.653)	Data 0.709 (0.709)	Loss 0.5669 (0.5669)	Acc@1 88.770 (88.770)	Acc@5 99.316 (99.316)

Epoch: [69 | 180] LR: 0.100000
Epoch: [69][0/25]	Time 0.709 (0.709)	Data 0.788 (0.788)	Loss 0.5554 (0.5554)	Acc@1 89.453 (89.453)	Acc@5 99.658 (99.658)

Epoch: [70 | 180] LR: 0.100000
Epoch: [70][0/25]	Time 0.692 (0.692)	Data 0.610 (0.610)	Loss 0.5635 (0.5635)	Acc@1 88.916 (88.916)	Acc@5 99.365 (99.365)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 5, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(5, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(27, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(27, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(7, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 34, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(34, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(34, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 372514 ; 487386 ; 0.7643100130081701

Epoch: [71 | 180] LR: 0.100000
Epoch: [71][0/25]	Time 0.705 (0.705)	Data 0.656 (0.656)	Loss 0.5854 (0.5854)	Acc@1 87.598 (87.598)	Acc@5 99.658 (99.658)

Epoch: [72 | 180] LR: 0.100000
Epoch: [72][0/25]	Time 0.656 (0.656)	Data 0.716 (0.716)	Loss 0.5419 (0.5419)	Acc@1 89.502 (89.502)	Acc@5 99.512 (99.512)

Epoch: [73 | 180] LR: 0.100000
Epoch: [73][0/25]	Time 0.719 (0.719)	Data 0.650 (0.650)	Loss 0.5857 (0.5857)	Acc@1 88.379 (88.379)	Acc@5 99.805 (99.805)

Epoch: [74 | 180] LR: 0.100000
Epoch: [74][0/25]	Time 0.716 (0.716)	Data 0.670 (0.670)	Loss 0.5974 (0.5974)	Acc@1 87.695 (87.695)	Acc@5 99.463 (99.463)

Epoch: [75 | 180] LR: 0.100000
Epoch: [75][0/25]	Time 0.710 (0.710)	Data 0.637 (0.637)	Loss 0.5783 (0.5783)	Acc@1 88.428 (88.428)	Acc@5 99.658 (99.658)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 5, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(5, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(6, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(30, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 365010 ; 487386 ; 0.7489135921015376

Epoch: [76 | 180] LR: 0.100000
Epoch: [76][0/25]	Time 0.688 (0.688)	Data 0.663 (0.663)	Loss 0.5795 (0.5795)	Acc@1 88.428 (88.428)	Acc@5 99.658 (99.658)

Epoch: [77 | 180] LR: 0.100000
Epoch: [77][0/25]	Time 0.675 (0.675)	Data 0.663 (0.663)	Loss 0.5285 (0.5285)	Acc@1 89.844 (89.844)	Acc@5 99.658 (99.658)

Epoch: [78 | 180] LR: 0.100000
Epoch: [78][0/25]	Time 0.689 (0.689)	Data 0.801 (0.801)	Loss 0.5724 (0.5724)	Acc@1 88.721 (88.721)	Acc@5 99.756 (99.756)

Epoch: [79 | 180] LR: 0.100000
Epoch: [79][0/25]	Time 0.718 (0.718)	Data 0.625 (0.625)	Loss 0.5776 (0.5776)	Acc@1 88.379 (88.379)	Acc@5 99.561 (99.561)

Epoch: [80 | 180] LR: 0.100000
Epoch: [80][0/25]	Time 0.660 (0.660)	Data 0.727 (0.727)	Loss 0.5918 (0.5918)	Acc@1 87.402 (87.402)	Acc@5 99.609 (99.609)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 5, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(5, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(20, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(4, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(27, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(27, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 356928 ; 487386 ; 0.7323312528468195

Epoch: [81 | 180] LR: 0.100000
Epoch: [81][0/25]	Time 0.669 (0.669)	Data 0.731 (0.731)	Loss 0.5617 (0.5617)	Acc@1 89.160 (89.160)	Acc@5 99.756 (99.756)

Epoch: [82 | 180] LR: 0.100000
Epoch: [82][0/25]	Time 0.686 (0.686)	Data 0.630 (0.630)	Loss 0.5474 (0.5474)	Acc@1 89.209 (89.209)	Acc@5 99.756 (99.756)

Epoch: [83 | 180] LR: 0.100000
Epoch: [83][0/25]	Time 0.720 (0.720)	Data 0.716 (0.716)	Loss 0.5447 (0.5447)	Acc@1 89.404 (89.404)	Acc@5 99.902 (99.902)

Epoch: [84 | 180] LR: 0.100000
Epoch: [84][0/25]	Time 0.675 (0.675)	Data 0.778 (0.778)	Loss 0.5517 (0.5517)	Acc@1 89.697 (89.697)	Acc@5 99.512 (99.512)

Epoch: [85 | 180] LR: 0.100000
Epoch: [85][0/25]	Time 0.698 (0.698)	Data 0.712 (0.712)	Loss 0.5656 (0.5656)	Acc@1 88.623 (88.623)	Acc@5 99.756 (99.756)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 5, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(5, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(18, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(23, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(4, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(26, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 352452 ; 487386 ; 0.7231475668156245

Epoch: [86 | 180] LR: 0.100000
Epoch: [86][0/25]	Time 0.738 (0.738)	Data 0.644 (0.644)	Loss 0.5708 (0.5708)	Acc@1 89.062 (89.062)	Acc@5 99.561 (99.561)

Epoch: [87 | 180] LR: 0.100000
Epoch: [87][0/25]	Time 0.716 (0.716)	Data 0.723 (0.723)	Loss 0.5181 (0.5181)	Acc@1 89.893 (89.893)	Acc@5 99.805 (99.805)

Epoch: [88 | 180] LR: 0.100000
Epoch: [88][0/25]	Time 0.703 (0.703)	Data 0.669 (0.669)	Loss 0.5181 (0.5181)	Acc@1 90.625 (90.625)	Acc@5 99.561 (99.561)

Epoch: [89 | 180] LR: 0.100000
Epoch: [89][0/25]	Time 0.729 (0.729)	Data 0.733 (0.733)	Loss 0.5556 (0.5556)	Acc@1 89.453 (89.453)	Acc@5 99.805 (99.805)

Epoch: [90 | 180] LR: 0.100000
Epoch: [90][0/25]	Time 0.686 (0.686)	Data 0.639 (0.639)	Loss 0.5938 (0.5938)	Acc@1 87.305 (87.305)	Acc@5 99.707 (99.707)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 5, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(5, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(24, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 346966 ; 487386 ; 0.7118916013180518

Epoch: [91 | 180] LR: 0.100000
Epoch: [91][0/25]	Time 0.724 (0.724)	Data 0.632 (0.632)	Loss 0.5605 (0.5605)	Acc@1 88.818 (88.818)	Acc@5 99.854 (99.854)

Epoch: [92 | 180] LR: 0.100000
Epoch: [92][0/25]	Time 0.642 (0.642)	Data 0.657 (0.657)	Loss 0.5532 (0.5532)	Acc@1 88.916 (88.916)	Acc@5 99.805 (99.805)

Epoch: [93 | 180] LR: 0.040000
Epoch: [93][0/25]	Time 0.718 (0.718)	Data 0.656 (0.656)	Loss 0.5792 (0.5792)	Acc@1 88.477 (88.477)	Acc@5 99.658 (99.658)

Epoch: [94 | 180] LR: 0.040000
Epoch: [94][0/25]	Time 0.659 (0.659)	Data 0.659 (0.659)	Loss 0.4230 (0.4230)	Acc@1 94.238 (94.238)	Acc@5 99.902 (99.902)

Epoch: [95 | 180] LR: 0.040000
Epoch: [95][0/25]	Time 0.699 (0.699)	Data 0.725 (0.725)	Loss 0.4326 (0.4326)	Acc@1 93.555 (93.555)	Acc@5 99.805 (99.805)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(21, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(22, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 342058 ; 487386 ; 0.7018215541685645

Epoch: [96 | 180] LR: 0.040000
Epoch: [96][0/25]	Time 0.627 (0.627)	Data 0.705 (0.705)	Loss 0.3837 (0.3837)	Acc@1 95.264 (95.264)	Acc@5 99.756 (99.756)

Epoch: [97 | 180] LR: 0.040000
Epoch: [97][0/25]	Time 0.704 (0.704)	Data 0.700 (0.700)	Loss 0.3800 (0.3800)	Acc@1 95.166 (95.166)	Acc@5 99.805 (99.805)

Epoch: [98 | 180] LR: 0.040000
Epoch: [98][0/25]	Time 0.705 (0.705)	Data 0.708 (0.708)	Loss 0.3672 (0.3672)	Acc@1 95.068 (95.068)	Acc@5 99.951 (99.951)

Epoch: [99 | 180] LR: 0.040000
Epoch: [99][0/25]	Time 0.703 (0.703)	Data 0.710 (0.710)	Loss 0.3509 (0.3509)	Acc@1 96.094 (96.094)	Acc@5 99.902 (99.902)

Epoch: [100 | 180] LR: 0.040000
Epoch: [100][0/25]	Time 0.720 (0.720)	Data 0.641 (0.641)	Loss 0.3468 (0.3468)	Acc@1 95.996 (95.996)	Acc@5 99.902 (99.902)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(21, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(22, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [101 | 180] LR: 0.040000
Epoch: [101][0/25]	Time 0.632 (0.632)	Data 0.677 (0.677)	Loss 0.3209 (0.3209)	Acc@1 97.021 (97.021)	Acc@5 100.000 (100.000)

Epoch: [102 | 180] LR: 0.040000
Epoch: [102][0/25]	Time 0.665 (0.665)	Data 0.735 (0.735)	Loss 0.3328 (0.3328)	Acc@1 96.533 (96.533)	Acc@5 100.000 (100.000)

Epoch: [103 | 180] LR: 0.040000
Epoch: [103][0/25]	Time 0.661 (0.661)	Data 0.820 (0.820)	Loss 0.3561 (0.3561)	Acc@1 95.605 (95.605)	Acc@5 99.707 (99.707)

Epoch: [104 | 180] LR: 0.040000
Epoch: [104][0/25]	Time 0.740 (0.740)	Data 0.738 (0.738)	Loss 0.3204 (0.3204)	Acc@1 96.582 (96.582)	Acc@5 99.854 (99.854)

Epoch: [105 | 180] LR: 0.040000
Epoch: [105][0/25]	Time 0.679 (0.679)	Data 0.674 (0.674)	Loss 0.3100 (0.3100)	Acc@1 96.631 (96.631)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(21, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(22, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [106 | 180] LR: 0.040000
Epoch: [106][0/25]	Time 0.714 (0.714)	Data 0.825 (0.825)	Loss 0.2955 (0.2955)	Acc@1 97.510 (97.510)	Acc@5 100.000 (100.000)

Epoch: [107 | 180] LR: 0.040000
Epoch: [107][0/25]	Time 0.710 (0.710)	Data 0.756 (0.756)	Loss 0.2892 (0.2892)	Acc@1 97.656 (97.656)	Acc@5 99.951 (99.951)

Epoch: [108 | 180] LR: 0.040000
Epoch: [108][0/25]	Time 0.627 (0.627)	Data 0.815 (0.815)	Loss 0.2864 (0.2864)	Acc@1 97.607 (97.607)	Acc@5 99.951 (99.951)

Epoch: [109 | 180] LR: 0.040000
Epoch: [109][0/25]	Time 0.713 (0.713)	Data 0.672 (0.672)	Loss 0.2995 (0.2995)	Acc@1 96.826 (96.826)	Acc@5 99.902 (99.902)

Epoch: [110 | 180] LR: 0.040000
Epoch: [110][0/25]	Time 0.645 (0.645)	Data 0.617 (0.617)	Loss 0.2856 (0.2856)	Acc@1 97.852 (97.852)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(21, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(22, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [111 | 180] LR: 0.040000
Epoch: [111][0/25]	Time 0.687 (0.687)	Data 0.729 (0.729)	Loss 0.2889 (0.2889)	Acc@1 97.559 (97.559)	Acc@5 99.902 (99.902)

Epoch: [112 | 180] LR: 0.040000
Epoch: [112][0/25]	Time 0.695 (0.695)	Data 0.760 (0.760)	Loss 0.2823 (0.2823)	Acc@1 97.607 (97.607)	Acc@5 99.854 (99.854)

Epoch: [113 | 180] LR: 0.040000
Epoch: [113][0/25]	Time 0.705 (0.705)	Data 0.688 (0.688)	Loss 0.2831 (0.2831)	Acc@1 97.314 (97.314)	Acc@5 100.000 (100.000)

Epoch: [114 | 180] LR: 0.040000
Epoch: [114][0/25]	Time 0.779 (0.779)	Data 0.746 (0.746)	Loss 0.2711 (0.2711)	Acc@1 97.900 (97.900)	Acc@5 99.951 (99.951)

Epoch: [115 | 180] LR: 0.040000
Epoch: [115][0/25]	Time 0.668 (0.668)	Data 0.744 (0.744)	Loss 0.2599 (0.2599)	Acc@1 97.949 (97.949)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(21, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(22, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [116 | 180] LR: 0.040000
Epoch: [116][0/25]	Time 0.670 (0.670)	Data 0.827 (0.827)	Loss 0.2580 (0.2580)	Acc@1 97.998 (97.998)	Acc@5 100.000 (100.000)

Epoch: [117 | 180] LR: 0.040000
Epoch: [117][0/25]	Time 0.670 (0.670)	Data 0.678 (0.678)	Loss 0.2627 (0.2627)	Acc@1 97.705 (97.705)	Acc@5 99.951 (99.951)

Epoch: [118 | 180] LR: 0.040000
Epoch: [118][0/25]	Time 0.708 (0.708)	Data 0.659 (0.659)	Loss 0.2586 (0.2586)	Acc@1 97.803 (97.803)	Acc@5 100.000 (100.000)

Epoch: [119 | 180] LR: 0.040000
Epoch: [119][0/25]	Time 0.674 (0.674)	Data 0.745 (0.745)	Loss 0.2505 (0.2505)	Acc@1 98.242 (98.242)	Acc@5 100.000 (100.000)

Epoch: [120 | 180] LR: 0.040000
Epoch: [120][0/25]	Time 0.702 (0.702)	Data 0.655 (0.655)	Loss 0.2518 (0.2518)	Acc@1 98.145 (98.145)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(21, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(22, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [121 | 180] LR: 0.040000
Epoch: [121][0/25]	Time 0.672 (0.672)	Data 0.724 (0.724)	Loss 0.2421 (0.2421)	Acc@1 98.389 (98.389)	Acc@5 100.000 (100.000)

Epoch: [122 | 180] LR: 0.040000
Epoch: [122][0/25]	Time 0.715 (0.715)	Data 0.662 (0.662)	Loss 0.2427 (0.2427)	Acc@1 98.096 (98.096)	Acc@5 100.000 (100.000)

Epoch: [123 | 180] LR: 0.040000
Epoch: [123][0/25]	Time 0.670 (0.670)	Data 0.615 (0.615)	Loss 0.2454 (0.2454)	Acc@1 98.242 (98.242)	Acc@5 100.000 (100.000)

Epoch: [124 | 180] LR: 0.040000
Epoch: [124][0/25]	Time 0.596 (0.596)	Data 0.705 (0.705)	Loss 0.2470 (0.2470)	Acc@1 97.949 (97.949)	Acc@5 99.854 (99.854)

Epoch: [125 | 180] LR: 0.040000
Epoch: [125][0/25]	Time 0.652 (0.652)	Data 0.792 (0.792)	Loss 0.2368 (0.2368)	Acc@1 98.340 (98.340)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(21, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(22, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [126 | 180] LR: 0.040000
Epoch: [126][0/25]	Time 0.648 (0.648)	Data 0.772 (0.772)	Loss 0.2525 (0.2525)	Acc@1 97.705 (97.705)	Acc@5 99.951 (99.951)

Epoch: [127 | 180] LR: 0.040000
Epoch: [127][0/25]	Time 0.622 (0.622)	Data 0.663 (0.663)	Loss 0.2199 (0.2199)	Acc@1 98.877 (98.877)	Acc@5 100.000 (100.000)

Epoch: [128 | 180] LR: 0.040000
Epoch: [128][0/25]	Time 0.703 (0.703)	Data 0.643 (0.643)	Loss 0.2360 (0.2360)	Acc@1 98.145 (98.145)	Acc@5 100.000 (100.000)

Epoch: [129 | 180] LR: 0.040000
Epoch: [129][0/25]	Time 0.709 (0.709)	Data 0.710 (0.710)	Loss 0.2411 (0.2411)	Acc@1 97.900 (97.900)	Acc@5 100.000 (100.000)

Epoch: [130 | 180] LR: 0.040000
Epoch: [130][0/25]	Time 0.645 (0.645)	Data 0.642 (0.642)	Loss 0.2409 (0.2409)	Acc@1 97.607 (97.607)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(21, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(22, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [131 | 180] LR: 0.040000
Epoch: [131][0/25]	Time 0.694 (0.694)	Data 0.637 (0.637)	Loss 0.2285 (0.2285)	Acc@1 98.291 (98.291)	Acc@5 100.000 (100.000)

Epoch: [132 | 180] LR: 0.040000
Epoch: [132][0/25]	Time 0.684 (0.684)	Data 0.728 (0.728)	Loss 0.2259 (0.2259)	Acc@1 98.291 (98.291)	Acc@5 100.000 (100.000)

Epoch: [133 | 180] LR: 0.040000
Epoch: [133][0/25]	Time 0.689 (0.689)	Data 0.687 (0.687)	Loss 0.2179 (0.2179)	Acc@1 98.584 (98.584)	Acc@5 100.000 (100.000)

Epoch: [134 | 180] LR: 0.040000
Epoch: [134][0/25]	Time 0.663 (0.663)	Data 0.662 (0.662)	Loss 0.2368 (0.2368)	Acc@1 97.998 (97.998)	Acc@5 99.854 (99.854)

Epoch: [135 | 180] LR: 0.040000
Epoch: [135][0/25]	Time 0.672 (0.672)	Data 0.660 (0.660)	Loss 0.2312 (0.2312)	Acc@1 98.193 (98.193)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(21, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(22, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [136 | 180] LR: 0.040000
Epoch: [136][0/25]	Time 0.722 (0.722)	Data 0.609 (0.609)	Loss 0.2294 (0.2294)	Acc@1 97.852 (97.852)	Acc@5 100.000 (100.000)

Epoch: [137 | 180] LR: 0.040000
Epoch: [137][0/25]	Time 0.654 (0.654)	Data 0.671 (0.671)	Loss 0.2319 (0.2319)	Acc@1 97.754 (97.754)	Acc@5 99.951 (99.951)

Epoch: [138 | 180] LR: 0.040000
Epoch: [138][0/25]	Time 0.692 (0.692)	Data 0.706 (0.706)	Loss 0.2004 (0.2004)	Acc@1 99.072 (99.072)	Acc@5 100.000 (100.000)

Epoch: [139 | 180] LR: 0.040000
Epoch: [139][0/25]	Time 0.711 (0.711)	Data 0.650 (0.650)	Loss 0.2368 (0.2368)	Acc@1 97.754 (97.754)	Acc@5 100.000 (100.000)

Epoch: [140 | 180] LR: 0.040000
Epoch: [140][0/25]	Time 0.740 (0.740)	Data 0.676 (0.676)	Loss 0.2169 (0.2169)	Acc@1 98.486 (98.486)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(21, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(22, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [141 | 180] LR: 0.040000
Epoch: [141][0/25]	Time 0.685 (0.685)	Data 0.727 (0.727)	Loss 0.2320 (0.2320)	Acc@1 97.559 (97.559)	Acc@5 100.000 (100.000)

Epoch: [142 | 180] LR: 0.040000
Epoch: [142][0/25]	Time 0.709 (0.709)	Data 0.645 (0.645)	Loss 0.2175 (0.2175)	Acc@1 98.096 (98.096)	Acc@5 100.000 (100.000)

Epoch: [143 | 180] LR: 0.040000
Epoch: [143][0/25]	Time 0.659 (0.659)	Data 0.718 (0.718)	Loss 0.2054 (0.2054)	Acc@1 98.389 (98.389)	Acc@5 100.000 (100.000)

Epoch: [144 | 180] LR: 0.040000
Epoch: [144][0/25]	Time 0.737 (0.737)	Data 0.687 (0.687)	Loss 0.2169 (0.2169)	Acc@1 98.096 (98.096)	Acc@5 100.000 (100.000)

Epoch: [145 | 180] LR: 0.040000
Epoch: [145][0/25]	Time 0.723 (0.723)	Data 0.661 (0.661)	Loss 0.2253 (0.2253)	Acc@1 97.656 (97.656)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(21, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(22, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [146 | 180] LR: 0.040000
Epoch: [146][0/25]	Time 0.640 (0.640)	Data 0.667 (0.667)	Loss 0.2190 (0.2190)	Acc@1 98.096 (98.096)	Acc@5 99.951 (99.951)

Epoch: [147 | 180] LR: 0.040000
Epoch: [147][0/25]	Time 0.723 (0.723)	Data 0.688 (0.688)	Loss 0.2199 (0.2199)	Acc@1 97.803 (97.803)	Acc@5 100.000 (100.000)

Epoch: [148 | 180] LR: 0.040000
Epoch: [148][0/25]	Time 0.732 (0.732)	Data 0.728 (0.728)	Loss 0.1999 (0.1999)	Acc@1 98.633 (98.633)	Acc@5 100.000 (100.000)

Epoch: [149 | 180] LR: 0.040000
Epoch: [149][0/25]	Time 0.654 (0.654)	Data 0.847 (0.847)	Loss 0.2225 (0.2225)	Acc@1 97.363 (97.363)	Acc@5 100.000 (100.000)

Epoch: [150 | 180] LR: 0.000400
Epoch: [150][0/25]	Time 0.738 (0.738)	Data 0.627 (0.627)	Loss 0.2292 (0.2292)	Acc@1 97.266 (97.266)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(21, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(22, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [151 | 180] LR: 0.000400
Epoch: [151][0/25]	Time 0.659 (0.659)	Data 0.831 (0.831)	Loss 0.2121 (0.2121)	Acc@1 98.389 (98.389)	Acc@5 100.000 (100.000)

Epoch: [152 | 180] LR: 0.000400
Epoch: [152][0/25]	Time 0.687 (0.687)	Data 0.696 (0.696)	Loss 0.2004 (0.2004)	Acc@1 98.682 (98.682)	Acc@5 99.951 (99.951)

Epoch: [153 | 180] LR: 0.000400
Epoch: [153][0/25]	Time 0.605 (0.605)	Data 0.668 (0.668)	Loss 0.2028 (0.2028)	Acc@1 98.584 (98.584)	Acc@5 100.000 (100.000)

Epoch: [154 | 180] LR: 0.000400
Epoch: [154][0/25]	Time 0.679 (0.679)	Data 0.692 (0.692)	Loss 0.2018 (0.2018)	Acc@1 98.389 (98.389)	Acc@5 100.000 (100.000)

Epoch: [155 | 180] LR: 0.000400
Epoch: [155][0/25]	Time 0.591 (0.591)	Data 0.648 (0.648)	Loss 0.1987 (0.1987)	Acc@1 98.877 (98.877)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(21, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(22, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [156 | 180] LR: 0.000400
Epoch: [156][0/25]	Time 0.724 (0.724)	Data 0.729 (0.729)	Loss 0.2034 (0.2034)	Acc@1 98.438 (98.438)	Acc@5 100.000 (100.000)

Epoch: [157 | 180] LR: 0.000400
Epoch: [157][0/25]	Time 0.704 (0.704)	Data 0.693 (0.693)	Loss 0.1887 (0.1887)	Acc@1 99.023 (99.023)	Acc@5 100.000 (100.000)

Epoch: [158 | 180] LR: 0.000400
Epoch: [158][0/25]	Time 0.676 (0.676)	Data 0.767 (0.767)	Loss 0.1902 (0.1902)	Acc@1 99.072 (99.072)	Acc@5 100.000 (100.000)

Epoch: [159 | 180] LR: 0.000400
Epoch: [159][0/25]	Time 0.685 (0.685)	Data 0.696 (0.696)	Loss 0.1888 (0.1888)	Acc@1 99.072 (99.072)	Acc@5 100.000 (100.000)

Epoch: [160 | 180] LR: 0.000400
Epoch: [160][0/25]	Time 0.684 (0.684)	Data 0.754 (0.754)	Loss 0.1982 (0.1982)	Acc@1 98.633 (98.633)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(21, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(22, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [161 | 180] LR: 0.000400
Epoch: [161][0/25]	Time 0.611 (0.611)	Data 0.695 (0.695)	Loss 0.1876 (0.1876)	Acc@1 99.072 (99.072)	Acc@5 100.000 (100.000)

Epoch: [162 | 180] LR: 0.000400
Epoch: [162][0/25]	Time 0.677 (0.677)	Data 0.757 (0.757)	Loss 0.1919 (0.1919)	Acc@1 98.975 (98.975)	Acc@5 100.000 (100.000)

Epoch: [163 | 180] LR: 0.000400
Epoch: [163][0/25]	Time 0.670 (0.670)	Data 0.683 (0.683)	Loss 0.1984 (0.1984)	Acc@1 98.682 (98.682)	Acc@5 100.000 (100.000)

Epoch: [164 | 180] LR: 0.000400
Epoch: [164][0/25]	Time 0.725 (0.725)	Data 0.690 (0.690)	Loss 0.1923 (0.1923)	Acc@1 98.877 (98.877)	Acc@5 99.951 (99.951)

Epoch: [165 | 180] LR: 0.000400
Epoch: [165][0/25]	Time 0.715 (0.715)	Data 0.743 (0.743)	Loss 0.1897 (0.1897)	Acc@1 99.121 (99.121)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(21, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(21, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 340904 ; 487386 ; 0.6994538209960893

Epoch: [166 | 180] LR: 0.000400
Epoch: [166][0/25]	Time 0.680 (0.680)	Data 0.774 (0.774)	Loss 0.1920 (0.1920)	Acc@1 98.975 (98.975)	Acc@5 100.000 (100.000)

Epoch: [167 | 180] LR: 0.000400
Epoch: [167][0/25]	Time 0.631 (0.631)	Data 0.846 (0.846)	Loss 0.1897 (0.1897)	Acc@1 99.023 (99.023)	Acc@5 100.000 (100.000)

Epoch: [168 | 180] LR: 0.000400
Epoch: [168][0/25]	Time 0.630 (0.630)	Data 0.737 (0.737)	Loss 0.1841 (0.1841)	Acc@1 99.219 (99.219)	Acc@5 100.000 (100.000)

Epoch: [169 | 180] LR: 0.000400
Epoch: [169][0/25]	Time 0.675 (0.675)	Data 0.751 (0.751)	Loss 0.1839 (0.1839)	Acc@1 99.121 (99.121)	Acc@5 100.000 (100.000)

Epoch: [170 | 180] LR: 0.000400
Epoch: [170][0/25]	Time 0.714 (0.714)	Data 0.721 (0.721)	Loss 0.1859 (0.1859)	Acc@1 99.072 (99.072)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(21, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(21, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [171 | 180] LR: 0.000400
Epoch: [171][0/25]	Time 0.669 (0.669)	Data 0.777 (0.777)	Loss 0.1873 (0.1873)	Acc@1 99.072 (99.072)	Acc@5 100.000 (100.000)

Epoch: [172 | 180] LR: 0.000400
Epoch: [172][0/25]	Time 0.704 (0.704)	Data 0.707 (0.707)	Loss 0.1798 (0.1798)	Acc@1 99.268 (99.268)	Acc@5 100.000 (100.000)

Epoch: [173 | 180] LR: 0.000400
Epoch: [173][0/25]	Time 0.692 (0.692)	Data 0.769 (0.769)	Loss 0.1867 (0.1867)	Acc@1 99.121 (99.121)	Acc@5 100.000 (100.000)

Epoch: [174 | 180] LR: 0.000400
Epoch: [174][0/25]	Time 0.721 (0.721)	Data 0.704 (0.704)	Loss 0.1857 (0.1857)	Acc@1 99.268 (99.268)	Acc@5 100.000 (100.000)

Epoch: [175 | 180] LR: 0.000400
Epoch: [175][0/25]	Time 0.650 (0.650)	Data 0.801 (0.801)	Loss 0.1936 (0.1936)	Acc@1 99.023 (99.023)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(21, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(21, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [176 | 180] LR: 0.000400
Epoch: [176][0/25]	Time 0.727 (0.727)	Data 0.710 (0.710)	Loss 0.1905 (0.1905)	Acc@1 99.023 (99.023)	Acc@5 100.000 (100.000)

Epoch: [177 | 180] LR: 0.000400
Epoch: [177][0/25]	Time 0.714 (0.714)	Data 0.757 (0.757)	Loss 0.1853 (0.1853)	Acc@1 99.316 (99.316)	Acc@5 100.000 (100.000)

Epoch: [178 | 180] LR: 0.000400
Epoch: [178][0/25]	Time 0.663 (0.663)	Data 0.849 (0.849)	Loss 0.1900 (0.1900)	Acc@1 99.170 (99.170)	Acc@5 100.000 (100.000)

Epoch: [179 | 180] LR: 0.000400
Epoch: [179][0/25]	Time 0.692 (0.692)	Data 0.703 (0.703)	Loss 0.1768 (0.1768)	Acc@1 99.561 (99.561)	Acc@5 100.000 (100.000)

Epoch: [180 | 180] LR: 0.000400
Epoch: [180][0/25]	Time 0.727 (0.727)	Data 0.648 (0.648)	Loss 0.1842 (0.1842)	Acc@1 99.414 (99.414)	Acc@5 100.000 (100.000)

  2048
  91.83
 15.808s  no display found. Using non-interactive Agg backend
[5, 5, 5]
Cifar10: True; cifar100: False
False
Files already downloaded and verified

Arch Num:  [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
count0: 487386

Epoch: [1 | 180] LR: 0.100000
Epoch: [1][0/25]	Time 0.796 (0.796)	Data 0.759 (0.759)	Loss 3.4117 (3.4117)	Acc@1 9.326 (9.326)	Acc@5 50.684 (50.684)

Epoch: [2 | 180] LR: 0.100000
Epoch: [2][0/25]	Time 0.698 (0.698)	Data 0.843 (0.843)	Loss 3.0045 (3.0045)	Acc@1 12.500 (12.500)	Acc@5 53.955 (53.955)

Epoch: [3 | 180] LR: 0.100000
Epoch: [3][0/25]	Time 0.734 (0.734)	Data 0.822 (0.822)	Loss 2.8575 (2.8575)	Acc@1 17.090 (17.090)	Acc@5 67.041 (67.041)

Epoch: [4 | 180] LR: 0.100000
Epoch: [4][0/25]	Time 0.712 (0.712)	Data 0.709 (0.709)	Loss 2.7016 (2.7016)	Acc@1 22.510 (22.510)	Acc@5 74.756 (74.756)

Epoch: [5 | 180] LR: 0.100000
Epoch: [5][0/25]	Time 0.759 (0.759)	Data 0.781 (0.781)	Loss 2.5629 (2.5629)	Acc@1 24.365 (24.365)	Acc@5 79.883 (79.883)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [6 | 180] LR: 0.100000
Epoch: [6][0/25]	Time 0.761 (0.761)	Data 0.831 (0.831)	Loss 2.3936 (2.3936)	Acc@1 29.541 (29.541)	Acc@5 81.787 (81.787)

Epoch: [7 | 180] LR: 0.100000
Epoch: [7][0/25]	Time 0.783 (0.783)	Data 0.832 (0.832)	Loss 2.2731 (2.2731)	Acc@1 32.031 (32.031)	Acc@5 86.377 (86.377)

Epoch: [8 | 180] LR: 0.100000
Epoch: [8][0/25]	Time 0.749 (0.749)	Data 0.683 (0.683)	Loss 2.1128 (2.1128)	Acc@1 37.988 (37.988)	Acc@5 90.137 (90.137)

Epoch: [9 | 180] LR: 0.100000
Epoch: [9][0/25]	Time 0.717 (0.717)	Data 0.864 (0.864)	Loss 1.9400 (1.9400)	Acc@1 41.650 (41.650)	Acc@5 90.820 (90.820)

Epoch: [10 | 180] LR: 0.100000
Epoch: [10][0/25]	Time 0.770 (0.770)	Data 0.830 (0.830)	Loss 1.7323 (1.7323)	Acc@1 49.365 (49.365)	Acc@5 93.799 (93.799)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [11 | 180] LR: 0.100000
Epoch: [11][0/25]	Time 0.738 (0.738)	Data 0.727 (0.727)	Loss 1.5859 (1.5859)	Acc@1 53.125 (53.125)	Acc@5 94.531 (94.531)

Epoch: [12 | 180] LR: 0.100000
Epoch: [12][0/25]	Time 0.772 (0.772)	Data 0.677 (0.677)	Loss 1.4216 (1.4216)	Acc@1 61.084 (61.084)	Acc@5 95.947 (95.947)

Epoch: [13 | 180] LR: 0.100000
Epoch: [13][0/25]	Time 0.710 (0.710)	Data 0.724 (0.724)	Loss 1.2637 (1.2637)	Acc@1 65.820 (65.820)	Acc@5 97.119 (97.119)

Epoch: [14 | 180] LR: 0.100000
Epoch: [14][0/25]	Time 0.765 (0.765)	Data 0.637 (0.637)	Loss 1.1484 (1.1484)	Acc@1 68.115 (68.115)	Acc@5 98.193 (98.193)

Epoch: [15 | 180] LR: 0.100000
Epoch: [15][0/25]	Time 0.751 (0.751)	Data 0.739 (0.739)	Loss 1.0349 (1.0349)	Acc@1 74.072 (74.072)	Acc@5 98.047 (98.047)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [16 | 180] LR: 0.100000
Epoch: [16][0/25]	Time 0.718 (0.718)	Data 0.703 (0.703)	Loss 0.9445 (0.9445)	Acc@1 76.758 (76.758)	Acc@5 98.438 (98.438)

Epoch: [17 | 180] LR: 0.100000
Epoch: [17][0/25]	Time 0.713 (0.713)	Data 0.741 (0.741)	Loss 0.8979 (0.8979)	Acc@1 78.662 (78.662)	Acc@5 98.877 (98.877)

Epoch: [18 | 180] LR: 0.100000
Epoch: [18][0/25]	Time 0.739 (0.739)	Data 0.678 (0.678)	Loss 0.8756 (0.8756)	Acc@1 79.004 (79.004)	Acc@5 98.779 (98.779)

Epoch: [19 | 180] LR: 0.100000
Epoch: [19][0/25]	Time 0.737 (0.737)	Data 0.758 (0.758)	Loss 0.8184 (0.8184)	Acc@1 81.299 (81.299)	Acc@5 98.730 (98.730)

Epoch: [20 | 180] LR: 0.100000
Epoch: [20][0/25]	Time 0.764 (0.764)	Data 0.666 (0.666)	Loss 0.8017 (0.8017)	Acc@1 80.908 (80.908)	Acc@5 99.414 (99.414)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [21 | 180] LR: 0.100000
Epoch: [21][0/25]	Time 0.749 (0.749)	Data 0.818 (0.818)	Loss 0.7745 (0.7745)	Acc@1 81.592 (81.592)	Acc@5 98.682 (98.682)

Epoch: [22 | 180] LR: 0.100000
Epoch: [22][0/25]	Time 0.722 (0.722)	Data 0.725 (0.725)	Loss 0.7269 (0.7269)	Acc@1 82.617 (82.617)	Acc@5 99.365 (99.365)

Epoch: [23 | 180] LR: 0.100000
Epoch: [23][0/25]	Time 0.660 (0.660)	Data 0.725 (0.725)	Loss 0.7519 (0.7519)	Acc@1 83.740 (83.740)	Acc@5 98.633 (98.633)

Epoch: [24 | 180] LR: 0.100000
Epoch: [24][0/25]	Time 0.775 (0.775)	Data 0.792 (0.792)	Loss 0.7271 (0.7271)	Acc@1 83.350 (83.350)	Acc@5 99.072 (99.072)

Epoch: [25 | 180] LR: 0.100000
Epoch: [25][0/25]	Time 0.692 (0.692)	Data 0.841 (0.841)	Loss 0.7212 (0.7212)	Acc@1 83.838 (83.838)	Acc@5 99.365 (99.365)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [26 | 180] LR: 0.100000
Epoch: [26][0/25]	Time 0.732 (0.732)	Data 0.845 (0.845)	Loss 0.7042 (0.7042)	Acc@1 83.350 (83.350)	Acc@5 99.316 (99.316)

Epoch: [27 | 180] LR: 0.100000
Epoch: [27][0/25]	Time 0.721 (0.721)	Data 0.713 (0.713)	Loss 0.6498 (0.6498)	Acc@1 85.498 (85.498)	Acc@5 99.561 (99.561)

Epoch: [28 | 180] LR: 0.100000
Epoch: [28][0/25]	Time 0.769 (0.769)	Data 0.779 (0.779)	Loss 0.6552 (0.6552)	Acc@1 86.084 (86.084)	Acc@5 99.365 (99.365)

Epoch: [29 | 180] LR: 0.100000
Epoch: [29][0/25]	Time 0.738 (0.738)	Data 0.841 (0.841)	Loss 0.7085 (0.7085)	Acc@1 84.033 (84.033)	Acc@5 99.268 (99.268)

Epoch: [30 | 180] LR: 0.100000
Epoch: [30][0/25]	Time 0.762 (0.762)	Data 0.681 (0.681)	Loss 0.6624 (0.6624)	Acc@1 86.035 (86.035)	Acc@5 99.512 (99.512)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [31 | 180] LR: 0.100000
Epoch: [31][0/25]	Time 0.708 (0.708)	Data 0.738 (0.738)	Loss 0.6580 (0.6580)	Acc@1 86.475 (86.475)	Acc@5 99.463 (99.463)

Epoch: [32 | 180] LR: 0.100000
Epoch: [32][0/25]	Time 0.732 (0.732)	Data 0.755 (0.755)	Loss 0.6554 (0.6554)	Acc@1 86.182 (86.182)	Acc@5 99.512 (99.512)

Epoch: [33 | 180] LR: 0.100000
Epoch: [33][0/25]	Time 0.737 (0.737)	Data 0.698 (0.698)	Loss 0.6771 (0.6771)	Acc@1 85.059 (85.059)	Acc@5 99.463 (99.463)

Epoch: [34 | 180] LR: 0.100000
Epoch: [34][0/25]	Time 0.821 (0.821)	Data 0.812 (0.812)	Loss 0.6354 (0.6354)	Acc@1 86.963 (86.963)	Acc@5 99.316 (99.316)

Epoch: [35 | 180] LR: 0.100000
Epoch: [35][0/25]	Time 0.724 (0.724)	Data 0.735 (0.735)	Loss 0.6081 (0.6081)	Acc@1 87.744 (87.744)	Acc@5 99.512 (99.512)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [36 | 180] LR: 0.100000
Epoch: [36][0/25]	Time 0.771 (0.771)	Data 0.740 (0.740)	Loss 0.6149 (0.6149)	Acc@1 88.184 (88.184)	Acc@5 99.463 (99.463)

Epoch: [37 | 180] LR: 0.100000
Epoch: [37][0/25]	Time 0.712 (0.712)	Data 0.689 (0.689)	Loss 0.5964 (0.5964)	Acc@1 87.500 (87.500)	Acc@5 99.707 (99.707)

Epoch: [38 | 180] LR: 0.100000
Epoch: [38][0/25]	Time 0.779 (0.779)	Data 0.798 (0.798)	Loss 0.6351 (0.6351)	Acc@1 86.279 (86.279)	Acc@5 99.658 (99.658)

Epoch: [39 | 180] LR: 0.100000
Epoch: [39][0/25]	Time 0.742 (0.742)	Data 0.753 (0.753)	Loss 0.6701 (0.6701)	Acc@1 85.986 (85.986)	Acc@5 99.219 (99.219)

Epoch: [40 | 180] LR: 0.100000
Epoch: [40][0/25]	Time 0.691 (0.691)	Data 0.799 (0.799)	Loss 0.6332 (0.6332)	Acc@1 87.354 (87.354)	Acc@5 99.512 (99.512)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 486226 ; 487386 ; 0.9976199562564374

Epoch: [41 | 180] LR: 0.100000
Epoch: [41][0/25]	Time 0.695 (0.695)	Data 0.683 (0.683)	Loss 0.6433 (0.6433)	Acc@1 86.768 (86.768)	Acc@5 99.463 (99.463)

Epoch: [42 | 180] LR: 0.100000
Epoch: [42][0/25]	Time 0.695 (0.695)	Data 0.680 (0.680)	Loss 0.5768 (0.5768)	Acc@1 88.721 (88.721)	Acc@5 99.707 (99.707)

Epoch: [43 | 180] LR: 0.100000
Epoch: [43][0/25]	Time 0.758 (0.758)	Data 0.680 (0.680)	Loss 0.6001 (0.6001)	Acc@1 87.402 (87.402)	Acc@5 99.707 (99.707)

Epoch: [44 | 180] LR: 0.100000
Epoch: [44][0/25]	Time 0.709 (0.709)	Data 0.711 (0.711)	Loss 0.5762 (0.5762)	Acc@1 89.307 (89.307)	Acc@5 99.658 (99.658)

Epoch: [45 | 180] LR: 0.100000
Epoch: [45][0/25]	Time 0.726 (0.726)	Data 0.733 (0.733)	Loss 0.6152 (0.6152)	Acc@1 87.549 (87.549)	Acc@5 99.609 (99.609)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 482470 ; 487386 ; 0.9899135387557295

Epoch: [46 | 180] LR: 0.100000
Epoch: [46][0/25]	Time 0.856 (0.856)	Data 0.850 (0.850)	Loss 0.5995 (0.5995)	Acc@1 87.158 (87.158)	Acc@5 99.609 (99.609)

Epoch: [47 | 180] LR: 0.100000
Epoch: [47][0/25]	Time 0.726 (0.726)	Data 0.742 (0.742)	Loss 0.5554 (0.5554)	Acc@1 89.453 (89.453)	Acc@5 99.707 (99.707)

Epoch: [48 | 180] LR: 0.100000
Epoch: [48][0/25]	Time 0.717 (0.717)	Data 0.700 (0.700)	Loss 0.5980 (0.5980)	Acc@1 87.842 (87.842)	Acc@5 99.463 (99.463)

Epoch: [49 | 180] LR: 0.100000
Epoch: [49][0/25]	Time 0.740 (0.740)	Data 0.678 (0.678)	Loss 0.5868 (0.5868)	Acc@1 88.477 (88.477)	Acc@5 99.561 (99.561)

Epoch: [50 | 180] LR: 0.100000
Epoch: [50][0/25]	Time 0.740 (0.740)	Data 0.674 (0.674)	Loss 0.5918 (0.5918)	Acc@1 88.477 (88.477)	Acc@5 99.805 (99.805)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 481310 ; 487386 ; 0.9875334950121669

Epoch: [51 | 180] LR: 0.100000
Epoch: [51][0/25]	Time 0.717 (0.717)	Data 0.816 (0.816)	Loss 0.5939 (0.5939)	Acc@1 88.086 (88.086)	Acc@5 99.512 (99.512)

Epoch: [52 | 180] LR: 0.100000
Epoch: [52][0/25]	Time 0.683 (0.683)	Data 0.700 (0.700)	Loss 0.5653 (0.5653)	Acc@1 88.770 (88.770)	Acc@5 99.756 (99.756)

Epoch: [53 | 180] LR: 0.100000
Epoch: [53][0/25]	Time 0.682 (0.682)	Data 0.709 (0.709)	Loss 0.5807 (0.5807)	Acc@1 88.135 (88.135)	Acc@5 99.658 (99.658)

Epoch: [54 | 180] LR: 0.100000
Epoch: [54][0/25]	Time 0.676 (0.676)	Data 0.864 (0.864)	Loss 0.5719 (0.5719)	Acc@1 88.867 (88.867)	Acc@5 99.756 (99.756)

Epoch: [55 | 180] LR: 0.100000
Epoch: [55][0/25]	Time 0.618 (0.618)	Data 0.675 (0.675)	Loss 0.5682 (0.5682)	Acc@1 89.697 (89.697)	Acc@5 99.707 (99.707)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 479866 ; 487386 ; 0.9845707509038011

Epoch: [56 | 180] LR: 0.100000
Epoch: [56][0/25]	Time 0.704 (0.704)	Data 0.665 (0.665)	Loss 0.6009 (0.6009)	Acc@1 88.184 (88.184)	Acc@5 99.512 (99.512)

Epoch: [57 | 180] LR: 0.100000
Epoch: [57][0/25]	Time 0.760 (0.760)	Data 0.686 (0.686)	Loss 0.5463 (0.5463)	Acc@1 90.186 (90.186)	Acc@5 99.561 (99.561)

Epoch: [58 | 180] LR: 0.100000
Epoch: [58][0/25]	Time 0.782 (0.782)	Data 0.643 (0.643)	Loss 0.5506 (0.5506)	Acc@1 90.039 (90.039)	Acc@5 99.561 (99.561)

Epoch: [59 | 180] LR: 0.100000
Epoch: [59][0/25]	Time 0.669 (0.669)	Data 0.824 (0.824)	Loss 0.5493 (0.5493)	Acc@1 90.479 (90.479)	Acc@5 99.707 (99.707)

Epoch: [60 | 180] LR: 0.100000
Epoch: [60][0/25]	Time 0.718 (0.718)	Data 0.831 (0.831)	Loss 0.5449 (0.5449)	Acc@1 90.918 (90.918)	Acc@5 99.707 (99.707)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 476252 ; 487386 ; 0.9771556835854949

Epoch: [61 | 180] LR: 0.100000
Epoch: [61][0/25]	Time 0.742 (0.742)	Data 0.769 (0.769)	Loss 0.5485 (0.5485)	Acc@1 90.137 (90.137)	Acc@5 99.512 (99.512)

Epoch: [62 | 180] LR: 0.100000
Epoch: [62][0/25]	Time 0.726 (0.726)	Data 0.707 (0.707)	Loss 0.5695 (0.5695)	Acc@1 88.721 (88.721)	Acc@5 99.658 (99.658)

Epoch: [63 | 180] LR: 0.100000
Epoch: [63][0/25]	Time 0.674 (0.674)	Data 0.714 (0.714)	Loss 0.5966 (0.5966)	Acc@1 87.500 (87.500)	Acc@5 99.414 (99.414)

Epoch: [64 | 180] LR: 0.100000
Epoch: [64][0/25]	Time 0.717 (0.717)	Data 0.698 (0.698)	Loss 0.5251 (0.5251)	Acc@1 91.406 (91.406)	Acc@5 99.805 (99.805)

Epoch: [65 | 180] LR: 0.100000
Epoch: [65][0/25]	Time 0.685 (0.685)	Data 0.737 (0.737)	Loss 0.5657 (0.5657)	Acc@1 89.307 (89.307)	Acc@5 99.561 (99.561)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(56, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 469178 ; 487386 ; 0.9626415202734588

Epoch: [66 | 180] LR: 0.100000
Epoch: [66][0/25]	Time 0.802 (0.802)	Data 0.822 (0.822)	Loss 0.5676 (0.5676)	Acc@1 89.307 (89.307)	Acc@5 99.805 (99.805)

Epoch: [67 | 180] LR: 0.100000
Epoch: [67][0/25]	Time 0.728 (0.728)	Data 0.639 (0.639)	Loss 0.5743 (0.5743)	Acc@1 88.672 (88.672)	Acc@5 99.609 (99.609)

Epoch: [68 | 180] LR: 0.100000
Epoch: [68][0/25]	Time 0.715 (0.715)	Data 0.655 (0.655)	Loss 0.5584 (0.5584)	Acc@1 89.014 (89.014)	Acc@5 99.854 (99.854)

Epoch: [69 | 180] LR: 0.100000
Epoch: [69][0/25]	Time 0.664 (0.664)	Data 0.685 (0.685)	Loss 0.5481 (0.5481)	Acc@1 90.186 (90.186)	Acc@5 99.805 (99.805)

Epoch: [70 | 180] LR: 0.100000
Epoch: [70][0/25]	Time 0.703 (0.703)	Data 0.716 (0.716)	Loss 0.5279 (0.5279)	Acc@1 90.527 (90.527)	Acc@5 99.805 (99.805)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(54, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(54, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 466870 ; 487386 ; 0.9579060539285084

Epoch: [71 | 180] LR: 0.100000
Epoch: [71][0/25]	Time 0.691 (0.691)	Data 0.814 (0.814)	Loss 0.5635 (0.5635)	Acc@1 89.551 (89.551)	Acc@5 99.561 (99.561)

Epoch: [72 | 180] LR: 0.100000
Epoch: [72][0/25]	Time 0.674 (0.674)	Data 0.716 (0.716)	Loss 0.5154 (0.5154)	Acc@1 91.260 (91.260)	Acc@5 99.805 (99.805)

Epoch: [73 | 180] LR: 0.100000
Epoch: [73][0/25]	Time 0.781 (0.781)	Data 0.763 (0.763)	Loss 0.5886 (0.5886)	Acc@1 88.428 (88.428)	Acc@5 99.658 (99.658)

Epoch: [74 | 180] LR: 0.100000
Epoch: [74][0/25]	Time 0.698 (0.698)	Data 0.764 (0.764)	Loss 0.5334 (0.5334)	Acc@1 90.430 (90.430)	Acc@5 99.854 (99.854)

Epoch: [75 | 180] LR: 0.100000
Epoch: [75][0/25]	Time 0.682 (0.682)	Data 0.709 (0.709)	Loss 0.5383 (0.5383)	Acc@1 90.137 (90.137)	Acc@5 99.707 (99.707)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 51, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(51, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(51, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 460520 ; 487386 ; 0.9448773661943511

Epoch: [76 | 180] LR: 0.100000
Epoch: [76][0/25]	Time 0.668 (0.668)	Data 0.815 (0.815)	Loss 0.5331 (0.5331)	Acc@1 90.625 (90.625)	Acc@5 99.707 (99.707)

Epoch: [77 | 180] LR: 0.100000
Epoch: [77][0/25]	Time 0.699 (0.699)	Data 0.753 (0.753)	Loss 0.5036 (0.5036)	Acc@1 91.504 (91.504)	Acc@5 99.902 (99.902)

Epoch: [78 | 180] LR: 0.100000
Epoch: [78][0/25]	Time 0.708 (0.708)	Data 0.783 (0.783)	Loss 0.5616 (0.5616)	Acc@1 89.990 (89.990)	Acc@5 99.658 (99.658)

Epoch: [79 | 180] LR: 0.100000
Epoch: [79][0/25]	Time 0.712 (0.712)	Data 0.855 (0.855)	Loss 0.5510 (0.5510)	Acc@1 89.893 (89.893)	Acc@5 99.463 (99.463)

Epoch: [80 | 180] LR: 0.100000
Epoch: [80][0/25]	Time 0.699 (0.699)	Data 0.809 (0.809)	Loss 0.5515 (0.5515)	Acc@1 89.990 (89.990)	Acc@5 99.707 (99.707)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(10, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 47, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(47, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(47, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 454458 ; 487386 ; 0.9324395858723886

Epoch: [81 | 180] LR: 0.100000
Epoch: [81][0/25]	Time 0.753 (0.753)	Data 0.820 (0.820)	Loss 0.5450 (0.5450)	Acc@1 89.990 (89.990)	Acc@5 99.854 (99.854)

Epoch: [82 | 180] LR: 0.100000
Epoch: [82][0/25]	Time 0.712 (0.712)	Data 0.747 (0.747)	Loss 0.5616 (0.5616)	Acc@1 89.209 (89.209)	Acc@5 99.561 (99.561)

Epoch: [83 | 180] LR: 0.100000
Epoch: [83][0/25]	Time 0.592 (0.592)	Data 0.787 (0.787)	Loss 0.5224 (0.5224)	Acc@1 90.430 (90.430)	Acc@5 99.756 (99.756)

Epoch: [84 | 180] LR: 0.100000
Epoch: [84][0/25]	Time 0.683 (0.683)	Data 0.879 (0.879)	Loss 0.5697 (0.5697)	Acc@1 88.916 (88.916)	Acc@5 99.658 (99.658)

Epoch: [85 | 180] LR: 0.100000
Epoch: [85][0/25]	Time 0.718 (0.718)	Data 0.692 (0.692)	Loss 0.5410 (0.5410)	Acc@1 90.283 (90.283)	Acc@5 99.805 (99.805)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 47, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(47, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(47, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 453590 ; 487386 ; 0.9306586565884125

Epoch: [86 | 180] LR: 0.100000
Epoch: [86][0/25]	Time 0.805 (0.805)	Data 0.720 (0.720)	Loss 0.5717 (0.5717)	Acc@1 88.916 (88.916)	Acc@5 99.561 (99.561)

Epoch: [87 | 180] LR: 0.100000
Epoch: [87][0/25]	Time 0.674 (0.674)	Data 0.645 (0.645)	Loss 0.5402 (0.5402)	Acc@1 90.869 (90.869)	Acc@5 99.756 (99.756)

Epoch: [88 | 180] LR: 0.100000
Epoch: [88][0/25]	Time 0.720 (0.720)	Data 0.706 (0.706)	Loss 0.5750 (0.5750)	Acc@1 89.111 (89.111)	Acc@5 99.854 (99.854)

Epoch: [89 | 180] LR: 0.100000
Epoch: [89][0/25]	Time 0.661 (0.661)	Data 0.745 (0.745)	Loss 0.5239 (0.5239)	Acc@1 91.016 (91.016)	Acc@5 99.609 (99.609)

Epoch: [90 | 180] LR: 0.100000
Epoch: [90][0/25]	Time 0.714 (0.714)	Data 0.711 (0.711)	Loss 0.5168 (0.5168)	Acc@1 91.309 (91.309)	Acc@5 99.854 (99.854)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(27, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(27, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 46, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(46, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(46, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 451280 ; 487386 ; 0.9259190867197663

Epoch: [91 | 180] LR: 0.100000
Epoch: [91][0/25]	Time 0.701 (0.701)	Data 0.724 (0.724)	Loss 0.5367 (0.5367)	Acc@1 90.820 (90.820)	Acc@5 99.707 (99.707)

Epoch: [92 | 180] LR: 0.100000
Epoch: [92][0/25]	Time 0.691 (0.691)	Data 0.715 (0.715)	Loss 0.5127 (0.5127)	Acc@1 91.846 (91.846)	Acc@5 99.658 (99.658)

Epoch: [93 | 180] LR: 0.040000
Epoch: [93][0/25]	Time 0.733 (0.733)	Data 0.724 (0.724)	Loss 0.5009 (0.5009)	Acc@1 91.406 (91.406)	Acc@5 99.854 (99.854)

Epoch: [94 | 180] LR: 0.040000
Epoch: [94][0/25]	Time 0.656 (0.656)	Data 0.783 (0.783)	Loss 0.4286 (0.4286)	Acc@1 94.482 (94.482)	Acc@5 99.951 (99.951)

Epoch: [95 | 180] LR: 0.040000
Epoch: [95][0/25]	Time 0.617 (0.617)	Data 0.828 (0.828)	Loss 0.4009 (0.4009)	Acc@1 95.312 (95.312)	Acc@5 99.854 (99.854)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(27, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(27, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 43, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(43, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(43, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 447818 ; 487386 ; 0.9188158872023406

Epoch: [96 | 180] LR: 0.040000
Epoch: [96][0/25]	Time 0.718 (0.718)	Data 0.739 (0.739)	Loss 0.3620 (0.3620)	Acc@1 96.582 (96.582)	Acc@5 99.951 (99.951)

Epoch: [97 | 180] LR: 0.040000
Epoch: [97][0/25]	Time 0.678 (0.678)	Data 0.670 (0.670)	Loss 0.3363 (0.3363)	Acc@1 97.363 (97.363)	Acc@5 99.902 (99.902)

Epoch: [98 | 180] LR: 0.040000
Epoch: [98][0/25]	Time 0.713 (0.713)	Data 0.739 (0.739)	Loss 0.3370 (0.3370)	Acc@1 97.412 (97.412)	Acc@5 100.000 (100.000)

Epoch: [99 | 180] LR: 0.040000
Epoch: [99][0/25]	Time 0.696 (0.696)	Data 0.834 (0.834)	Loss 0.3444 (0.3444)	Acc@1 96.777 (96.777)	Acc@5 99.951 (99.951)

Epoch: [100 | 180] LR: 0.040000
Epoch: [100][0/25]	Time 0.711 (0.711)	Data 0.700 (0.700)	Loss 0.3380 (0.3380)	Acc@1 96.729 (96.729)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(27, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(27, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(42, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 446664 ; 487386 ; 0.9164481540298655

Epoch: [101 | 180] LR: 0.040000
Epoch: [101][0/25]	Time 0.707 (0.707)	Data 0.729 (0.729)	Loss 0.3159 (0.3159)	Acc@1 97.363 (97.363)	Acc@5 100.000 (100.000)

Epoch: [102 | 180] LR: 0.040000
Epoch: [102][0/25]	Time 0.747 (0.747)	Data 0.697 (0.697)	Loss 0.3191 (0.3191)	Acc@1 97.607 (97.607)	Acc@5 99.902 (99.902)

Epoch: [103 | 180] LR: 0.040000
Epoch: [103][0/25]	Time 0.660 (0.660)	Data 0.812 (0.812)	Loss 0.3105 (0.3105)	Acc@1 97.607 (97.607)	Acc@5 100.000 (100.000)

Epoch: [104 | 180] LR: 0.040000
Epoch: [104][0/25]	Time 0.686 (0.686)	Data 0.701 (0.701)	Loss 0.2989 (0.2989)	Acc@1 97.607 (97.607)	Acc@5 99.854 (99.854)

Epoch: [105 | 180] LR: 0.040000
Epoch: [105][0/25]	Time 0.700 (0.700)	Data 0.696 (0.696)	Loss 0.2989 (0.2989)	Acc@1 97.656 (97.656)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(27, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(27, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(42, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 446086 ; 487386 ; 0.9152622356817799

Epoch: [106 | 180] LR: 0.040000
Epoch: [106][0/25]	Time 0.731 (0.731)	Data 0.733 (0.733)	Loss 0.2973 (0.2973)	Acc@1 97.314 (97.314)	Acc@5 99.902 (99.902)

Epoch: [107 | 180] LR: 0.040000
Epoch: [107][0/25]	Time 0.679 (0.679)	Data 0.703 (0.703)	Loss 0.2808 (0.2808)	Acc@1 98.193 (98.193)	Acc@5 100.000 (100.000)

Epoch: [108 | 180] LR: 0.040000
Epoch: [108][0/25]	Time 0.696 (0.696)	Data 0.725 (0.725)	Loss 0.2779 (0.2779)	Acc@1 98.193 (98.193)	Acc@5 100.000 (100.000)

Epoch: [109 | 180] LR: 0.040000
Epoch: [109][0/25]	Time 0.707 (0.707)	Data 0.861 (0.861)	Loss 0.2736 (0.2736)	Acc@1 98.486 (98.486)	Acc@5 99.902 (99.902)

Epoch: [110 | 180] LR: 0.040000
Epoch: [110][0/25]	Time 0.677 (0.677)	Data 0.644 (0.644)	Loss 0.2687 (0.2687)	Acc@1 98.584 (98.584)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(27, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(27, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(42, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [111 | 180] LR: 0.040000
Epoch: [111][0/25]	Time 0.649 (0.649)	Data 0.743 (0.743)	Loss 0.2622 (0.2622)	Acc@1 98.779 (98.779)	Acc@5 99.951 (99.951)

Epoch: [112 | 180] LR: 0.040000
Epoch: [112][0/25]	Time 0.710 (0.710)	Data 0.688 (0.688)	Loss 0.2657 (0.2657)	Acc@1 98.047 (98.047)	Acc@5 100.000 (100.000)

Epoch: [113 | 180] LR: 0.040000
Epoch: [113][0/25]	Time 0.737 (0.737)	Data 0.632 (0.632)	Loss 0.2630 (0.2630)	Acc@1 98.291 (98.291)	Acc@5 100.000 (100.000)

Epoch: [114 | 180] LR: 0.040000
Epoch: [114][0/25]	Time 0.699 (0.699)	Data 0.726 (0.726)	Loss 0.2629 (0.2629)	Acc@1 98.535 (98.535)	Acc@5 100.000 (100.000)

Epoch: [115 | 180] LR: 0.040000
Epoch: [115][0/25]	Time 0.714 (0.714)	Data 0.677 (0.677)	Loss 0.2599 (0.2599)	Acc@1 98.291 (98.291)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(42, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 445218 ; 487386 ; 0.9134813063978038

Epoch: [116 | 180] LR: 0.040000
Epoch: [116][0/25]	Time 0.685 (0.685)	Data 0.746 (0.746)	Loss 0.2602 (0.2602)	Acc@1 98.291 (98.291)	Acc@5 100.000 (100.000)

Epoch: [117 | 180] LR: 0.040000
Epoch: [117][0/25]	Time 0.635 (0.635)	Data 0.677 (0.677)	Loss 0.2486 (0.2486)	Acc@1 98.535 (98.535)	Acc@5 100.000 (100.000)

Epoch: [118 | 180] LR: 0.040000
Epoch: [118][0/25]	Time 0.669 (0.669)	Data 0.886 (0.886)	Loss 0.2452 (0.2452)	Acc@1 98.682 (98.682)	Acc@5 100.000 (100.000)

Epoch: [119 | 180] LR: 0.040000
Epoch: [119][0/25]	Time 0.704 (0.704)	Data 0.738 (0.738)	Loss 0.2509 (0.2509)	Acc@1 98.291 (98.291)	Acc@5 99.951 (99.951)

Epoch: [120 | 180] LR: 0.040000
Epoch: [120][0/25]	Time 0.724 (0.724)	Data 0.819 (0.819)	Loss 0.2445 (0.2445)	Acc@1 98.486 (98.486)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(42, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [121 | 180] LR: 0.040000
Epoch: [121][0/25]	Time 0.631 (0.631)	Data 0.638 (0.638)	Loss 0.2357 (0.2357)	Acc@1 98.975 (98.975)	Acc@5 100.000 (100.000)

Epoch: [122 | 180] LR: 0.040000
Epoch: [122][0/25]	Time 0.688 (0.688)	Data 0.702 (0.702)	Loss 0.2355 (0.2355)	Acc@1 98.779 (98.779)	Acc@5 99.951 (99.951)

Epoch: [123 | 180] LR: 0.040000
Epoch: [123][0/25]	Time 0.704 (0.704)	Data 0.805 (0.805)	Loss 0.2310 (0.2310)	Acc@1 98.975 (98.975)	Acc@5 100.000 (100.000)

Epoch: [124 | 180] LR: 0.040000
Epoch: [124][0/25]	Time 0.673 (0.673)	Data 0.748 (0.748)	Loss 0.2330 (0.2330)	Acc@1 98.730 (98.730)	Acc@5 100.000 (100.000)

Epoch: [125 | 180] LR: 0.040000
Epoch: [125][0/25]	Time 0.796 (0.796)	Data 0.741 (0.741)	Loss 0.2381 (0.2381)	Acc@1 98.291 (98.291)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(42, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 444064 ; 487386 ; 0.9111135732253286

Epoch: [126 | 180] LR: 0.040000
Epoch: [126][0/25]	Time 0.743 (0.743)	Data 0.806 (0.806)	Loss 0.2338 (0.2338)	Acc@1 98.779 (98.779)	Acc@5 100.000 (100.000)

Epoch: [127 | 180] LR: 0.040000
Epoch: [127][0/25]	Time 0.682 (0.682)	Data 0.693 (0.693)	Loss 0.2278 (0.2278)	Acc@1 98.828 (98.828)	Acc@5 99.951 (99.951)

Epoch: [128 | 180] LR: 0.040000
Epoch: [128][0/25]	Time 0.690 (0.690)	Data 0.863 (0.863)	Loss 0.2232 (0.2232)	Acc@1 98.682 (98.682)	Acc@5 100.000 (100.000)

Epoch: [129 | 180] LR: 0.040000
Epoch: [129][0/25]	Time 0.702 (0.702)	Data 0.719 (0.719)	Loss 0.2188 (0.2188)	Acc@1 98.828 (98.828)	Acc@5 99.951 (99.951)

Epoch: [130 | 180] LR: 0.040000
Epoch: [130][0/25]	Time 0.726 (0.726)	Data 0.758 (0.758)	Loss 0.2272 (0.2272)	Acc@1 98.486 (98.486)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(42, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [131 | 180] LR: 0.040000
Epoch: [131][0/25]	Time 0.728 (0.728)	Data 0.765 (0.765)	Loss 0.2189 (0.2189)	Acc@1 98.926 (98.926)	Acc@5 100.000 (100.000)

Epoch: [132 | 180] LR: 0.040000
Epoch: [132][0/25]	Time 0.688 (0.688)	Data 0.677 (0.677)	Loss 0.2177 (0.2177)	Acc@1 98.926 (98.926)	Acc@5 99.951 (99.951)

Epoch: [133 | 180] LR: 0.040000
Epoch: [133][0/25]	Time 0.680 (0.680)	Data 0.657 (0.657)	Loss 0.2120 (0.2120)	Acc@1 98.682 (98.682)	Acc@5 100.000 (100.000)

Epoch: [134 | 180] LR: 0.040000
Epoch: [134][0/25]	Time 0.745 (0.745)	Data 0.679 (0.679)	Loss 0.2235 (0.2235)	Acc@1 98.389 (98.389)	Acc@5 100.000 (100.000)

Epoch: [135 | 180] LR: 0.040000
Epoch: [135][0/25]	Time 0.641 (0.641)	Data 0.847 (0.847)	Loss 0.2263 (0.2263)	Acc@1 98.193 (98.193)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(42, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [136 | 180] LR: 0.040000
Epoch: [136][0/25]	Time 0.706 (0.706)	Data 0.660 (0.660)	Loss 0.2183 (0.2183)	Acc@1 98.682 (98.682)	Acc@5 100.000 (100.000)

Epoch: [137 | 180] LR: 0.040000
Epoch: [137][0/25]	Time 0.713 (0.713)	Data 0.796 (0.796)	Loss 0.2057 (0.2057)	Acc@1 98.877 (98.877)	Acc@5 100.000 (100.000)

Epoch: [138 | 180] LR: 0.040000
Epoch: [138][0/25]	Time 0.736 (0.736)	Data 0.658 (0.658)	Loss 0.2246 (0.2246)	Acc@1 98.193 (98.193)	Acc@5 100.000 (100.000)

Epoch: [139 | 180] LR: 0.040000
Epoch: [139][0/25]	Time 0.736 (0.736)	Data 0.692 (0.692)	Loss 0.2149 (0.2149)	Acc@1 98.486 (98.486)	Acc@5 100.000 (100.000)

Epoch: [140 | 180] LR: 0.040000
Epoch: [140][0/25]	Time 0.680 (0.680)	Data 0.655 (0.655)	Loss 0.2020 (0.2020)	Acc@1 99.121 (99.121)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(42, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [141 | 180] LR: 0.040000
Epoch: [141][0/25]	Time 0.703 (0.703)	Data 0.803 (0.803)	Loss 0.2158 (0.2158)	Acc@1 98.438 (98.438)	Acc@5 100.000 (100.000)

Epoch: [142 | 180] LR: 0.040000
Epoch: [142][0/25]	Time 0.721 (0.721)	Data 0.746 (0.746)	Loss 0.2071 (0.2071)	Acc@1 98.584 (98.584)	Acc@5 100.000 (100.000)

Epoch: [143 | 180] LR: 0.040000
Epoch: [143][0/25]	Time 0.722 (0.722)	Data 0.737 (0.737)	Loss 0.2045 (0.2045)	Acc@1 98.828 (98.828)	Acc@5 100.000 (100.000)

Epoch: [144 | 180] LR: 0.040000
Epoch: [144][0/25]	Time 0.732 (0.732)	Data 0.643 (0.643)	Loss 0.2126 (0.2126)	Acc@1 98.438 (98.438)	Acc@5 100.000 (100.000)

Epoch: [145 | 180] LR: 0.040000
Epoch: [145][0/25]	Time 0.712 (0.712)	Data 0.716 (0.716)	Loss 0.2047 (0.2047)	Acc@1 98.486 (98.486)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(42, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [146 | 180] LR: 0.040000
Epoch: [146][0/25]	Time 0.705 (0.705)	Data 0.685 (0.685)	Loss 0.2036 (0.2036)	Acc@1 98.828 (98.828)	Acc@5 100.000 (100.000)

Epoch: [147 | 180] LR: 0.040000
Epoch: [147][0/25]	Time 0.741 (0.741)	Data 0.682 (0.682)	Loss 0.2049 (0.2049)	Acc@1 98.730 (98.730)	Acc@5 100.000 (100.000)

Epoch: [148 | 180] LR: 0.040000
Epoch: [148][0/25]	Time 0.657 (0.657)	Data 0.639 (0.639)	Loss 0.2099 (0.2099)	Acc@1 98.340 (98.340)	Acc@5 100.000 (100.000)

Epoch: [149 | 180] LR: 0.040000
Epoch: [149][0/25]	Time 0.731 (0.731)	Data 0.715 (0.715)	Loss 0.2099 (0.2099)	Acc@1 98.291 (98.291)	Acc@5 100.000 (100.000)

Epoch: [150 | 180] LR: 0.000400
Epoch: [150][0/25]	Time 0.699 (0.699)	Data 0.685 (0.685)	Loss 0.2096 (0.2096)	Acc@1 98.389 (98.389)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(42, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 443486 ; 487386 ; 0.9099276548772431

Epoch: [151 | 180] LR: 0.000400
Epoch: [151][0/25]	Time 0.700 (0.700)	Data 0.753 (0.753)	Loss 0.2057 (0.2057)	Acc@1 98.486 (98.486)	Acc@5 99.951 (99.951)

Epoch: [152 | 180] LR: 0.000400
Epoch: [152][0/25]	Time 0.670 (0.670)	Data 0.682 (0.682)	Loss 0.2094 (0.2094)	Acc@1 98.145 (98.145)	Acc@5 100.000 (100.000)

Epoch: [153 | 180] LR: 0.000400
Epoch: [153][0/25]	Time 0.686 (0.686)	Data 0.715 (0.715)	Loss 0.1936 (0.1936)	Acc@1 99.219 (99.219)	Acc@5 100.000 (100.000)

Epoch: [154 | 180] LR: 0.000400
Epoch: [154][0/25]	Time 0.744 (0.744)	Data 0.676 (0.676)	Loss 0.1937 (0.1937)	Acc@1 98.877 (98.877)	Acc@5 100.000 (100.000)

Epoch: [155 | 180] LR: 0.000400
Epoch: [155][0/25]	Time 0.630 (0.630)	Data 0.717 (0.717)	Loss 0.1992 (0.1992)	Acc@1 98.535 (98.535)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(42, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [156 | 180] LR: 0.000400
Epoch: [156][0/25]	Time 0.712 (0.712)	Data 0.609 (0.609)	Loss 0.1883 (0.1883)	Acc@1 99.219 (99.219)	Acc@5 100.000 (100.000)

Epoch: [157 | 180] LR: 0.000400
Epoch: [157][0/25]	Time 0.677 (0.677)	Data 0.679 (0.679)	Loss 0.1952 (0.1952)	Acc@1 99.512 (99.512)	Acc@5 100.000 (100.000)

Epoch: [158 | 180] LR: 0.000400
Epoch: [158][0/25]	Time 0.693 (0.693)	Data 0.716 (0.716)	Loss 0.2033 (0.2033)	Acc@1 99.121 (99.121)	Acc@5 100.000 (100.000)

Epoch: [159 | 180] LR: 0.000400
Epoch: [159][0/25]	Time 0.691 (0.691)	Data 0.670 (0.670)	Loss 0.1950 (0.1950)	Acc@1 99.463 (99.463)	Acc@5 100.000 (100.000)

Epoch: [160 | 180] LR: 0.000400
Epoch: [160][0/25]	Time 0.672 (0.672)	Data 0.813 (0.813)	Loss 0.2033 (0.2033)	Acc@1 99.121 (99.121)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(42, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [161 | 180] LR: 0.000400
Epoch: [161][0/25]	Time 0.705 (0.705)	Data 0.702 (0.702)	Loss 0.2013 (0.2013)	Acc@1 99.316 (99.316)	Acc@5 100.000 (100.000)

Epoch: [162 | 180] LR: 0.000400
Epoch: [162][0/25]	Time 0.679 (0.679)	Data 0.727 (0.727)	Loss 0.2052 (0.2052)	Acc@1 98.975 (98.975)	Acc@5 100.000 (100.000)

Epoch: [163 | 180] LR: 0.000400
Epoch: [163][0/25]	Time 0.748 (0.748)	Data 0.686 (0.686)	Loss 0.2026 (0.2026)	Acc@1 99.121 (99.121)	Acc@5 100.000 (100.000)

Epoch: [164 | 180] LR: 0.000400
Epoch: [164][0/25]	Time 0.743 (0.743)	Data 0.665 (0.665)	Loss 0.2010 (0.2010)	Acc@1 99.268 (99.268)	Acc@5 100.000 (100.000)

Epoch: [165 | 180] LR: 0.000400
Epoch: [165][0/25]	Time 0.697 (0.697)	Data 0.734 (0.734)	Loss 0.1981 (0.1981)	Acc@1 99.316 (99.316)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(42, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [166 | 180] LR: 0.000400
Epoch: [166][0/25]	Time 0.749 (0.749)	Data 0.669 (0.669)	Loss 0.2015 (0.2015)	Acc@1 99.121 (99.121)	Acc@5 100.000 (100.000)

Epoch: [167 | 180] LR: 0.000400
Epoch: [167][0/25]	Time 0.696 (0.696)	Data 0.642 (0.642)	Loss 0.2005 (0.2005)	Acc@1 99.219 (99.219)	Acc@5 100.000 (100.000)

Epoch: [168 | 180] LR: 0.000400
Epoch: [168][0/25]	Time 0.711 (0.711)	Data 0.647 (0.647)	Loss 0.1929 (0.1929)	Acc@1 99.512 (99.512)	Acc@5 100.000 (100.000)

Epoch: [169 | 180] LR: 0.000400
Epoch: [169][0/25]	Time 0.696 (0.696)	Data 0.732 (0.732)	Loss 0.1936 (0.1936)	Acc@1 99.658 (99.658)	Acc@5 100.000 (100.000)

Epoch: [170 | 180] LR: 0.000400
Epoch: [170][0/25]	Time 0.738 (0.738)	Data 0.665 (0.665)	Loss 0.1909 (0.1909)	Acc@1 99.561 (99.561)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(42, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [171 | 180] LR: 0.000400
Epoch: [171][0/25]	Time 0.673 (0.673)	Data 0.772 (0.772)	Loss 0.1968 (0.1968)	Acc@1 99.707 (99.707)	Acc@5 100.000 (100.000)

Epoch: [172 | 180] LR: 0.000400
Epoch: [172][0/25]	Time 0.652 (0.652)	Data 0.675 (0.675)	Loss 0.1942 (0.1942)	Acc@1 99.561 (99.561)	Acc@5 100.000 (100.000)

Epoch: [173 | 180] LR: 0.000400
Epoch: [173][0/25]	Time 0.670 (0.670)	Data 0.686 (0.686)	Loss 0.1914 (0.1914)	Acc@1 99.512 (99.512)	Acc@5 100.000 (100.000)

Epoch: [174 | 180] LR: 0.000400
Epoch: [174][0/25]	Time 0.747 (0.747)	Data 0.636 (0.636)	Loss 0.1946 (0.1946)	Acc@1 99.463 (99.463)	Acc@5 100.000 (100.000)

Epoch: [175 | 180] LR: 0.000400
Epoch: [175][0/25]	Time 0.735 (0.735)	Data 0.652 (0.652)	Loss 0.1963 (0.1963)	Acc@1 99.316 (99.316)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(11, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(9, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(42, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [176 | 180] LR: 0.000400
Epoch: [176][0/25]	Time 0.736 (0.736)	Data 0.620 (0.620)	Loss 0.1915 (0.1915)	Acc@1 99.561 (99.561)	Acc@5 100.000 (100.000)

Epoch: [177 | 180] LR: 0.000400
Epoch: [177][0/25]	Time 0.741 (0.741)	Data 0.652 (0.652)	Loss 0.1938 (0.1938)	Acc@1 99.609 (99.609)	Acc@5 100.000 (100.000)

Epoch: [178 | 180] LR: 0.000400
Epoch: [178][0/25]	Time 0.670 (0.670)	Data 0.670 (0.670)	Loss 0.1956 (0.1956)	Acc@1 99.463 (99.463)	Acc@5 100.000 (100.000)

Epoch: [179 | 180] LR: 0.000400
Epoch: [179][0/25]	Time 0.757 (0.757)	Data 0.663 (0.663)	Loss 0.1940 (0.1940)	Acc@1 99.609 (99.609)	Acc@5 99.951 (99.951)

Epoch: [180 | 180] LR: 0.000400
Epoch: [180][0/25]	Time 0.685 (0.685)	Data 0.649 (0.649)	Loss 0.1931 (0.1931)	Acc@1 99.561 (99.561)	Acc@5 100.000 (100.000)

  2048
  92.27
 17.625s  no display found. Using non-interactive Agg backend
[5, 5, 5]
Cifar10: True; cifar100: False
False
Files already downloaded and verified

Arch Num:  [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
count0: 487386

Epoch: [1 | 180] LR: 0.100000
Epoch: [1][0/25]	Time 0.812 (0.812)	Data 0.798 (0.798)	Loss 3.3737 (3.3737)	Acc@1 9.180 (9.180)	Acc@5 49.805 (49.805)

Epoch: [2 | 180] LR: 0.100000
Epoch: [2][0/25]	Time 0.715 (0.715)	Data 0.705 (0.705)	Loss 3.0181 (3.0181)	Acc@1 11.426 (11.426)	Acc@5 50.098 (50.098)

Epoch: [3 | 180] LR: 0.100000
Epoch: [3][0/25]	Time 0.780 (0.780)	Data 0.724 (0.724)	Loss 2.9617 (2.9617)	Acc@1 10.938 (10.938)	Acc@5 54.541 (54.541)

Epoch: [4 | 180] LR: 0.100000
Epoch: [4][0/25]	Time 0.735 (0.735)	Data 0.663 (0.663)	Loss 2.8830 (2.8830)	Acc@1 14.990 (14.990)	Acc@5 59.863 (59.863)

Epoch: [5 | 180] LR: 0.100000
Epoch: [5][0/25]	Time 0.708 (0.708)	Data 0.714 (0.714)	Loss 2.6954 (2.6954)	Acc@1 20.996 (20.996)	Acc@5 71.582 (71.582)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [6 | 180] LR: 0.100000
Epoch: [6][0/25]	Time 0.745 (0.745)	Data 0.730 (0.730)	Loss 2.5498 (2.5498)	Acc@1 24.414 (24.414)	Acc@5 77.002 (77.002)

Epoch: [7 | 180] LR: 0.100000
Epoch: [7][0/25]	Time 0.762 (0.762)	Data 0.647 (0.647)	Loss 2.4540 (2.4540)	Acc@1 25.781 (25.781)	Acc@5 81.592 (81.592)

Epoch: [8 | 180] LR: 0.100000
Epoch: [8][0/25]	Time 0.687 (0.687)	Data 0.814 (0.814)	Loss 2.2958 (2.2958)	Acc@1 30.225 (30.225)	Acc@5 83.447 (83.447)

Epoch: [9 | 180] LR: 0.100000
Epoch: [9][0/25]	Time 0.725 (0.725)	Data 0.664 (0.664)	Loss 2.1114 (2.1114)	Acc@1 36.719 (36.719)	Acc@5 87.207 (87.207)

Epoch: [10 | 180] LR: 0.100000
Epoch: [10][0/25]	Time 0.757 (0.757)	Data 0.718 (0.718)	Loss 2.0226 (2.0226)	Acc@1 37.305 (37.305)	Acc@5 88.770 (88.770)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [11 | 180] LR: 0.100000
Epoch: [11][0/25]	Time 0.720 (0.720)	Data 0.650 (0.650)	Loss 1.8979 (1.8979)	Acc@1 40.381 (40.381)	Acc@5 90.576 (90.576)

Epoch: [12 | 180] LR: 0.100000
Epoch: [12][0/25]	Time 0.753 (0.753)	Data 0.756 (0.756)	Loss 1.7890 (1.7890)	Acc@1 46.973 (46.973)	Acc@5 92.041 (92.041)

Epoch: [13 | 180] LR: 0.100000
Epoch: [13][0/25]	Time 0.693 (0.693)	Data 0.712 (0.712)	Loss 1.5507 (1.5507)	Acc@1 54.541 (54.541)	Acc@5 94.629 (94.629)

Epoch: [14 | 180] LR: 0.100000
Epoch: [14][0/25]	Time 0.742 (0.742)	Data 0.676 (0.676)	Loss 1.3659 (1.3659)	Acc@1 62.012 (62.012)	Acc@5 96.045 (96.045)

Epoch: [15 | 180] LR: 0.100000
Epoch: [15][0/25]	Time 0.760 (0.760)	Data 0.759 (0.759)	Loss 1.2929 (1.2929)	Acc@1 63.721 (63.721)	Acc@5 96.289 (96.289)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [16 | 180] LR: 0.100000
Epoch: [16][0/25]	Time 0.734 (0.734)	Data 0.757 (0.757)	Loss 1.1654 (1.1654)	Acc@1 66.992 (66.992)	Acc@5 97.607 (97.607)

Epoch: [17 | 180] LR: 0.100000
Epoch: [17][0/25]	Time 0.690 (0.690)	Data 0.722 (0.722)	Loss 1.1122 (1.1122)	Acc@1 69.824 (69.824)	Acc@5 97.510 (97.510)

Epoch: [18 | 180] LR: 0.100000
Epoch: [18][0/25]	Time 0.855 (0.855)	Data 0.722 (0.722)	Loss 0.9852 (0.9852)	Acc@1 74.707 (74.707)	Acc@5 97.998 (97.998)

Epoch: [19 | 180] LR: 0.100000
Epoch: [19][0/25]	Time 0.739 (0.739)	Data 0.778 (0.778)	Loss 0.9315 (0.9315)	Acc@1 76.367 (76.367)	Acc@5 98.828 (98.828)

Epoch: [20 | 180] LR: 0.100000
Epoch: [20][0/25]	Time 0.766 (0.766)	Data 0.764 (0.764)	Loss 0.8580 (0.8580)	Acc@1 78.955 (78.955)	Acc@5 98.438 (98.438)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [21 | 180] LR: 0.100000
Epoch: [21][0/25]	Time 0.751 (0.751)	Data 0.762 (0.762)	Loss 0.8169 (0.8169)	Acc@1 80.371 (80.371)	Acc@5 98.779 (98.779)

Epoch: [22 | 180] LR: 0.100000
Epoch: [22][0/25]	Time 0.740 (0.740)	Data 0.689 (0.689)	Loss 0.7933 (0.7933)	Acc@1 80.469 (80.469)	Acc@5 98.877 (98.877)

Epoch: [23 | 180] LR: 0.100000
Epoch: [23][0/25]	Time 0.720 (0.720)	Data 0.676 (0.676)	Loss 0.7671 (0.7671)	Acc@1 80.811 (80.811)	Acc@5 99.219 (99.219)

Epoch: [24 | 180] LR: 0.100000
Epoch: [24][0/25]	Time 0.758 (0.758)	Data 0.827 (0.827)	Loss 0.7829 (0.7829)	Acc@1 80.615 (80.615)	Acc@5 99.268 (99.268)

Epoch: [25 | 180] LR: 0.100000
Epoch: [25][0/25]	Time 0.730 (0.730)	Data 0.712 (0.712)	Loss 0.6611 (0.6611)	Acc@1 86.670 (86.670)	Acc@5 99.609 (99.609)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [26 | 180] LR: 0.100000
Epoch: [26][0/25]	Time 0.766 (0.766)	Data 0.797 (0.797)	Loss 0.7045 (0.7045)	Acc@1 84.814 (84.814)	Acc@5 99.121 (99.121)

Epoch: [27 | 180] LR: 0.100000
Epoch: [27][0/25]	Time 0.746 (0.746)	Data 0.698 (0.698)	Loss 0.6854 (0.6854)	Acc@1 85.303 (85.303)	Acc@5 99.365 (99.365)

Epoch: [28 | 180] LR: 0.100000
Epoch: [28][0/25]	Time 0.684 (0.684)	Data 0.677 (0.677)	Loss 0.6937 (0.6937)	Acc@1 84.326 (84.326)	Acc@5 99.365 (99.365)

Epoch: [29 | 180] LR: 0.100000
Epoch: [29][0/25]	Time 0.715 (0.715)	Data 0.736 (0.736)	Loss 0.6767 (0.6767)	Acc@1 85.107 (85.107)	Acc@5 99.463 (99.463)

Epoch: [30 | 180] LR: 0.100000
Epoch: [30][0/25]	Time 0.785 (0.785)	Data 0.680 (0.680)	Loss 0.6777 (0.6777)	Acc@1 85.205 (85.205)	Acc@5 99.219 (99.219)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [31 | 180] LR: 0.100000
Epoch: [31][0/25]	Time 0.765 (0.765)	Data 0.759 (0.759)	Loss 0.7122 (0.7122)	Acc@1 84.131 (84.131)	Acc@5 99.170 (99.170)

Epoch: [32 | 180] LR: 0.100000
Epoch: [32][0/25]	Time 0.710 (0.710)	Data 0.805 (0.805)	Loss 0.6892 (0.6892)	Acc@1 84.912 (84.912)	Acc@5 99.365 (99.365)

Epoch: [33 | 180] LR: 0.100000
Epoch: [33][0/25]	Time 0.666 (0.666)	Data 0.721 (0.721)	Loss 0.6602 (0.6602)	Acc@1 86.475 (86.475)	Acc@5 99.414 (99.414)

Epoch: [34 | 180] LR: 0.100000
Epoch: [34][0/25]	Time 0.749 (0.749)	Data 0.725 (0.725)	Loss 0.6636 (0.6636)	Acc@1 86.621 (86.621)	Acc@5 99.609 (99.609)

Epoch: [35 | 180] LR: 0.100000
Epoch: [35][0/25]	Time 0.789 (0.789)	Data 0.679 (0.679)	Loss 0.6202 (0.6202)	Acc@1 87.109 (87.109)	Acc@5 99.658 (99.658)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 486808 ; 487386 ; 0.9988140816519145

Epoch: [36 | 180] LR: 0.100000
Epoch: [36][0/25]	Time 0.740 (0.740)	Data 0.660 (0.660)	Loss 0.6114 (0.6114)	Acc@1 88.135 (88.135)	Acc@5 99.707 (99.707)

Epoch: [37 | 180] LR: 0.100000
Epoch: [37][0/25]	Time 0.710 (0.710)	Data 0.670 (0.670)	Loss 0.6559 (0.6559)	Acc@1 85.986 (85.986)	Acc@5 99.365 (99.365)

Epoch: [38 | 180] LR: 0.100000
Epoch: [38][0/25]	Time 0.769 (0.769)	Data 0.770 (0.770)	Loss 0.6475 (0.6475)	Acc@1 86.230 (86.230)	Acc@5 99.561 (99.561)

Epoch: [39 | 180] LR: 0.100000
Epoch: [39][0/25]	Time 0.762 (0.762)	Data 0.794 (0.794)	Loss 0.6475 (0.6475)	Acc@1 86.133 (86.133)	Acc@5 99.658 (99.658)

Epoch: [40 | 180] LR: 0.100000
Epoch: [40][0/25]	Time 0.748 (0.748)	Data 0.699 (0.699)	Loss 0.6484 (0.6484)	Acc@1 86.670 (86.670)	Acc@5 99.268 (99.268)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 483916 ; 487386 ; 0.9928803863877912

Epoch: [41 | 180] LR: 0.100000
Epoch: [41][0/25]	Time 0.752 (0.752)	Data 0.669 (0.669)	Loss 0.6469 (0.6469)	Acc@1 86.768 (86.768)	Acc@5 99.512 (99.512)

Epoch: [42 | 180] LR: 0.100000
Epoch: [42][0/25]	Time 0.742 (0.742)	Data 0.756 (0.756)	Loss 0.6013 (0.6013)	Acc@1 88.281 (88.281)	Acc@5 99.561 (99.561)

Epoch: [43 | 180] LR: 0.100000
Epoch: [43][0/25]	Time 0.722 (0.722)	Data 0.829 (0.829)	Loss 0.6781 (0.6781)	Acc@1 85.889 (85.889)	Acc@5 99.219 (99.219)

Epoch: [44 | 180] LR: 0.100000
Epoch: [44][0/25]	Time 0.768 (0.768)	Data 0.695 (0.695)	Loss 0.5756 (0.5756)	Acc@1 89.648 (89.648)	Acc@5 99.707 (99.707)

Epoch: [45 | 180] LR: 0.100000
Epoch: [45][0/25]	Time 0.708 (0.708)	Data 0.692 (0.692)	Loss 0.6371 (0.6371)	Acc@1 86.572 (86.572)	Acc@5 99.658 (99.658)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(23, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 478714 ; 487386 ; 0.9822071212550217

Epoch: [46 | 180] LR: 0.100000
Epoch: [46][0/25]	Time 0.730 (0.730)	Data 0.662 (0.662)	Loss 0.6111 (0.6111)	Acc@1 87.842 (87.842)	Acc@5 99.561 (99.561)

Epoch: [47 | 180] LR: 0.100000
Epoch: [47][0/25]	Time 0.764 (0.764)	Data 0.665 (0.665)	Loss 0.6054 (0.6054)	Acc@1 88.965 (88.965)	Acc@5 99.609 (99.609)

Epoch: [48 | 180] LR: 0.100000
Epoch: [48][0/25]	Time 0.690 (0.690)	Data 0.778 (0.778)	Loss 0.6054 (0.6054)	Acc@1 88.672 (88.672)	Acc@5 99.561 (99.561)

Epoch: [49 | 180] LR: 0.100000
Epoch: [49][0/25]	Time 0.723 (0.723)	Data 0.684 (0.684)	Loss 0.5948 (0.5948)	Acc@1 88.965 (88.965)	Acc@5 99.707 (99.707)

Epoch: [50 | 180] LR: 0.100000
Epoch: [50][0/25]	Time 0.738 (0.738)	Data 0.752 (0.752)	Loss 0.5916 (0.5916)	Acc@1 89.111 (89.111)	Acc@5 99.658 (99.658)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(27, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(27, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(13, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 467442 ; 487386 ; 0.9590796617055065

Epoch: [51 | 180] LR: 0.100000
Epoch: [51][0/25]	Time 0.689 (0.689)	Data 0.759 (0.759)	Loss 0.5739 (0.5739)	Acc@1 89.209 (89.209)	Acc@5 99.902 (99.902)

Epoch: [52 | 180] LR: 0.100000
Epoch: [52][0/25]	Time 0.739 (0.739)	Data 0.720 (0.720)	Loss 0.6113 (0.6113)	Acc@1 88.135 (88.135)	Acc@5 99.463 (99.463)

Epoch: [53 | 180] LR: 0.100000
Epoch: [53][0/25]	Time 0.741 (0.741)	Data 0.733 (0.733)	Loss 0.5887 (0.5887)	Acc@1 88.184 (88.184)	Acc@5 99.902 (99.902)

Epoch: [54 | 180] LR: 0.100000
Epoch: [54][0/25]	Time 0.734 (0.734)	Data 0.776 (0.776)	Loss 0.6025 (0.6025)	Acc@1 87.988 (87.988)	Acc@5 99.658 (99.658)

Epoch: [55 | 180] LR: 0.100000
Epoch: [55][0/25]	Time 0.678 (0.678)	Data 0.757 (0.757)	Loss 0.6050 (0.6050)	Acc@1 88.281 (88.281)	Acc@5 99.805 (99.805)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(23, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(7, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 459638 ; 487386 ; 0.9430677122445044

Epoch: [56 | 180] LR: 0.100000
Epoch: [56][0/25]	Time 0.747 (0.747)	Data 0.721 (0.721)	Loss 0.5571 (0.5571)	Acc@1 90.381 (90.381)	Acc@5 99.854 (99.854)

Epoch: [57 | 180] LR: 0.100000
Epoch: [57][0/25]	Time 0.736 (0.736)	Data 0.748 (0.748)	Loss 0.5410 (0.5410)	Acc@1 90.039 (90.039)	Acc@5 99.756 (99.756)

Epoch: [58 | 180] LR: 0.100000
Epoch: [58][0/25]	Time 0.719 (0.719)	Data 0.736 (0.736)	Loss 0.6007 (0.6007)	Acc@1 88.477 (88.477)	Acc@5 99.707 (99.707)

Epoch: [59 | 180] LR: 0.100000
Epoch: [59][0/25]	Time 0.760 (0.760)	Data 0.730 (0.730)	Loss 0.5382 (0.5382)	Acc@1 90.723 (90.723)	Acc@5 99.658 (99.658)

Epoch: [60 | 180] LR: 0.100000
Epoch: [60][0/25]	Time 0.727 (0.727)	Data 0.714 (0.714)	Loss 0.5594 (0.5594)	Acc@1 90.186 (90.186)	Acc@5 99.805 (99.805)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(2, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(21, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 454438 ; 487386 ; 0.9323985506354306

Epoch: [61 | 180] LR: 0.100000
Epoch: [61][0/25]	Time 0.706 (0.706)	Data 0.715 (0.715)	Loss 0.5627 (0.5627)	Acc@1 90.088 (90.088)	Acc@5 99.707 (99.707)

Epoch: [62 | 180] LR: 0.100000
Epoch: [62][0/25]	Time 0.725 (0.725)	Data 0.728 (0.728)	Loss 0.5367 (0.5367)	Acc@1 90.723 (90.723)	Acc@5 99.658 (99.658)

Epoch: [63 | 180] LR: 0.100000
Epoch: [63][0/25]	Time 0.753 (0.753)	Data 0.722 (0.722)	Loss 0.5616 (0.5616)	Acc@1 89.404 (89.404)	Acc@5 99.854 (99.854)

Epoch: [64 | 180] LR: 0.100000
Epoch: [64][0/25]	Time 0.749 (0.749)	Data 0.695 (0.695)	Loss 0.5615 (0.5615)	Acc@1 89.648 (89.648)	Acc@5 99.609 (99.609)

Epoch: [65 | 180] LR: 0.100000
Epoch: [65][0/25]	Time 0.704 (0.704)	Data 0.722 (0.722)	Loss 0.6304 (0.6304)	Acc@1 87.744 (87.744)	Acc@5 99.707 (99.707)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(20, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(2, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 450968 ; 487386 ; 0.9252789370232218

Epoch: [66 | 180] LR: 0.100000
Epoch: [66][0/25]	Time 0.672 (0.672)	Data 0.676 (0.676)	Loss 0.6081 (0.6081)	Acc@1 88.574 (88.574)	Acc@5 99.658 (99.658)

Epoch: [67 | 180] LR: 0.100000
Epoch: [67][0/25]	Time 0.669 (0.669)	Data 0.643 (0.643)	Loss 0.5484 (0.5484)	Acc@1 90.039 (90.039)	Acc@5 99.756 (99.756)

Epoch: [68 | 180] LR: 0.100000
Epoch: [68][0/25]	Time 0.743 (0.743)	Data 0.788 (0.788)	Loss 0.5563 (0.5563)	Acc@1 90.723 (90.723)	Acc@5 99.854 (99.854)

Epoch: [69 | 180] LR: 0.100000
Epoch: [69][0/25]	Time 0.755 (0.755)	Data 0.769 (0.769)	Loss 0.5933 (0.5933)	Acc@1 89.160 (89.160)	Acc@5 99.658 (99.658)

Epoch: [70 | 180] LR: 0.100000
Epoch: [70][0/25]	Time 0.718 (0.718)	Data 0.679 (0.679)	Loss 0.5665 (0.5665)	Acc@1 89.404 (89.404)	Acc@5 99.609 (99.609)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...

 RM:  module.conv19.weight

 RM:  module.conv20.weight

Module List Length:  68
Index1: 36
Index: 19


Stage:  0


	Block:  0
j: 2; k: 2
Bool1: False
Bool2: True
j: 3; k: 2
Bool1: False
Bool2: True


	Block:  1
j: 4; k: 4
Bool1: False
Bool2: True
j: 5; k: 4
Bool1: False
Bool2: True


	Block:  2
j: 6; k: 6
Bool1: False
Bool2: True
j: 7; k: 6
Bool1: False
Bool2: True


	Block:  3
j: 8; k: 8
Bool1: False
Bool2: True
j: 9; k: 8
Bool1: False
Bool2: True


	Block:  4
j: 10; k: 10
Bool1: False
Bool2: True
j: 11; k: 10
Bool1: False
Bool2: True


Stage:  1


	Block:  0
j: 12; k: 12
Bool1: False
Bool2: False
j: 13; k: 12
Bool1: False
Bool2: False
j: 14; k: 12
Bool1: False
Bool2: False


	Block:  1
j: 15; k: 15
Bool1: False
Bool2: True
j: 16; k: 15
Bool1: False
Bool2: True


	Block:  2
j: 17; k: 17
Bool1: False
Bool2: True
j: 18; k: 17
Bool1: False
Bool2: True


	Block:  3
j: 19; k: 19
Bool1: True
Bool2: True
numDelete: 2
j: 20; k: 19
Bool1: False
Bool2: True


	Block:  4
j: 21; k: 21
Bool1: False
Bool2: True
j: 22; k: 21
Bool1: False
Bool2: True


Stage:  2


	Block:  0
j: 23; k: 23
Bool1: False
Bool2: False
j: 24; k: 23
Bool1: False
Bool2: False
j: 25; k: 23
Bool1: False
Bool2: False


	Block:  1
j: 26; k: 26
Bool1: False
Bool2: True
j: 27; k: 26
Bool1: False
Bool2: True


	Block:  2
j: 28; k: 28
Bool1: False
Bool2: True
j: 29; k: 28
Bool1: False
Bool2: True


	Block:  3
j: 30; k: 30
Bool1: False
Bool2: True
j: 31; k: 30
Bool1: False
Bool2: True


	Block:  4
j: 32; k: 32
Bool1: False
Bool2: True
j: 33; k: 32
Bool1: False
Bool2: True
Kopiere 0: Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 1: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 2: Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 3: BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 4: Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 5: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 6: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 7: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 8: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 9: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 10: Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 11: BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 12: Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 13: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 14: Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 15: BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 16: Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 17: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 18: Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 19: BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 20: Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 21: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 22: Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
Kopiere 23: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 24: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 25: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 26: Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
Kopiere 27: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 28: Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 29: BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 30: Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 31: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 32: Conv2d(32, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 33: BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 34: Conv2d(20, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 35: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 36: Conv2d(32, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 37: BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 38: Conv2d(2, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 39: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 40: Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 41: BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 42: Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 43: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 44: Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
Kopiere 45: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 46: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 47: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 48: Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
Kopiere 49: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 50: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 51: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 52: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 53: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 54: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 55: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 56: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 57: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 58: Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 59: BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 60: Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 61: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Shape1: torch.Size([63, 64, 3, 3])
Traceback (most recent call last):
  File "main.py", line 725, in <module>
    main()
  File "main.py", line 332, in main
    genDenseModel(model, dense_chs, optimizer, 'cifar', use_gpu)
  File "/home/jessica.buehler/MA_Source/src/checkpoint_utils.py", line 307, in genDenseModel
    model.delete(module, index)
  File "/home/jessica.buehler/MA_Source/src/n2n.py", line 689, in delete
    print(f'Shape2: {self.module_list[layers + 2 * numDelete].weight.size()}')
  File "/home/jessica.buehler/env/local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 576, in __getattr__
    type(self).__name__, name))
AttributeError: 'AdaptiveAvgPool2d' object has no attribute 'weight'
no display found. Using non-interactive Agg backend
[5, 5, 5]
Cifar10: True; cifar100: False
False
Files already downloaded and verified

Arch Num:  [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
count0: 487386

Epoch: [1 | 180] LR: 0.100000
Epoch: [1][0/25]	Time 0.781 (0.781)	Data 0.728 (0.728)	Loss 3.2354 (3.2354)	Acc@1 10.205 (10.205)	Acc@5 50.000 (50.000)

Epoch: [2 | 180] LR: 0.100000
Epoch: [2][0/25]	Time 0.708 (0.708)	Data 0.648 (0.648)	Loss 3.0217 (3.0217)	Acc@1 10.889 (10.889)	Acc@5 50.928 (50.928)

Epoch: [3 | 180] LR: 0.100000
Epoch: [3][0/25]	Time 0.770 (0.770)	Data 0.810 (0.810)	Loss 2.9649 (2.9649)	Acc@1 11.182 (11.182)	Acc@5 52.246 (52.246)

Epoch: [4 | 180] LR: 0.100000
Epoch: [4][0/25]	Time 0.740 (0.740)	Data 0.714 (0.714)	Loss 2.9008 (2.9008)	Acc@1 12.549 (12.549)	Acc@5 57.129 (57.129)

Epoch: [5 | 180] LR: 0.100000
Epoch: [5][0/25]	Time 0.707 (0.707)	Data 0.835 (0.835)	Loss 2.6077 (2.6077)	Acc@1 22.900 (22.900)	Acc@5 75.879 (75.879)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [6 | 180] LR: 0.100000
Epoch: [6][0/25]	Time 0.771 (0.771)	Data 0.732 (0.732)	Loss 2.4177 (2.4177)	Acc@1 25.537 (25.537)	Acc@5 82.031 (82.031)

Epoch: [7 | 180] LR: 0.100000
Epoch: [7][0/25]	Time 0.747 (0.747)	Data 0.712 (0.712)	Loss 2.1600 (2.1600)	Acc@1 35.059 (35.059)	Acc@5 88.428 (88.428)

Epoch: [8 | 180] LR: 0.100000
Epoch: [8][0/25]	Time 0.777 (0.777)	Data 0.662 (0.662)	Loss 2.0212 (2.0212)	Acc@1 41.992 (41.992)	Acc@5 90.869 (90.869)

Epoch: [9 | 180] LR: 0.100000
Epoch: [9][0/25]	Time 0.760 (0.760)	Data 0.707 (0.707)	Loss 1.8464 (1.8464)	Acc@1 47.314 (47.314)	Acc@5 92.139 (92.139)

Epoch: [10 | 180] LR: 0.100000
Epoch: [10][0/25]	Time 0.737 (0.737)	Data 0.714 (0.714)	Loss 1.6489 (1.6489)	Acc@1 54.199 (54.199)	Acc@5 94.775 (94.775)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [11 | 180] LR: 0.100000
Epoch: [11][0/25]	Time 0.718 (0.718)	Data 0.657 (0.657)	Loss 1.4325 (1.4325)	Acc@1 62.939 (62.939)	Acc@5 96.191 (96.191)

Epoch: [12 | 180] LR: 0.100000
Epoch: [12][0/25]	Time 0.730 (0.730)	Data 0.684 (0.684)	Loss 1.3305 (1.3305)	Acc@1 65.869 (65.869)	Acc@5 97.168 (97.168)

Epoch: [13 | 180] LR: 0.100000
Epoch: [13][0/25]	Time 0.696 (0.696)	Data 0.789 (0.789)	Loss 1.1129 (1.1129)	Acc@1 72.461 (72.461)	Acc@5 97.754 (97.754)

Epoch: [14 | 180] LR: 0.100000
Epoch: [14][0/25]	Time 0.729 (0.729)	Data 0.682 (0.682)	Loss 1.0460 (1.0460)	Acc@1 73.877 (73.877)	Acc@5 98.486 (98.486)

Epoch: [15 | 180] LR: 0.100000
Epoch: [15][0/25]	Time 0.743 (0.743)	Data 0.848 (0.848)	Loss 0.9586 (0.9586)	Acc@1 77.148 (77.148)	Acc@5 98.633 (98.633)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [16 | 180] LR: 0.100000
Epoch: [16][0/25]	Time 0.698 (0.698)	Data 0.794 (0.794)	Loss 0.9577 (0.9577)	Acc@1 77.148 (77.148)	Acc@5 98.730 (98.730)

Epoch: [17 | 180] LR: 0.100000
Epoch: [17][0/25]	Time 0.714 (0.714)	Data 0.763 (0.763)	Loss 0.8866 (0.8866)	Acc@1 79.248 (79.248)	Acc@5 98.926 (98.926)

Epoch: [18 | 180] LR: 0.100000
Epoch: [18][0/25]	Time 0.734 (0.734)	Data 0.754 (0.754)	Loss 0.8566 (0.8566)	Acc@1 79.980 (79.980)	Acc@5 98.926 (98.926)

Epoch: [19 | 180] LR: 0.100000
Epoch: [19][0/25]	Time 0.711 (0.711)	Data 0.687 (0.687)	Loss 0.8485 (0.8485)	Acc@1 80.908 (80.908)	Acc@5 99.072 (99.072)

Epoch: [20 | 180] LR: 0.100000
Epoch: [20][0/25]	Time 0.771 (0.771)	Data 0.767 (0.767)	Loss 0.8122 (0.8122)	Acc@1 81.641 (81.641)	Acc@5 99.268 (99.268)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [21 | 180] LR: 0.100000
Epoch: [21][0/25]	Time 0.685 (0.685)	Data 0.643 (0.643)	Loss 0.7706 (0.7706)	Acc@1 83.105 (83.105)	Acc@5 99.219 (99.219)

Epoch: [22 | 180] LR: 0.100000
Epoch: [22][0/25]	Time 0.696 (0.696)	Data 0.675 (0.675)	Loss 0.7334 (0.7334)	Acc@1 84.717 (84.717)	Acc@5 99.512 (99.512)

Epoch: [23 | 180] LR: 0.100000
Epoch: [23][0/25]	Time 0.749 (0.749)	Data 0.710 (0.710)	Loss 0.7335 (0.7335)	Acc@1 83.887 (83.887)	Acc@5 99.463 (99.463)

Epoch: [24 | 180] LR: 0.100000
Epoch: [24][0/25]	Time 0.758 (0.758)	Data 0.656 (0.656)	Loss 0.6864 (0.6864)	Acc@1 86.426 (86.426)	Acc@5 99.463 (99.463)

Epoch: [25 | 180] LR: 0.100000
Epoch: [25][0/25]	Time 0.775 (0.775)	Data 0.707 (0.707)	Loss 0.7414 (0.7414)	Acc@1 83.887 (83.887)	Acc@5 99.463 (99.463)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [26 | 180] LR: 0.100000
Epoch: [26][0/25]	Time 0.720 (0.720)	Data 0.673 (0.673)	Loss 0.7067 (0.7067)	Acc@1 85.889 (85.889)	Acc@5 99.414 (99.414)

Epoch: [27 | 180] LR: 0.100000
Epoch: [27][0/25]	Time 0.755 (0.755)	Data 0.634 (0.634)	Loss 0.7099 (0.7099)	Acc@1 85.107 (85.107)	Acc@5 99.512 (99.512)

Epoch: [28 | 180] LR: 0.100000
Epoch: [28][0/25]	Time 0.785 (0.785)	Data 0.695 (0.695)	Loss 0.6820 (0.6820)	Acc@1 85.889 (85.889)	Acc@5 99.561 (99.561)

Epoch: [29 | 180] LR: 0.100000
Epoch: [29][0/25]	Time 0.720 (0.720)	Data 0.657 (0.657)	Loss 0.7262 (0.7262)	Acc@1 83.887 (83.887)	Acc@5 99.561 (99.561)

Epoch: [30 | 180] LR: 0.100000
Epoch: [30][0/25]	Time 0.739 (0.739)	Data 0.745 (0.745)	Loss 0.6640 (0.6640)	Acc@1 87.207 (87.207)	Acc@5 99.170 (99.170)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 482770 ; 487386 ; 0.9905290673100992

Epoch: [31 | 180] LR: 0.100000
Epoch: [31][0/25]	Time 0.718 (0.718)	Data 0.695 (0.695)	Loss 0.6969 (0.6969)	Acc@1 85.742 (85.742)	Acc@5 99.365 (99.365)

Epoch: [32 | 180] LR: 0.100000
Epoch: [32][0/25]	Time 0.749 (0.749)	Data 0.660 (0.660)	Loss 0.6609 (0.6609)	Acc@1 85.547 (85.547)	Acc@5 99.561 (99.561)

Epoch: [33 | 180] LR: 0.100000
Epoch: [33][0/25]	Time 0.728 (0.728)	Data 0.645 (0.645)	Loss 0.6763 (0.6763)	Acc@1 86.328 (86.328)	Acc@5 99.121 (99.121)

Epoch: [34 | 180] LR: 0.100000
Epoch: [34][0/25]	Time 0.740 (0.740)	Data 0.694 (0.694)	Loss 0.6918 (0.6918)	Acc@1 85.596 (85.596)	Acc@5 99.512 (99.512)

Epoch: [35 | 180] LR: 0.100000
Epoch: [35][0/25]	Time 0.724 (0.724)	Data 0.645 (0.645)	Loss 0.7027 (0.7027)	Acc@1 85.889 (85.889)	Acc@5 99.365 (99.365)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 58, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(58, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 480462 ; 487386 ; 0.9857936009651488

Epoch: [36 | 180] LR: 0.100000
Epoch: [36][0/25]	Time 0.693 (0.693)	Data 0.707 (0.707)	Loss 0.6958 (0.6958)	Acc@1 86.084 (86.084)	Acc@5 99.658 (99.658)

Epoch: [37 | 180] LR: 0.100000
Epoch: [37][0/25]	Time 0.665 (0.665)	Data 0.654 (0.654)	Loss 0.6454 (0.6454)	Acc@1 87.012 (87.012)	Acc@5 99.512 (99.512)

Epoch: [38 | 180] LR: 0.100000
Epoch: [38][0/25]	Time 0.746 (0.746)	Data 0.708 (0.708)	Loss 0.6652 (0.6652)	Acc@1 86.914 (86.914)	Acc@5 99.512 (99.512)

Epoch: [39 | 180] LR: 0.100000
Epoch: [39][0/25]	Time 0.757 (0.757)	Data 0.842 (0.842)	Loss 0.6732 (0.6732)	Acc@1 86.768 (86.768)	Acc@5 99.658 (99.658)

Epoch: [40 | 180] LR: 0.100000
Epoch: [40][0/25]	Time 0.770 (0.770)	Data 0.699 (0.699)	Loss 0.6868 (0.6868)	Acc@1 86.182 (86.182)	Acc@5 99.609 (99.609)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 49, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(49, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(49, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 469786 ; 487386 ; 0.9638889914769813

Epoch: [41 | 180] LR: 0.100000
Epoch: [41][0/25]	Time 0.767 (0.767)	Data 0.656 (0.656)	Loss 0.7014 (0.7014)	Acc@1 85.254 (85.254)	Acc@5 99.463 (99.463)

Epoch: [42 | 180] LR: 0.100000
Epoch: [42][0/25]	Time 0.708 (0.708)	Data 0.723 (0.723)	Loss 0.6483 (0.6483)	Acc@1 87.402 (87.402)	Acc@5 99.316 (99.316)

Epoch: [43 | 180] LR: 0.100000
Epoch: [43][0/25]	Time 0.772 (0.772)	Data 0.634 (0.634)	Loss 0.6709 (0.6709)	Acc@1 87.109 (87.109)	Acc@5 99.707 (99.707)

Epoch: [44 | 180] LR: 0.100000
Epoch: [44][0/25]	Time 0.755 (0.755)	Data 0.711 (0.711)	Loss 0.7259 (0.7259)	Acc@1 84.619 (84.619)	Acc@5 98.730 (98.730)

Epoch: [45 | 180] LR: 0.100000
Epoch: [45][0/25]	Time 0.712 (0.712)	Data 0.670 (0.670)	Loss 0.6438 (0.6438)	Acc@1 87.695 (87.695)	Acc@5 99.561 (99.561)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(44, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 462284 ; 487386 ; 0.9484966740940446

Epoch: [46 | 180] LR: 0.100000
Epoch: [46][0/25]	Time 0.741 (0.741)	Data 0.761 (0.761)	Loss 0.6484 (0.6484)	Acc@1 88.086 (88.086)	Acc@5 99.365 (99.365)

Epoch: [47 | 180] LR: 0.100000
Epoch: [47][0/25]	Time 0.676 (0.676)	Data 0.647 (0.647)	Loss 0.6187 (0.6187)	Acc@1 88.525 (88.525)	Acc@5 99.414 (99.414)

Epoch: [48 | 180] LR: 0.100000
Epoch: [48][0/25]	Time 0.765 (0.765)	Data 0.692 (0.692)	Loss 0.6440 (0.6440)	Acc@1 88.232 (88.232)	Acc@5 99.658 (99.658)

Epoch: [49 | 180] LR: 0.100000
Epoch: [49][0/25]	Time 0.676 (0.676)	Data 0.840 (0.840)	Loss 0.6305 (0.6305)	Acc@1 88.184 (88.184)	Acc@5 99.268 (99.268)

Epoch: [50 | 180] LR: 0.100000
Epoch: [50][0/25]	Time 0.711 (0.711)	Data 0.762 (0.762)	Loss 0.6268 (0.6268)	Acc@1 88.232 (88.232)	Acc@5 99.561 (99.561)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 35, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(35, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(35, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 450740 ; 487386 ; 0.924811135321901

Epoch: [51 | 180] LR: 0.100000
Epoch: [51][0/25]	Time 0.705 (0.705)	Data 0.763 (0.763)	Loss 0.5984 (0.5984)	Acc@1 89.746 (89.746)	Acc@5 99.512 (99.512)

Epoch: [52 | 180] LR: 0.100000
Epoch: [52][0/25]	Time 0.705 (0.705)	Data 0.784 (0.784)	Loss 0.6011 (0.6011)	Acc@1 89.697 (89.697)	Acc@5 99.854 (99.854)

Epoch: [53 | 180] LR: 0.100000
Epoch: [53][0/25]	Time 0.783 (0.783)	Data 0.620 (0.620)	Loss 0.6595 (0.6595)	Acc@1 87.158 (87.158)	Acc@5 99.463 (99.463)

Epoch: [54 | 180] LR: 0.100000
Epoch: [54][0/25]	Time 0.721 (0.721)	Data 0.755 (0.755)	Loss 0.6212 (0.6212)	Acc@1 88.672 (88.672)	Acc@5 99.756 (99.756)

Epoch: [55 | 180] LR: 0.100000
Epoch: [55][0/25]	Time 0.788 (0.788)	Data 0.726 (0.726)	Loss 0.6246 (0.6246)	Acc@1 88.477 (88.477)	Acc@5 99.512 (99.512)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(27, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(27, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 441218 ; 487386 ; 0.9052742590062086

Epoch: [56 | 180] LR: 0.100000
Epoch: [56][0/25]	Time 0.769 (0.769)	Data 0.754 (0.754)	Loss 0.5890 (0.5890)	Acc@1 89.014 (89.014)	Acc@5 99.609 (99.609)

Epoch: [57 | 180] LR: 0.100000
Epoch: [57][0/25]	Time 0.766 (0.766)	Data 0.765 (0.765)	Loss 0.5201 (0.5201)	Acc@1 89.941 (89.941)	Acc@5 99.561 (99.561)

Epoch: [58 | 180] LR: 0.100000
Epoch: [58][0/25]	Time 0.775 (0.775)	Data 0.659 (0.659)	Loss 0.6033 (0.6033)	Acc@1 88.428 (88.428)	Acc@5 99.414 (99.414)

Epoch: [59 | 180] LR: 0.100000
Epoch: [59][0/25]	Time 0.690 (0.690)	Data 0.829 (0.829)	Loss 0.5620 (0.5620)	Acc@1 89.844 (89.844)	Acc@5 99.561 (99.561)

Epoch: [60 | 180] LR: 0.100000
Epoch: [60][0/25]	Time 0.725 (0.725)	Data 0.690 (0.690)	Loss 0.5513 (0.5513)	Acc@1 89.941 (89.941)	Acc@5 99.756 (99.756)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(25, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 437754 ; 487386 ; 0.8981669559650872

Epoch: [61 | 180] LR: 0.100000
Epoch: [61][0/25]	Time 0.755 (0.755)	Data 0.707 (0.707)	Loss 0.5453 (0.5453)	Acc@1 89.844 (89.844)	Acc@5 99.756 (99.756)

Epoch: [62 | 180] LR: 0.100000
Epoch: [62][0/25]	Time 0.752 (0.752)	Data 0.719 (0.719)	Loss 0.5398 (0.5398)	Acc@1 90.430 (90.430)	Acc@5 99.756 (99.756)

Epoch: [63 | 180] LR: 0.100000
Epoch: [63][0/25]	Time 0.796 (0.796)	Data 0.724 (0.724)	Loss 0.5915 (0.5915)	Acc@1 88.330 (88.330)	Acc@5 99.951 (99.951)

Epoch: [64 | 180] LR: 0.100000
Epoch: [64][0/25]	Time 0.746 (0.746)	Data 0.688 (0.688)	Loss 0.5826 (0.5826)	Acc@1 88.525 (88.525)	Acc@5 99.463 (99.463)

Epoch: [65 | 180] LR: 0.100000
Epoch: [65][0/25]	Time 0.700 (0.700)	Data 0.730 (0.730)	Loss 0.5607 (0.5607)	Acc@1 88.672 (88.672)	Acc@5 99.805 (99.805)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(22, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 433714 ; 487386 ; 0.8898778380995761

Epoch: [66 | 180] LR: 0.100000
Epoch: [66][0/25]	Time 0.753 (0.753)	Data 0.653 (0.653)	Loss 0.5958 (0.5958)	Acc@1 88.232 (88.232)	Acc@5 99.658 (99.658)

Epoch: [67 | 180] LR: 0.100000
Epoch: [67][0/25]	Time 0.749 (0.749)	Data 0.737 (0.737)	Loss 0.5015 (0.5015)	Acc@1 91.064 (91.064)	Acc@5 99.658 (99.658)

Epoch: [68 | 180] LR: 0.100000
Epoch: [68][0/25]	Time 0.695 (0.695)	Data 0.695 (0.695)	Loss 0.5530 (0.5530)	Acc@1 89.746 (89.746)	Acc@5 99.805 (99.805)

Epoch: [69 | 180] LR: 0.100000
Epoch: [69][0/25]	Time 0.760 (0.760)	Data 0.650 (0.650)	Loss 0.5767 (0.5767)	Acc@1 88.037 (88.037)	Acc@5 99.756 (99.756)

Epoch: [70 | 180] LR: 0.100000
Epoch: [70][0/25]	Time 0.733 (0.733)	Data 0.668 (0.668)	Loss 0.5429 (0.5429)	Acc@1 90.234 (90.234)	Acc@5 99.463 (99.463)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(21, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 430248 ; 487386 ; 0.8827664315347589

Epoch: [71 | 180] LR: 0.100000
Epoch: [71][0/25]	Time 0.723 (0.723)	Data 0.761 (0.761)	Loss 0.6023 (0.6023)	Acc@1 88.330 (88.330)	Acc@5 99.902 (99.902)

Epoch: [72 | 180] LR: 0.100000
Epoch: [72][0/25]	Time 0.751 (0.751)	Data 0.644 (0.644)	Loss 0.5474 (0.5474)	Acc@1 89.258 (89.258)	Acc@5 99.854 (99.854)

Epoch: [73 | 180] LR: 0.100000
Epoch: [73][0/25]	Time 0.696 (0.696)	Data 0.778 (0.778)	Loss 0.5580 (0.5580)	Acc@1 89.160 (89.160)	Acc@5 99.463 (99.463)

Epoch: [74 | 180] LR: 0.100000
Epoch: [74][0/25]	Time 0.756 (0.756)	Data 0.665 (0.665)	Loss 0.5643 (0.5643)	Acc@1 89.746 (89.746)	Acc@5 99.707 (99.707)

Epoch: [75 | 180] LR: 0.100000
Epoch: [75][0/25]	Time 0.733 (0.733)	Data 0.726 (0.726)	Loss 0.5467 (0.5467)	Acc@1 89.795 (89.795)	Acc@5 99.609 (99.609)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(20, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 427070 ; 487386 ; 0.8762459323821365

Epoch: [76 | 180] LR: 0.100000
Epoch: [76][0/25]	Time 0.691 (0.691)	Data 0.642 (0.642)	Loss 0.5598 (0.5598)	Acc@1 89.453 (89.453)	Acc@5 99.902 (99.902)

Epoch: [77 | 180] LR: 0.100000
Epoch: [77][0/25]	Time 0.749 (0.749)	Data 0.759 (0.759)	Loss 0.5238 (0.5238)	Acc@1 91.260 (91.260)	Acc@5 99.805 (99.805)

Epoch: [78 | 180] LR: 0.100000
Epoch: [78][0/25]	Time 0.710 (0.710)	Data 0.641 (0.641)	Loss 0.5745 (0.5745)	Acc@1 89.014 (89.014)	Acc@5 99.561 (99.561)

Epoch: [79 | 180] LR: 0.100000
Epoch: [79][0/25]	Time 0.727 (0.727)	Data 0.667 (0.667)	Loss 0.5140 (0.5140)	Acc@1 91.113 (91.113)	Acc@5 99.951 (99.951)

Epoch: [80 | 180] LR: 0.100000
Epoch: [80][0/25]	Time 0.744 (0.744)	Data 0.723 (0.723)	Loss 0.5351 (0.5351)	Acc@1 90.137 (90.137)	Acc@5 99.658 (99.658)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(27, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(27, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(19, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 423314 ; 487386 ; 0.8685395148814287

Epoch: [81 | 180] LR: 0.100000
Epoch: [81][0/25]	Time 0.737 (0.737)	Data 0.706 (0.706)	Loss 0.5693 (0.5693)	Acc@1 89.453 (89.453)	Acc@5 99.756 (99.756)

Epoch: [82 | 180] LR: 0.100000
Epoch: [82][0/25]	Time 0.739 (0.739)	Data 0.704 (0.704)	Loss 0.5590 (0.5590)	Acc@1 89.648 (89.648)	Acc@5 99.609 (99.609)

Epoch: [83 | 180] LR: 0.100000
Epoch: [83][0/25]	Time 0.739 (0.739)	Data 0.716 (0.716)	Loss 0.5402 (0.5402)	Acc@1 89.844 (89.844)	Acc@5 99.805 (99.805)

Epoch: [84 | 180] LR: 0.100000
Epoch: [84][0/25]	Time 0.684 (0.684)	Data 0.694 (0.694)	Loss 0.5022 (0.5022)	Acc@1 91.553 (91.553)	Acc@5 99.805 (99.805)

Epoch: [85 | 180] LR: 0.100000
Epoch: [85][0/25]	Time 0.719 (0.719)	Data 0.736 (0.736)	Loss 0.5514 (0.5514)	Acc@1 89.502 (89.502)	Acc@5 99.756 (99.756)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(17, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 416382 ; 487386 ; 0.8543167017517943

Epoch: [86 | 180] LR: 0.100000
Epoch: [86][0/25]	Time 0.688 (0.688)	Data 0.811 (0.811)	Loss 0.5266 (0.5266)	Acc@1 91.309 (91.309)	Acc@5 99.756 (99.756)

Epoch: [87 | 180] LR: 0.100000
Epoch: [87][0/25]	Time 0.727 (0.727)	Data 0.654 (0.654)	Loss 0.5068 (0.5068)	Acc@1 91.309 (91.309)	Acc@5 99.658 (99.658)

Epoch: [88 | 180] LR: 0.100000
Epoch: [88][0/25]	Time 0.709 (0.709)	Data 0.714 (0.714)	Loss 0.5503 (0.5503)	Acc@1 89.844 (89.844)	Acc@5 99.609 (99.609)

Epoch: [89 | 180] LR: 0.100000
Epoch: [89][0/25]	Time 0.670 (0.670)	Data 0.669 (0.669)	Loss 0.5503 (0.5503)	Acc@1 89.795 (89.795)	Acc@5 99.805 (99.805)

Epoch: [90 | 180] LR: 0.100000
Epoch: [90][0/25]	Time 0.728 (0.728)	Data 0.654 (0.654)	Loss 0.5411 (0.5411)	Acc@1 89.990 (89.990)	Acc@5 99.805 (99.805)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 414650 ; 487386 ; 0.8507630502312336

Epoch: [91 | 180] LR: 0.100000
Epoch: [91][0/25]	Time 0.747 (0.747)	Data 0.809 (0.809)	Loss 0.5548 (0.5548)	Acc@1 89.551 (89.551)	Acc@5 99.805 (99.805)

Epoch: [92 | 180] LR: 0.100000
Epoch: [92][0/25]	Time 0.706 (0.706)	Data 0.661 (0.661)	Loss 0.5313 (0.5313)	Acc@1 90.283 (90.283)	Acc@5 99.756 (99.756)

Epoch: [93 | 180] LR: 0.040000
Epoch: [93][0/25]	Time 0.706 (0.706)	Data 0.708 (0.708)	Loss 0.5421 (0.5421)	Acc@1 90.234 (90.234)	Acc@5 99.707 (99.707)

Epoch: [94 | 180] LR: 0.040000
Epoch: [94][0/25]	Time 0.755 (0.755)	Data 0.659 (0.659)	Loss 0.4307 (0.4307)	Acc@1 94.092 (94.092)	Acc@5 99.902 (99.902)

Epoch: [95 | 180] LR: 0.040000
Epoch: [95][0/25]	Time 0.727 (0.727)	Data 0.733 (0.733)	Loss 0.3800 (0.3800)	Acc@1 95.605 (95.605)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 414216 ; 487386 ; 0.8498725855892455

Epoch: [96 | 180] LR: 0.040000
Epoch: [96][0/25]	Time 0.683 (0.683)	Data 0.651 (0.651)	Loss 0.3668 (0.3668)	Acc@1 95.703 (95.703)	Acc@5 100.000 (100.000)

Epoch: [97 | 180] LR: 0.040000
Epoch: [97][0/25]	Time 0.761 (0.761)	Data 0.691 (0.691)	Loss 0.3618 (0.3618)	Acc@1 95.898 (95.898)	Acc@5 99.951 (99.951)

Epoch: [98 | 180] LR: 0.040000
Epoch: [98][0/25]	Time 0.718 (0.718)	Data 0.794 (0.794)	Loss 0.3316 (0.3316)	Acc@1 97.217 (97.217)	Acc@5 99.951 (99.951)

Epoch: [99 | 180] LR: 0.040000
Epoch: [99][0/25]	Time 0.683 (0.683)	Data 0.704 (0.704)	Loss 0.3344 (0.3344)	Acc@1 96.680 (96.680)	Acc@5 99.951 (99.951)

Epoch: [100 | 180] LR: 0.040000
Epoch: [100][0/25]	Time 0.709 (0.709)	Data 0.766 (0.766)	Loss 0.3203 (0.3203)	Acc@1 97.070 (97.070)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 413062 ; 487386 ; 0.8475048524167703

Epoch: [101 | 180] LR: 0.040000
Epoch: [101][0/25]	Time 0.709 (0.709)	Data 0.665 (0.665)	Loss 0.3261 (0.3261)	Acc@1 96.680 (96.680)	Acc@5 100.000 (100.000)

Epoch: [102 | 180] LR: 0.040000
Epoch: [102][0/25]	Time 0.710 (0.710)	Data 0.696 (0.696)	Loss 0.3167 (0.3167)	Acc@1 97.021 (97.021)	Acc@5 100.000 (100.000)

Epoch: [103 | 180] LR: 0.040000
Epoch: [103][0/25]	Time 0.718 (0.718)	Data 0.704 (0.704)	Loss 0.3208 (0.3208)	Acc@1 96.777 (96.777)	Acc@5 100.000 (100.000)

Epoch: [104 | 180] LR: 0.040000
Epoch: [104][0/25]	Time 0.607 (0.607)	Data 0.655 (0.655)	Loss 0.3126 (0.3126)	Acc@1 97.266 (97.266)	Acc@5 100.000 (100.000)

Epoch: [105 | 180] LR: 0.040000
Epoch: [105][0/25]	Time 0.748 (0.748)	Data 0.666 (0.666)	Loss 0.3315 (0.3315)	Acc@1 97.510 (97.510)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [106 | 180] LR: 0.040000
Epoch: [106][0/25]	Time 0.724 (0.724)	Data 0.645 (0.645)	Loss 0.3160 (0.3160)	Acc@1 98.193 (98.193)	Acc@5 100.000 (100.000)

Epoch: [107 | 180] LR: 0.040000
Epoch: [107][0/25]	Time 0.686 (0.686)	Data 0.716 (0.716)	Loss 0.3127 (0.3127)	Acc@1 97.656 (97.656)	Acc@5 100.000 (100.000)

Epoch: [108 | 180] LR: 0.040000
Epoch: [108][0/25]	Time 0.748 (0.748)	Data 0.718 (0.718)	Loss 0.3063 (0.3063)	Acc@1 98.389 (98.389)	Acc@5 99.902 (99.902)

Epoch: [109 | 180] LR: 0.040000
Epoch: [109][0/25]	Time 0.728 (0.728)	Data 0.660 (0.660)	Loss 0.3058 (0.3058)	Acc@1 98.193 (98.193)	Acc@5 99.951 (99.951)

Epoch: [110 | 180] LR: 0.040000
Epoch: [110][0/25]	Time 0.694 (0.694)	Data 0.737 (0.737)	Loss 0.2942 (0.2942)	Acc@1 98.486 (98.486)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [111 | 180] LR: 0.040000
Epoch: [111][0/25]	Time 0.696 (0.696)	Data 0.699 (0.699)	Loss 0.2981 (0.2981)	Acc@1 98.438 (98.438)	Acc@5 100.000 (100.000)

Epoch: [112 | 180] LR: 0.040000
Epoch: [112][0/25]	Time 0.746 (0.746)	Data 0.662 (0.662)	Loss 0.2822 (0.2822)	Acc@1 98.535 (98.535)	Acc@5 100.000 (100.000)

Epoch: [113 | 180] LR: 0.040000
Epoch: [113][0/25]	Time 0.680 (0.680)	Data 0.687 (0.687)	Loss 0.2866 (0.2866)	Acc@1 98.486 (98.486)	Acc@5 99.951 (99.951)

Epoch: [114 | 180] LR: 0.040000
Epoch: [114][0/25]	Time 0.679 (0.679)	Data 0.728 (0.728)	Loss 0.2755 (0.2755)	Acc@1 98.828 (98.828)	Acc@5 100.000 (100.000)

Epoch: [115 | 180] LR: 0.040000
Epoch: [115][0/25]	Time 0.709 (0.709)	Data 0.706 (0.706)	Loss 0.2908 (0.2908)	Acc@1 98.193 (98.193)	Acc@5 99.902 (99.902)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(15, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 410464 ; 487386 ; 0.8421743751359292

Epoch: [116 | 180] LR: 0.040000
Epoch: [116][0/25]	Time 0.695 (0.695)	Data 0.781 (0.781)	Loss 0.2652 (0.2652)	Acc@1 99.219 (99.219)	Acc@5 100.000 (100.000)

Epoch: [117 | 180] LR: 0.040000
Epoch: [117][0/25]	Time 0.710 (0.710)	Data 0.718 (0.718)	Loss 0.2700 (0.2700)	Acc@1 98.584 (98.584)	Acc@5 99.951 (99.951)

Epoch: [118 | 180] LR: 0.040000
Epoch: [118][0/25]	Time 0.763 (0.763)	Data 0.726 (0.726)	Loss 0.2727 (0.2727)	Acc@1 98.535 (98.535)	Acc@5 99.951 (99.951)

Epoch: [119 | 180] LR: 0.040000
Epoch: [119][0/25]	Time 0.754 (0.754)	Data 0.738 (0.738)	Loss 0.2736 (0.2736)	Acc@1 98.340 (98.340)	Acc@5 99.951 (99.951)

Epoch: [120 | 180] LR: 0.040000
Epoch: [120][0/25]	Time 0.696 (0.696)	Data 0.698 (0.698)	Loss 0.2613 (0.2613)	Acc@1 98.877 (98.877)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(15, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 409886 ; 487386 ; 0.8409884567878437

Epoch: [121 | 180] LR: 0.040000
Epoch: [121][0/25]	Time 0.719 (0.719)	Data 0.643 (0.643)	Loss 0.2686 (0.2686)	Acc@1 98.828 (98.828)	Acc@5 100.000 (100.000)

Epoch: [122 | 180] LR: 0.040000
Epoch: [122][0/25]	Time 0.721 (0.721)	Data 0.678 (0.678)	Loss 0.2587 (0.2587)	Acc@1 98.682 (98.682)	Acc@5 100.000 (100.000)

Epoch: [123 | 180] LR: 0.040000
Epoch: [123][0/25]	Time 0.735 (0.735)	Data 0.673 (0.673)	Loss 0.2559 (0.2559)	Acc@1 98.584 (98.584)	Acc@5 100.000 (100.000)

Epoch: [124 | 180] LR: 0.040000
Epoch: [124][0/25]	Time 0.717 (0.717)	Data 0.741 (0.741)	Loss 0.2527 (0.2527)	Acc@1 98.926 (98.926)	Acc@5 99.951 (99.951)

Epoch: [125 | 180] LR: 0.040000
Epoch: [125][0/25]	Time 0.750 (0.750)	Data 0.756 (0.756)	Loss 0.2527 (0.2527)	Acc@1 98.584 (98.584)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(15, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [126 | 180] LR: 0.040000
Epoch: [126][0/25]	Time 0.692 (0.692)	Data 0.763 (0.763)	Loss 0.2603 (0.2603)	Acc@1 98.193 (98.193)	Acc@5 100.000 (100.000)

Epoch: [127 | 180] LR: 0.040000
Epoch: [127][0/25]	Time 0.638 (0.638)	Data 0.834 (0.834)	Loss 0.2425 (0.2425)	Acc@1 98.877 (98.877)	Acc@5 100.000 (100.000)

Epoch: [128 | 180] LR: 0.040000
Epoch: [128][0/25]	Time 0.745 (0.745)	Data 0.690 (0.690)	Loss 0.2467 (0.2467)	Acc@1 98.584 (98.584)	Acc@5 100.000 (100.000)

Epoch: [129 | 180] LR: 0.040000
Epoch: [129][0/25]	Time 0.742 (0.742)	Data 0.622 (0.622)	Loss 0.2421 (0.2421)	Acc@1 98.730 (98.730)	Acc@5 100.000 (100.000)

Epoch: [130 | 180] LR: 0.040000
Epoch: [130][0/25]	Time 0.690 (0.690)	Data 0.680 (0.680)	Loss 0.2497 (0.2497)	Acc@1 98.486 (98.486)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(15, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [131 | 180] LR: 0.040000
Epoch: [131][0/25]	Time 0.709 (0.709)	Data 0.687 (0.687)	Loss 0.2389 (0.2389)	Acc@1 98.779 (98.779)	Acc@5 100.000 (100.000)

Epoch: [132 | 180] LR: 0.040000
Epoch: [132][0/25]	Time 0.741 (0.741)	Data 0.679 (0.679)	Loss 0.2435 (0.2435)	Acc@1 98.486 (98.486)	Acc@5 100.000 (100.000)

Epoch: [133 | 180] LR: 0.040000
Epoch: [133][0/25]	Time 0.678 (0.678)	Data 0.767 (0.767)	Loss 0.2411 (0.2411)	Acc@1 98.291 (98.291)	Acc@5 100.000 (100.000)

Epoch: [134 | 180] LR: 0.040000
Epoch: [134][0/25]	Time 0.767 (0.767)	Data 0.792 (0.792)	Loss 0.2390 (0.2390)	Acc@1 98.438 (98.438)	Acc@5 100.000 (100.000)

Epoch: [135 | 180] LR: 0.040000
Epoch: [135][0/25]	Time 0.754 (0.754)	Data 0.660 (0.660)	Loss 0.2413 (0.2413)	Acc@1 98.389 (98.389)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(14, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 408442 ; 487386 ; 0.8380257126794779

Epoch: [136 | 180] LR: 0.040000
Epoch: [136][0/25]	Time 0.728 (0.728)	Data 0.724 (0.724)	Loss 0.2291 (0.2291)	Acc@1 98.730 (98.730)	Acc@5 100.000 (100.000)

Epoch: [137 | 180] LR: 0.040000
Epoch: [137][0/25]	Time 0.691 (0.691)	Data 0.678 (0.678)	Loss 0.2202 (0.2202)	Acc@1 99.170 (99.170)	Acc@5 100.000 (100.000)

Epoch: [138 | 180] LR: 0.040000
Epoch: [138][0/25]	Time 0.740 (0.740)	Data 0.770 (0.770)	Loss 0.2277 (0.2277)	Acc@1 98.682 (98.682)	Acc@5 100.000 (100.000)

Epoch: [139 | 180] LR: 0.040000
Epoch: [139][0/25]	Time 0.719 (0.719)	Data 0.777 (0.777)	Loss 0.2429 (0.2429)	Acc@1 98.047 (98.047)	Acc@5 100.000 (100.000)

Epoch: [140 | 180] LR: 0.040000
Epoch: [140][0/25]	Time 0.755 (0.755)	Data 0.785 (0.785)	Loss 0.2335 (0.2335)	Acc@1 98.633 (98.633)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(14, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [141 | 180] LR: 0.040000
Epoch: [141][0/25]	Time 0.705 (0.705)	Data 0.687 (0.687)	Loss 0.2331 (0.2331)	Acc@1 98.486 (98.486)	Acc@5 100.000 (100.000)

Epoch: [142 | 180] LR: 0.040000
Epoch: [142][0/25]	Time 0.749 (0.749)	Data 0.677 (0.677)	Loss 0.2261 (0.2261)	Acc@1 98.584 (98.584)	Acc@5 100.000 (100.000)

Epoch: [143 | 180] LR: 0.040000
Epoch: [143][0/25]	Time 0.702 (0.702)	Data 0.680 (0.680)	Loss 0.2350 (0.2350)	Acc@1 98.193 (98.193)	Acc@5 100.000 (100.000)

Epoch: [144 | 180] LR: 0.040000
Epoch: [144][0/25]	Time 0.684 (0.684)	Data 0.702 (0.702)	Loss 0.2287 (0.2287)	Acc@1 98.438 (98.438)	Acc@5 100.000 (100.000)

Epoch: [145 | 180] LR: 0.040000
Epoch: [145][0/25]	Time 0.669 (0.669)	Data 0.677 (0.677)	Loss 0.2214 (0.2214)	Acc@1 98.584 (98.584)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(14, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 407864 ; 487386 ; 0.8368397943313923

Epoch: [146 | 180] LR: 0.040000
Epoch: [146][0/25]	Time 0.693 (0.693)	Data 0.742 (0.742)	Loss 0.2279 (0.2279)	Acc@1 98.389 (98.389)	Acc@5 100.000 (100.000)

Epoch: [147 | 180] LR: 0.040000
Epoch: [147][0/25]	Time 0.678 (0.678)	Data 0.742 (0.742)	Loss 0.2149 (0.2149)	Acc@1 98.730 (98.730)	Acc@5 100.000 (100.000)

Epoch: [148 | 180] LR: 0.040000
Epoch: [148][0/25]	Time 0.737 (0.737)	Data 0.739 (0.739)	Loss 0.2185 (0.2185)	Acc@1 98.389 (98.389)	Acc@5 100.000 (100.000)

Epoch: [149 | 180] LR: 0.040000
Epoch: [149][0/25]	Time 0.719 (0.719)	Data 0.778 (0.778)	Loss 0.2373 (0.2373)	Acc@1 97.803 (97.803)	Acc@5 100.000 (100.000)

Epoch: [150 | 180] LR: 0.000400
Epoch: [150][0/25]	Time 0.618 (0.618)	Data 0.691 (0.691)	Loss 0.2284 (0.2284)	Acc@1 98.633 (98.633)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(14, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [151 | 180] LR: 0.000400
Epoch: [151][0/25]	Time 0.707 (0.707)	Data 0.655 (0.655)	Loss 0.2035 (0.2035)	Acc@1 98.828 (98.828)	Acc@5 100.000 (100.000)

Epoch: [152 | 180] LR: 0.000400
Epoch: [152][0/25]	Time 0.712 (0.712)	Data 0.792 (0.792)	Loss 0.2000 (0.2000)	Acc@1 98.926 (98.926)	Acc@5 100.000 (100.000)

Epoch: [153 | 180] LR: 0.000400
Epoch: [153][0/25]	Time 0.695 (0.695)	Data 0.738 (0.738)	Loss 0.2001 (0.2001)	Acc@1 98.535 (98.535)	Acc@5 100.000 (100.000)

Epoch: [154 | 180] LR: 0.000400
Epoch: [154][0/25]	Time 0.759 (0.759)	Data 0.698 (0.698)	Loss 0.1948 (0.1948)	Acc@1 99.170 (99.170)	Acc@5 100.000 (100.000)

Epoch: [155 | 180] LR: 0.000400
Epoch: [155][0/25]	Time 0.702 (0.702)	Data 0.766 (0.766)	Loss 0.1925 (0.1925)	Acc@1 99.268 (99.268)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(14, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [156 | 180] LR: 0.000400
Epoch: [156][0/25]	Time 0.686 (0.686)	Data 0.763 (0.763)	Loss 0.1946 (0.1946)	Acc@1 98.828 (98.828)	Acc@5 100.000 (100.000)

Epoch: [157 | 180] LR: 0.000400
Epoch: [157][0/25]	Time 0.747 (0.747)	Data 0.661 (0.661)	Loss 0.1897 (0.1897)	Acc@1 99.219 (99.219)	Acc@5 100.000 (100.000)

Epoch: [158 | 180] LR: 0.000400
Epoch: [158][0/25]	Time 0.733 (0.733)	Data 0.700 (0.700)	Loss 0.1927 (0.1927)	Acc@1 98.682 (98.682)	Acc@5 100.000 (100.000)

Epoch: [159 | 180] LR: 0.000400
Epoch: [159][0/25]	Time 0.699 (0.699)	Data 0.674 (0.674)	Loss 0.1916 (0.1916)	Acc@1 99.023 (99.023)	Acc@5 100.000 (100.000)

Epoch: [160 | 180] LR: 0.000400
Epoch: [160][0/25]	Time 0.703 (0.703)	Data 0.755 (0.755)	Loss 0.1882 (0.1882)	Acc@1 99.219 (99.219)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(14, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [161 | 180] LR: 0.000400
Epoch: [161][0/25]	Time 0.709 (0.709)	Data 0.690 (0.690)	Loss 0.1873 (0.1873)	Acc@1 99.121 (99.121)	Acc@5 100.000 (100.000)

Epoch: [162 | 180] LR: 0.000400
Epoch: [162][0/25]	Time 0.760 (0.760)	Data 0.666 (0.666)	Loss 0.1984 (0.1984)	Acc@1 98.779 (98.779)	Acc@5 100.000 (100.000)

Epoch: [163 | 180] LR: 0.000400
Epoch: [163][0/25]	Time 0.719 (0.719)	Data 0.643 (0.643)	Loss 0.1837 (0.1837)	Acc@1 99.365 (99.365)	Acc@5 100.000 (100.000)

Epoch: [164 | 180] LR: 0.000400
Epoch: [164][0/25]	Time 0.643 (0.643)	Data 0.682 (0.682)	Loss 0.1899 (0.1899)	Acc@1 98.828 (98.828)	Acc@5 100.000 (100.000)

Epoch: [165 | 180] LR: 0.000400
Epoch: [165][0/25]	Time 0.678 (0.678)	Data 0.690 (0.690)	Loss 0.1924 (0.1924)	Acc@1 98.975 (98.975)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(14, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [166 | 180] LR: 0.000400
Epoch: [166][0/25]	Time 0.766 (0.766)	Data 0.661 (0.661)	Loss 0.1857 (0.1857)	Acc@1 99.268 (99.268)	Acc@5 100.000 (100.000)

Epoch: [167 | 180] LR: 0.000400
Epoch: [167][0/25]	Time 0.701 (0.701)	Data 0.765 (0.765)	Loss 0.1882 (0.1882)	Acc@1 99.170 (99.170)	Acc@5 100.000 (100.000)

Epoch: [168 | 180] LR: 0.000400
Epoch: [168][0/25]	Time 0.721 (0.721)	Data 0.670 (0.670)	Loss 0.1842 (0.1842)	Acc@1 99.268 (99.268)	Acc@5 100.000 (100.000)

Epoch: [169 | 180] LR: 0.000400
Epoch: [169][0/25]	Time 0.704 (0.704)	Data 0.839 (0.839)	Loss 0.1868 (0.1868)	Acc@1 99.414 (99.414)	Acc@5 100.000 (100.000)

Epoch: [170 | 180] LR: 0.000400
Epoch: [170][0/25]	Time 0.708 (0.708)	Data 0.741 (0.741)	Loss 0.1864 (0.1864)	Acc@1 99.268 (99.268)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(14, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [171 | 180] LR: 0.000400
Epoch: [171][0/25]	Time 0.693 (0.693)	Data 0.665 (0.665)	Loss 0.1814 (0.1814)	Acc@1 99.414 (99.414)	Acc@5 100.000 (100.000)

Epoch: [172 | 180] LR: 0.000400
Epoch: [172][0/25]	Time 0.715 (0.715)	Data 0.637 (0.637)	Loss 0.1891 (0.1891)	Acc@1 99.170 (99.170)	Acc@5 100.000 (100.000)

Epoch: [173 | 180] LR: 0.000400
Epoch: [173][0/25]	Time 0.688 (0.688)	Data 0.666 (0.666)	Loss 0.1777 (0.1777)	Acc@1 99.756 (99.756)	Acc@5 100.000 (100.000)

Epoch: [174 | 180] LR: 0.000400
Epoch: [174][0/25]	Time 0.764 (0.764)	Data 0.640 (0.640)	Loss 0.1849 (0.1849)	Acc@1 99.414 (99.414)	Acc@5 100.000 (100.000)

Epoch: [175 | 180] LR: 0.000400
Epoch: [175][0/25]	Time 0.704 (0.704)	Data 0.762 (0.762)	Loss 0.1799 (0.1799)	Acc@1 99.414 (99.414)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(12, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(19, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(14, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [176 | 180] LR: 0.000400
Epoch: [176][0/25]	Time 0.704 (0.704)	Data 0.693 (0.693)	Loss 0.1833 (0.1833)	Acc@1 99.219 (99.219)	Acc@5 100.000 (100.000)

Epoch: [177 | 180] LR: 0.000400
Epoch: [177][0/25]	Time 0.755 (0.755)	Data 0.733 (0.733)	Loss 0.1812 (0.1812)	Acc@1 99.365 (99.365)	Acc@5 100.000 (100.000)

Epoch: [178 | 180] LR: 0.000400
Epoch: [178][0/25]	Time 0.713 (0.713)	Data 0.657 (0.657)	Loss 0.1845 (0.1845)	Acc@1 99.414 (99.414)	Acc@5 100.000 (100.000)

Epoch: [179 | 180] LR: 0.000400
Epoch: [179][0/25]	Time 0.677 (0.677)	Data 0.681 (0.681)	Loss 0.1801 (0.1801)	Acc@1 99.463 (99.463)	Acc@5 100.000 (100.000)

Epoch: [180 | 180] LR: 0.000400
Epoch: [180][0/25]	Time 0.750 (0.750)	Data 0.682 (0.682)	Loss 0.1800 (0.1800)	Acc@1 99.463 (99.463)	Acc@5 100.000 (100.000)

  2048
  92.41
 16.160s  no display found. Using non-interactive Agg backend
[5, 5, 5]
Cifar10: True; cifar100: False
False
Files already downloaded and verified

Arch Num:  [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
count0: 487386

Epoch: [1 | 180] LR: 0.100000
Epoch: [1][0/25]	Time 0.807 (0.807)	Data 0.678 (0.678)	Loss 3.4632 (3.4632)	Acc@1 9.424 (9.424)	Acc@5 52.148 (52.148)

Epoch: [2 | 180] LR: 0.100000
Epoch: [2][0/25]	Time 0.737 (0.737)	Data 0.712 (0.712)	Loss 3.1249 (3.1249)	Acc@1 10.352 (10.352)	Acc@5 52.246 (52.246)

Epoch: [3 | 180] LR: 0.100000
Epoch: [3][0/25]	Time 0.712 (0.712)	Data 0.692 (0.692)	Loss 3.0884 (3.0884)	Acc@1 11.182 (11.182)	Acc@5 55.127 (55.127)

Epoch: [4 | 180] LR: 0.100000
Epoch: [4][0/25]	Time 0.761 (0.761)	Data 0.668 (0.668)	Loss 3.0272 (3.0272)	Acc@1 12.109 (12.109)	Acc@5 57.178 (57.178)

Epoch: [5 | 180] LR: 0.100000
Epoch: [5][0/25]	Time 0.757 (0.757)	Data 0.621 (0.621)	Loss 2.9291 (2.9291)	Acc@1 15.479 (15.479)	Acc@5 62.744 (62.744)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [6 | 180] LR: 0.100000
Epoch: [6][0/25]	Time 0.700 (0.700)	Data 0.673 (0.673)	Loss 2.6610 (2.6610)	Acc@1 20.166 (20.166)	Acc@5 76.123 (76.123)

Epoch: [7 | 180] LR: 0.100000
Epoch: [7][0/25]	Time 0.776 (0.776)	Data 0.623 (0.623)	Loss 2.5792 (2.5792)	Acc@1 21.729 (21.729)	Acc@5 79.785 (79.785)

Epoch: [8 | 180] LR: 0.100000
Epoch: [8][0/25]	Time 0.765 (0.765)	Data 0.671 (0.671)	Loss 2.4120 (2.4120)	Acc@1 27.930 (27.930)	Acc@5 83.887 (83.887)

Epoch: [9 | 180] LR: 0.100000
Epoch: [9][0/25]	Time 0.742 (0.742)	Data 0.750 (0.750)	Loss 2.2363 (2.2363)	Acc@1 33.838 (33.838)	Acc@5 87.061 (87.061)

Epoch: [10 | 180] LR: 0.100000
Epoch: [10][0/25]	Time 0.756 (0.756)	Data 0.738 (0.738)	Loss 2.1240 (2.1240)	Acc@1 36.621 (36.621)	Acc@5 87.598 (87.598)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [11 | 180] LR: 0.100000
Epoch: [11][0/25]	Time 0.743 (0.743)	Data 0.653 (0.653)	Loss 1.9325 (1.9325)	Acc@1 45.557 (45.557)	Acc@5 91.113 (91.113)

Epoch: [12 | 180] LR: 0.100000
Epoch: [12][0/25]	Time 0.737 (0.737)	Data 0.697 (0.697)	Loss 1.7822 (1.7822)	Acc@1 49.609 (49.609)	Acc@5 92.529 (92.529)

Epoch: [13 | 180] LR: 0.100000
Epoch: [13][0/25]	Time 0.706 (0.706)	Data 0.708 (0.708)	Loss 1.6638 (1.6638)	Acc@1 52.734 (52.734)	Acc@5 94.092 (94.092)

Epoch: [14 | 180] LR: 0.100000
Epoch: [14][0/25]	Time 0.709 (0.709)	Data 0.840 (0.840)	Loss 1.4845 (1.4845)	Acc@1 59.131 (59.131)	Acc@5 95.801 (95.801)

Epoch: [15 | 180] LR: 0.100000
Epoch: [15][0/25]	Time 0.745 (0.745)	Data 0.825 (0.825)	Loss 1.4818 (1.4818)	Acc@1 57.764 (57.764)	Acc@5 95.166 (95.166)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [16 | 180] LR: 0.100000
Epoch: [16][0/25]	Time 0.786 (0.786)	Data 0.668 (0.668)	Loss 1.3181 (1.3181)	Acc@1 62.500 (62.500)	Acc@5 96.973 (96.973)

Epoch: [17 | 180] LR: 0.100000
Epoch: [17][0/25]	Time 0.703 (0.703)	Data 0.657 (0.657)	Loss 1.2212 (1.2212)	Acc@1 66.797 (66.797)	Acc@5 97.607 (97.607)

Epoch: [18 | 180] LR: 0.100000
Epoch: [18][0/25]	Time 0.748 (0.748)	Data 0.760 (0.760)	Loss 1.1199 (1.1199)	Acc@1 70.410 (70.410)	Acc@5 97.803 (97.803)

Epoch: [19 | 180] LR: 0.100000
Epoch: [19][0/25]	Time 0.746 (0.746)	Data 0.695 (0.695)	Loss 1.0521 (1.0521)	Acc@1 73.975 (73.975)	Acc@5 97.607 (97.607)

Epoch: [20 | 180] LR: 0.100000
Epoch: [20][0/25]	Time 0.754 (0.754)	Data 0.746 (0.746)	Loss 0.9629 (0.9629)	Acc@1 74.658 (74.658)	Acc@5 97.852 (97.852)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [21 | 180] LR: 0.100000
Epoch: [21][0/25]	Time 0.763 (0.763)	Data 0.672 (0.672)	Loss 0.9306 (0.9306)	Acc@1 76.758 (76.758)	Acc@5 98.633 (98.633)

Epoch: [22 | 180] LR: 0.100000
Epoch: [22][0/25]	Time 0.777 (0.777)	Data 0.696 (0.696)	Loss 0.8882 (0.8882)	Acc@1 78.223 (78.223)	Acc@5 99.170 (99.170)

Epoch: [23 | 180] LR: 0.100000
Epoch: [23][0/25]	Time 0.735 (0.735)	Data 0.654 (0.654)	Loss 0.9146 (0.9146)	Acc@1 76.172 (76.172)	Acc@5 98.486 (98.486)

Epoch: [24 | 180] LR: 0.100000
Epoch: [24][0/25]	Time 0.754 (0.754)	Data 0.699 (0.699)	Loss 0.8086 (0.8086)	Acc@1 81.299 (81.299)	Acc@5 98.779 (98.779)

Epoch: [25 | 180] LR: 0.100000
Epoch: [25][0/25]	Time 0.735 (0.735)	Data 0.657 (0.657)	Loss 0.8191 (0.8191)	Acc@1 80.615 (80.615)	Acc@5 99.072 (99.072)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [26 | 180] LR: 0.100000
Epoch: [26][0/25]	Time 0.744 (0.744)	Data 0.833 (0.833)	Loss 0.7876 (0.7876)	Acc@1 81.494 (81.494)	Acc@5 99.072 (99.072)

Epoch: [27 | 180] LR: 0.100000
Epoch: [27][0/25]	Time 0.704 (0.704)	Data 0.736 (0.736)	Loss 0.7828 (0.7828)	Acc@1 81.055 (81.055)	Acc@5 98.779 (98.779)

Epoch: [28 | 180] LR: 0.100000
Epoch: [28][0/25]	Time 0.745 (0.745)	Data 0.715 (0.715)	Loss 0.7835 (0.7835)	Acc@1 81.982 (81.982)	Acc@5 99.463 (99.463)

Epoch: [29 | 180] LR: 0.100000
Epoch: [29][0/25]	Time 0.724 (0.724)	Data 0.628 (0.628)	Loss 0.7467 (0.7467)	Acc@1 81.934 (81.934)	Acc@5 99.170 (99.170)

Epoch: [30 | 180] LR: 0.100000
Epoch: [30][0/25]	Time 0.701 (0.701)	Data 0.701 (0.701)	Loss 0.7326 (0.7326)	Acc@1 82.861 (82.861)	Acc@5 99.365 (99.365)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 58, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(58, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 480462 ; 487386 ; 0.9857936009651488

Epoch: [31 | 180] LR: 0.100000
Epoch: [31][0/25]	Time 0.663 (0.663)	Data 0.820 (0.820)	Loss 0.7285 (0.7285)	Acc@1 83.545 (83.545)	Acc@5 99.463 (99.463)

Epoch: [32 | 180] LR: 0.100000
Epoch: [32][0/25]	Time 0.733 (0.733)	Data 0.618 (0.618)	Loss 0.6762 (0.6762)	Acc@1 85.498 (85.498)	Acc@5 98.975 (98.975)

Epoch: [33 | 180] LR: 0.100000
Epoch: [33][0/25]	Time 0.789 (0.789)	Data 0.638 (0.638)	Loss 0.7103 (0.7103)	Acc@1 83.838 (83.838)	Acc@5 99.170 (99.170)

Epoch: [34 | 180] LR: 0.100000
Epoch: [34][0/25]	Time 0.793 (0.793)	Data 0.662 (0.662)	Loss 0.6987 (0.6987)	Acc@1 85.010 (85.010)	Acc@5 99.609 (99.609)

Epoch: [35 | 180] LR: 0.100000
Epoch: [35][0/25]	Time 0.702 (0.702)	Data 0.695 (0.695)	Loss 0.7008 (0.7008)	Acc@1 84.473 (84.473)	Acc@5 99.463 (99.463)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(56, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 477000 ; 487386 ; 0.9786904014477231

Epoch: [36 | 180] LR: 0.100000
Epoch: [36][0/25]	Time 0.747 (0.747)	Data 0.653 (0.653)	Loss 0.6963 (0.6963)	Acc@1 84.863 (84.863)	Acc@5 99.170 (99.170)

Epoch: [37 | 180] LR: 0.100000
Epoch: [37][0/25]	Time 0.762 (0.762)	Data 0.628 (0.628)	Loss 0.6239 (0.6239)	Acc@1 86.572 (86.572)	Acc@5 99.609 (99.609)

Epoch: [38 | 180] LR: 0.100000
Epoch: [38][0/25]	Time 0.740 (0.740)	Data 0.722 (0.722)	Loss 0.6250 (0.6250)	Acc@1 87.158 (87.158)	Acc@5 99.365 (99.365)

Epoch: [39 | 180] LR: 0.100000
Epoch: [39][0/25]	Time 0.741 (0.741)	Data 0.634 (0.634)	Loss 0.6557 (0.6557)	Acc@1 85.840 (85.840)	Acc@5 99.414 (99.414)

Epoch: [40 | 180] LR: 0.100000
Epoch: [40][0/25]	Time 0.752 (0.752)	Data 0.862 (0.862)	Loss 0.6598 (0.6598)	Acc@1 86.523 (86.523)	Acc@5 99.463 (99.463)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 47, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(47, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(47, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 466324 ; 487386 ; 0.9567857919595557

Epoch: [41 | 180] LR: 0.100000
Epoch: [41][0/25]	Time 0.750 (0.750)	Data 0.723 (0.723)	Loss 0.6610 (0.6610)	Acc@1 85.498 (85.498)	Acc@5 99.316 (99.316)

Epoch: [42 | 180] LR: 0.100000
Epoch: [42][0/25]	Time 0.761 (0.761)	Data 0.652 (0.652)	Loss 0.6665 (0.6665)	Acc@1 85.693 (85.693)	Acc@5 99.268 (99.268)

Epoch: [43 | 180] LR: 0.100000
Epoch: [43][0/25]	Time 0.738 (0.738)	Data 0.668 (0.668)	Loss 0.6543 (0.6543)	Acc@1 85.254 (85.254)	Acc@5 99.463 (99.463)

Epoch: [44 | 180] LR: 0.100000
Epoch: [44][0/25]	Time 0.635 (0.635)	Data 0.689 (0.689)	Loss 0.6220 (0.6220)	Acc@1 87.891 (87.891)	Acc@5 99.316 (99.316)

Epoch: [45 | 180] LR: 0.100000
Epoch: [45][0/25]	Time 0.679 (0.679)	Data 0.778 (0.778)	Loss 0.6821 (0.6821)	Acc@1 85.254 (85.254)	Acc@5 99.365 (99.365)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 57, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(57, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(57, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 41, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(41, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(41, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 448430 ; 487386 ; 0.9200715654532547

Epoch: [46 | 180] LR: 0.100000
Epoch: [46][0/25]	Time 0.848 (0.848)	Data 0.829 (0.829)	Loss 0.6158 (0.6158)	Acc@1 88.477 (88.477)	Acc@5 99.707 (99.707)

Epoch: [47 | 180] LR: 0.100000
Epoch: [47][0/25]	Time 0.749 (0.749)	Data 0.711 (0.711)	Loss 0.6579 (0.6579)	Acc@1 86.328 (86.328)	Acc@5 99.512 (99.512)

Epoch: [48 | 180] LR: 0.100000
Epoch: [48][0/25]	Time 0.716 (0.716)	Data 0.707 (0.707)	Loss 0.6002 (0.6002)	Acc@1 88.037 (88.037)	Acc@5 99.365 (99.365)

Epoch: [49 | 180] LR: 0.100000
Epoch: [49][0/25]	Time 0.758 (0.758)	Data 0.621 (0.621)	Loss 0.6378 (0.6378)	Acc@1 86.914 (86.914)	Acc@5 99.463 (99.463)

Epoch: [50 | 180] LR: 0.100000
Epoch: [50][0/25]	Time 0.723 (0.723)	Data 0.689 (0.689)	Loss 0.6407 (0.6407)	Acc@1 87.354 (87.354)	Acc@5 99.609 (99.609)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(50, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 35, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(35, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(35, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 428802 ; 487386 ; 0.8797995839026972

Epoch: [51 | 180] LR: 0.100000
Epoch: [51][0/25]	Time 0.698 (0.698)	Data 0.705 (0.705)	Loss 0.5994 (0.5994)	Acc@1 87.891 (87.891)	Acc@5 99.707 (99.707)

Epoch: [52 | 180] LR: 0.100000
Epoch: [52][0/25]	Time 0.715 (0.715)	Data 0.752 (0.752)	Loss 0.6164 (0.6164)	Acc@1 86.963 (86.963)	Acc@5 99.707 (99.707)

Epoch: [53 | 180] LR: 0.100000
Epoch: [53][0/25]	Time 0.684 (0.684)	Data 0.673 (0.673)	Loss 0.6599 (0.6599)	Acc@1 85.156 (85.156)	Acc@5 99.463 (99.463)

Epoch: [54 | 180] LR: 0.100000
Epoch: [54][0/25]	Time 0.767 (0.767)	Data 0.669 (0.669)	Loss 0.6268 (0.6268)	Acc@1 87.061 (87.061)	Acc@5 99.414 (99.414)

Epoch: [55 | 180] LR: 0.100000
Epoch: [55][0/25]	Time 0.746 (0.746)	Data 0.695 (0.695)	Loss 0.6416 (0.6416)	Acc@1 86.133 (86.133)	Acc@5 99.561 (99.561)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(9, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 41, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(41, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(41, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(31, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 401088 ; 487386 ; 0.8229370560500302

Epoch: [56 | 180] LR: 0.100000
Epoch: [56][0/25]	Time 0.722 (0.722)	Data 0.683 (0.683)	Loss 0.5723 (0.5723)	Acc@1 88.184 (88.184)	Acc@5 99.609 (99.609)

Epoch: [57 | 180] LR: 0.100000
Epoch: [57][0/25]	Time 0.748 (0.748)	Data 0.635 (0.635)	Loss 0.5661 (0.5661)	Acc@1 88.965 (88.965)	Acc@5 99.707 (99.707)

Epoch: [58 | 180] LR: 0.100000
Epoch: [58][0/25]	Time 0.726 (0.726)	Data 0.772 (0.772)	Loss 0.6583 (0.6583)	Acc@1 85.645 (85.645)	Acc@5 99.512 (99.512)

Epoch: [59 | 180] LR: 0.100000
Epoch: [59][0/25]	Time 0.717 (0.717)	Data 0.703 (0.703)	Loss 0.5918 (0.5918)	Acc@1 87.842 (87.842)	Acc@5 99.658 (99.658)

Epoch: [60 | 180] LR: 0.100000
Epoch: [60][0/25]	Time 0.715 (0.715)	Data 0.797 (0.797)	Loss 0.6003 (0.6003)	Acc@1 88.184 (88.184)	Acc@5 99.658 (99.658)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(23, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 33, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(33, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(33, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 58, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(58, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(28, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 377416 ; 487386 ; 0.77436774958657

Epoch: [61 | 180] LR: 0.100000
Epoch: [61][0/25]	Time 0.700 (0.700)	Data 0.683 (0.683)	Loss 0.6245 (0.6245)	Acc@1 86.768 (86.768)	Acc@5 99.463 (99.463)

Epoch: [62 | 180] LR: 0.100000
Epoch: [62][0/25]	Time 0.723 (0.723)	Data 0.638 (0.638)	Loss 0.5919 (0.5919)	Acc@1 87.939 (87.939)	Acc@5 99.463 (99.463)

Epoch: [63 | 180] LR: 0.100000
Epoch: [63][0/25]	Time 0.753 (0.753)	Data 0.768 (0.768)	Loss 0.6059 (0.6059)	Acc@1 87.012 (87.012)	Acc@5 99.512 (99.512)

Epoch: [64 | 180] LR: 0.100000
Epoch: [64][0/25]	Time 0.687 (0.687)	Data 0.732 (0.732)	Loss 0.6658 (0.6658)	Acc@1 85.742 (85.742)	Acc@5 99.561 (99.561)

Epoch: [65 | 180] LR: 0.100000
Epoch: [65][0/25]	Time 0.745 (0.745)	Data 0.713 (0.713)	Loss 0.5684 (0.5684)	Acc@1 88.623 (88.623)	Acc@5 99.756 (99.756)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(31, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 57, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(57, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(57, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(23, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 364716 ; 487386 ; 0.7483103741182553

Epoch: [66 | 180] LR: 0.100000
Epoch: [66][0/25]	Time 0.681 (0.681)	Data 0.752 (0.752)	Loss 0.6043 (0.6043)	Acc@1 88.086 (88.086)	Acc@5 99.805 (99.805)

Epoch: [67 | 180] LR: 0.100000
Epoch: [67][0/25]	Time 0.701 (0.701)	Data 0.710 (0.710)	Loss 0.5930 (0.5930)	Acc@1 88.428 (88.428)	Acc@5 99.365 (99.365)

Epoch: [68 | 180] LR: 0.100000
Epoch: [68][0/25]	Time 0.675 (0.675)	Data 0.643 (0.643)	Loss 0.5637 (0.5637)	Acc@1 88.867 (88.867)	Acc@5 99.512 (99.512)

Epoch: [69 | 180] LR: 0.100000
Epoch: [69][0/25]	Time 0.787 (0.787)	Data 0.715 (0.715)	Loss 0.6084 (0.6084)	Acc@1 87.744 (87.744)	Acc@5 99.658 (99.658)

Epoch: [70 | 180] LR: 0.100000
Epoch: [70][0/25]	Time 0.689 (0.689)	Data 0.874 (0.874)	Loss 0.6026 (0.6026)	Acc@1 87.598 (87.598)	Acc@5 99.658 (99.658)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...

 RM:  module.conv21.weight

 RM:  module.conv22.weight

Module List Length:  68
Index1: 40
Index: 21


Stage:  0


	Block:  0
j: 2; k: 2
Bool1: False
Bool2: True
j: 3; k: 2
Bool1: False
Bool2: True


	Block:  1
j: 4; k: 4
Bool1: False
Bool2: True
j: 5; k: 4
Bool1: False
Bool2: True


	Block:  2
j: 6; k: 6
Bool1: False
Bool2: True
j: 7; k: 6
Bool1: False
Bool2: True


	Block:  3
j: 8; k: 8
Bool1: False
Bool2: True
j: 9; k: 8
Bool1: False
Bool2: True


	Block:  4
j: 10; k: 10
Bool1: False
Bool2: True
j: 11; k: 10
Bool1: False
Bool2: True


Stage:  1


	Block:  0
j: 12; k: 12
Bool1: False
Bool2: False
j: 13; k: 12
Bool1: False
Bool2: False
j: 14; k: 12
Bool1: False
Bool2: False


	Block:  1
j: 15; k: 15
Bool1: False
Bool2: True
j: 16; k: 15
Bool1: False
Bool2: True


	Block:  2
j: 17; k: 17
Bool1: False
Bool2: True
j: 18; k: 17
Bool1: False
Bool2: True


	Block:  3
j: 19; k: 19
Bool1: False
Bool2: True
j: 20; k: 19
Bool1: False
Bool2: True


	Block:  4
j: 21; k: 21
Bool1: True
Bool2: True
numDelete: 2
j: 22; k: 21
Bool1: False
Bool2: True


Stage:  2


	Block:  0
j: 23; k: 23
Bool1: False
Bool2: False
j: 24; k: 23
Bool1: False
Bool2: False
j: 25; k: 23
Bool1: False
Bool2: False


	Block:  1
j: 26; k: 26
Bool1: False
Bool2: True
j: 27; k: 26
Bool1: False
Bool2: True


	Block:  2
j: 28; k: 28
Bool1: False
Bool2: True
j: 29; k: 28
Bool1: False
Bool2: True


	Block:  3
j: 30; k: 30
Bool1: False
Bool2: True
j: 31; k: 30
Bool1: False
Bool2: True


	Block:  4
j: 32; k: 32
Bool1: False
Bool2: True
j: 33; k: 32
Bool1: False
Bool2: True
Kopiere 0: Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 1: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 2: Conv2d(16, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 3: BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 4: Conv2d(13, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 5: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 6: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 7: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 8: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 9: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 10: Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 11: BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 12: Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 13: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 14: Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 15: BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 16: Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 17: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 18: Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 19: BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 20: Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 21: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 22: Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
Kopiere 23: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 24: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 25: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 26: Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
Kopiere 27: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 28: Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 29: BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 30: Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 31: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 32: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 33: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 34: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 35: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 36: Conv2d(32, 17, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 37: BatchNorm2d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 38: Conv2d(17, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 39: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 40: Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 41: BatchNorm2d(1, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 42: Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 43: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 44: Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
Kopiere 45: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 46: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 47: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 48: Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
Kopiere 49: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 50: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 51: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 52: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 53: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 54: Conv2d(64, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 55: BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 56: Conv2d(31, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 57: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 58: Conv2d(64, 57, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 59: BatchNorm2d(57, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Kopiere 60: Conv2d(57, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
Kopiere 61: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
Shape1: torch.Size([18, 64, 3, 3])
Traceback (most recent call last):
  File "main.py", line 725, in <module>
    main()
  File "main.py", line 332, in main
    genDenseModel(model, dense_chs, optimizer, 'cifar', use_gpu)
  File "/home/jessica.buehler/MA_Source/src/checkpoint_utils.py", line 307, in genDenseModel
    model.delete(module, index)
  File "/home/jessica.buehler/MA_Source/src/n2n.py", line 689, in delete
    print(f'Shape2: {self.module_list[layers + 2 * numDelete].weight.size()}')
  File "/home/jessica.buehler/env/local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 576, in __getattr__
    type(self).__name__, name))
AttributeError: 'AdaptiveAvgPool2d' object has no attribute 'weight'
no display found. Using non-interactive Agg backend
[5, 5, 5]
Cifar10: True; cifar100: False
False
Files already downloaded and verified

Arch Num:  [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
count0: 487386

Epoch: [1 | 180] LR: 0.100000
Epoch: [1][0/25]	Time 0.803 (0.803)	Data 0.704 (0.704)	Loss 3.1606 (3.1606)	Acc@1 9.668 (9.668)	Acc@5 51.514 (51.514)

Epoch: [2 | 180] LR: 0.100000
Epoch: [2][0/25]	Time 0.728 (0.728)	Data 0.674 (0.674)	Loss 2.9444 (2.9444)	Acc@1 10.938 (10.938)	Acc@5 52.930 (52.930)

Epoch: [3 | 180] LR: 0.100000
Epoch: [3][0/25]	Time 0.686 (0.686)	Data 0.670 (0.670)	Loss 2.8782 (2.8782)	Acc@1 13.623 (13.623)	Acc@5 60.205 (60.205)

Epoch: [4 | 180] LR: 0.100000
Epoch: [4][0/25]	Time 0.617 (0.617)	Data 0.648 (0.648)	Loss 2.7169 (2.7169)	Acc@1 17.969 (17.969)	Acc@5 71.387 (71.387)

Epoch: [5 | 180] LR: 0.100000
Epoch: [5][0/25]	Time 0.769 (0.769)	Data 0.717 (0.717)	Loss 2.4877 (2.4877)	Acc@1 24.414 (24.414)	Acc@5 80.811 (80.811)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [6 | 180] LR: 0.100000
Epoch: [6][0/25]	Time 0.732 (0.732)	Data 0.773 (0.773)	Loss 2.3232 (2.3232)	Acc@1 28.418 (28.418)	Acc@5 83.936 (83.936)

Epoch: [7 | 180] LR: 0.100000
Epoch: [7][0/25]	Time 0.765 (0.765)	Data 0.635 (0.635)	Loss 2.1647 (2.1647)	Acc@1 34.570 (34.570)	Acc@5 87.305 (87.305)

Epoch: [8 | 180] LR: 0.100000
Epoch: [8][0/25]	Time 0.780 (0.780)	Data 0.704 (0.704)	Loss 1.9939 (1.9939)	Acc@1 39.355 (39.355)	Acc@5 91.309 (91.309)

Epoch: [9 | 180] LR: 0.100000
Epoch: [9][0/25]	Time 0.734 (0.734)	Data 0.699 (0.699)	Loss 1.8823 (1.8823)	Acc@1 44.385 (44.385)	Acc@5 91.846 (91.846)

Epoch: [10 | 180] LR: 0.100000
Epoch: [10][0/25]	Time 0.704 (0.704)	Data 0.715 (0.715)	Loss 1.7617 (1.7617)	Acc@1 47.607 (47.607)	Acc@5 93.408 (93.408)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [11 | 180] LR: 0.100000
Epoch: [11][0/25]	Time 0.712 (0.712)	Data 0.615 (0.615)	Loss 1.5369 (1.5369)	Acc@1 57.568 (57.568)	Acc@5 94.678 (94.678)

Epoch: [12 | 180] LR: 0.100000
Epoch: [12][0/25]	Time 0.680 (0.680)	Data 0.664 (0.664)	Loss 1.4949 (1.4949)	Acc@1 58.398 (58.398)	Acc@5 96.191 (96.191)

Epoch: [13 | 180] LR: 0.100000
Epoch: [13][0/25]	Time 0.732 (0.732)	Data 0.616 (0.616)	Loss 1.3219 (1.3219)	Acc@1 63.232 (63.232)	Acc@5 96.436 (96.436)

Epoch: [14 | 180] LR: 0.100000
Epoch: [14][0/25]	Time 0.700 (0.700)	Data 0.680 (0.680)	Loss 1.1896 (1.1896)	Acc@1 68.311 (68.311)	Acc@5 97.461 (97.461)

Epoch: [15 | 180] LR: 0.100000
Epoch: [15][0/25]	Time 0.735 (0.735)	Data 0.658 (0.658)	Loss 1.1175 (1.1175)	Acc@1 70.020 (70.020)	Acc@5 97.363 (97.363)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [16 | 180] LR: 0.100000
Epoch: [16][0/25]	Time 0.704 (0.704)	Data 0.669 (0.669)	Loss 1.0622 (1.0622)	Acc@1 73.047 (73.047)	Acc@5 97.998 (97.998)

Epoch: [17 | 180] LR: 0.100000
Epoch: [17][0/25]	Time 0.716 (0.716)	Data 0.644 (0.644)	Loss 0.9736 (0.9736)	Acc@1 75.684 (75.684)	Acc@5 98.242 (98.242)

Epoch: [18 | 180] LR: 0.100000
Epoch: [18][0/25]	Time 0.758 (0.758)	Data 0.670 (0.670)	Loss 0.9310 (0.9310)	Acc@1 76.855 (76.855)	Acc@5 98.877 (98.877)

Epoch: [19 | 180] LR: 0.100000
Epoch: [19][0/25]	Time 0.714 (0.714)	Data 0.815 (0.815)	Loss 0.8599 (0.8599)	Acc@1 79.590 (79.590)	Acc@5 99.268 (99.268)

Epoch: [20 | 180] LR: 0.100000
Epoch: [20][0/25]	Time 0.700 (0.700)	Data 0.818 (0.818)	Loss 0.7925 (0.7925)	Acc@1 81.836 (81.836)	Acc@5 99.219 (99.219)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [21 | 180] LR: 0.100000
Epoch: [21][0/25]	Time 0.733 (0.733)	Data 0.700 (0.700)	Loss 0.7737 (0.7737)	Acc@1 81.445 (81.445)	Acc@5 98.730 (98.730)

Epoch: [22 | 180] LR: 0.100000
Epoch: [22][0/25]	Time 0.772 (0.772)	Data 0.736 (0.736)	Loss 0.7608 (0.7608)	Acc@1 81.641 (81.641)	Acc@5 99.463 (99.463)

Epoch: [23 | 180] LR: 0.100000
Epoch: [23][0/25]	Time 0.763 (0.763)	Data 0.644 (0.644)	Loss 0.7217 (0.7217)	Acc@1 83.545 (83.545)	Acc@5 99.219 (99.219)

Epoch: [24 | 180] LR: 0.100000
Epoch: [24][0/25]	Time 0.734 (0.734)	Data 0.699 (0.699)	Loss 0.7209 (0.7209)	Acc@1 83.887 (83.887)	Acc@5 99.268 (99.268)

Epoch: [25 | 180] LR: 0.100000
Epoch: [25][0/25]	Time 0.684 (0.684)	Data 0.797 (0.797)	Loss 0.7305 (0.7305)	Acc@1 83.057 (83.057)	Acc@5 99.219 (99.219)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [26 | 180] LR: 0.100000
Epoch: [26][0/25]	Time 0.738 (0.738)	Data 0.694 (0.694)	Loss 0.6759 (0.6759)	Acc@1 85.010 (85.010)	Acc@5 99.658 (99.658)

Epoch: [27 | 180] LR: 0.100000
Epoch: [27][0/25]	Time 0.768 (0.768)	Data 0.673 (0.673)	Loss 0.7164 (0.7164)	Acc@1 83.789 (83.789)	Acc@5 99.170 (99.170)

Epoch: [28 | 180] LR: 0.100000
Epoch: [28][0/25]	Time 0.740 (0.740)	Data 0.623 (0.623)	Loss 0.6844 (0.6844)	Acc@1 84.717 (84.717)	Acc@5 99.365 (99.365)

Epoch: [29 | 180] LR: 0.100000
Epoch: [29][0/25]	Time 0.713 (0.713)	Data 0.824 (0.824)	Loss 0.7031 (0.7031)	Acc@1 83.691 (83.691)	Acc@5 99.316 (99.316)

Epoch: [30 | 180] LR: 0.100000
Epoch: [30][0/25]	Time 0.756 (0.756)	Data 0.667 (0.667)	Loss 0.6977 (0.6977)	Acc@1 84.521 (84.521)	Acc@5 99.316 (99.316)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 486232 ; 487386 ; 0.9976322668275248

Epoch: [31 | 180] LR: 0.100000
Epoch: [31][0/25]	Time 0.766 (0.766)	Data 0.681 (0.681)	Loss 0.7545 (0.7545)	Acc@1 82.910 (82.910)	Acc@5 99.072 (99.072)

Epoch: [32 | 180] LR: 0.100000
Epoch: [32][0/25]	Time 0.728 (0.728)	Data 0.711 (0.711)	Loss 0.6129 (0.6129)	Acc@1 87.207 (87.207)	Acc@5 99.707 (99.707)

Epoch: [33 | 180] LR: 0.100000
Epoch: [33][0/25]	Time 0.763 (0.763)	Data 0.710 (0.710)	Loss 0.6871 (0.6871)	Acc@1 84.668 (84.668)	Acc@5 99.463 (99.463)

Epoch: [34 | 180] LR: 0.100000
Epoch: [34][0/25]	Time 0.709 (0.709)	Data 0.668 (0.668)	Loss 0.6491 (0.6491)	Acc@1 86.475 (86.475)	Acc@5 99.512 (99.512)

Epoch: [35 | 180] LR: 0.100000
Epoch: [35][0/25]	Time 0.736 (0.736)	Data 0.726 (0.726)	Loss 0.6442 (0.6442)	Acc@1 86.914 (86.914)	Acc@5 99.365 (99.365)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 61, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(61, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(61, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 483924 ; 487386 ; 0.9928968004825743

Epoch: [36 | 180] LR: 0.100000
Epoch: [36][0/25]	Time 0.668 (0.668)	Data 0.624 (0.624)	Loss 0.6594 (0.6594)	Acc@1 86.670 (86.670)	Acc@5 99.219 (99.219)

Epoch: [37 | 180] LR: 0.100000
Epoch: [37][0/25]	Time 0.720 (0.720)	Data 0.645 (0.645)	Loss 0.6062 (0.6062)	Acc@1 88.135 (88.135)	Acc@5 99.463 (99.463)

Epoch: [38 | 180] LR: 0.100000
Epoch: [38][0/25]	Time 0.741 (0.741)	Data 0.689 (0.689)	Loss 0.6229 (0.6229)	Acc@1 87.500 (87.500)	Acc@5 99.561 (99.561)

Epoch: [39 | 180] LR: 0.100000
Epoch: [39][0/25]	Time 0.706 (0.706)	Data 0.739 (0.739)	Loss 0.6623 (0.6623)	Acc@1 86.621 (86.621)	Acc@5 99.463 (99.463)

Epoch: [40 | 180] LR: 0.100000
Epoch: [40][0/25]	Time 0.745 (0.745)	Data 0.686 (0.686)	Loss 0.6351 (0.6351)	Acc@1 87.451 (87.451)	Acc@5 99.658 (99.658)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 57, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(57, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(57, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 479308 ; 487386 ; 0.9834258677926736

Epoch: [41 | 180] LR: 0.100000
Epoch: [41][0/25]	Time 0.756 (0.756)	Data 0.637 (0.637)	Loss 0.5934 (0.5934)	Acc@1 88.574 (88.574)	Acc@5 99.658 (99.658)

Epoch: [42 | 180] LR: 0.100000
Epoch: [42][0/25]	Time 0.717 (0.717)	Data 0.742 (0.742)	Loss 0.6253 (0.6253)	Acc@1 87.354 (87.354)	Acc@5 99.512 (99.512)

Epoch: [43 | 180] LR: 0.100000
Epoch: [43][0/25]	Time 0.781 (0.781)	Data 0.632 (0.632)	Loss 0.6165 (0.6165)	Acc@1 87.549 (87.549)	Acc@5 99.414 (99.414)

Epoch: [44 | 180] LR: 0.100000
Epoch: [44][0/25]	Time 0.775 (0.775)	Data 0.803 (0.803)	Loss 0.6053 (0.6053)	Acc@1 88.428 (88.428)	Acc@5 99.512 (99.512)

Epoch: [45 | 180] LR: 0.100000
Epoch: [45][0/25]	Time 0.783 (0.783)	Data 0.692 (0.692)	Loss 0.5923 (0.5923)	Acc@1 88.477 (88.477)	Acc@5 99.609 (99.609)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(52, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 473538 ; 487386 ; 0.9715872019302976

Epoch: [46 | 180] LR: 0.100000
Epoch: [46][0/25]	Time 0.743 (0.743)	Data 0.681 (0.681)	Loss 0.5841 (0.5841)	Acc@1 89.404 (89.404)	Acc@5 99.707 (99.707)

Epoch: [47 | 180] LR: 0.100000
Epoch: [47][0/25]	Time 0.728 (0.728)	Data 0.693 (0.693)	Loss 0.5881 (0.5881)	Acc@1 88.721 (88.721)	Acc@5 99.658 (99.658)

Epoch: [48 | 180] LR: 0.100000
Epoch: [48][0/25]	Time 0.690 (0.690)	Data 0.642 (0.642)	Loss 0.6285 (0.6285)	Acc@1 87.061 (87.061)	Acc@5 99.658 (99.658)

Epoch: [49 | 180] LR: 0.100000
Epoch: [49][0/25]	Time 0.629 (0.629)	Data 0.701 (0.701)	Loss 0.5774 (0.5774)	Acc@1 89.209 (89.209)	Acc@5 99.561 (99.561)

Epoch: [50 | 180] LR: 0.100000
Epoch: [50][0/25]	Time 0.789 (0.789)	Data 0.654 (0.654)	Loss 0.6531 (0.6531)	Acc@1 86.865 (86.865)	Acc@5 99.463 (99.463)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 47, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(47, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(47, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 466034 ; 487386 ; 0.9561907810236651

Epoch: [51 | 180] LR: 0.100000
Epoch: [51][0/25]	Time 0.675 (0.675)	Data 0.648 (0.648)	Loss 0.6315 (0.6315)	Acc@1 87.109 (87.109)	Acc@5 99.707 (99.707)

Epoch: [52 | 180] LR: 0.100000
Epoch: [52][0/25]	Time 0.684 (0.684)	Data 0.640 (0.640)	Loss 0.5703 (0.5703)	Acc@1 89.258 (89.258)	Acc@5 99.463 (99.463)

Epoch: [53 | 180] LR: 0.100000
Epoch: [53][0/25]	Time 0.711 (0.711)	Data 0.712 (0.712)	Loss 0.6125 (0.6125)	Acc@1 87.598 (87.598)	Acc@5 99.707 (99.707)

Epoch: [54 | 180] LR: 0.100000
Epoch: [54][0/25]	Time 0.739 (0.739)	Data 0.678 (0.678)	Loss 0.6210 (0.6210)	Acc@1 87.695 (87.695)	Acc@5 99.463 (99.463)

Epoch: [55 | 180] LR: 0.100000
Epoch: [55][0/25]	Time 0.739 (0.739)	Data 0.654 (0.654)	Loss 0.5801 (0.5801)	Acc@1 88.916 (88.916)	Acc@5 99.658 (99.658)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 39, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(39, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(39, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 454492 ; 487386 ; 0.9325093457752172

Epoch: [56 | 180] LR: 0.100000
Epoch: [56][0/25]	Time 0.667 (0.667)	Data 0.708 (0.708)	Loss 0.5739 (0.5739)	Acc@1 89.502 (89.502)	Acc@5 99.756 (99.756)

Epoch: [57 | 180] LR: 0.100000
Epoch: [57][0/25]	Time 0.726 (0.726)	Data 0.763 (0.763)	Loss 0.5838 (0.5838)	Acc@1 89.990 (89.990)	Acc@5 99.707 (99.707)

Epoch: [58 | 180] LR: 0.100000
Epoch: [58][0/25]	Time 0.734 (0.734)	Data 0.632 (0.632)	Loss 0.6133 (0.6133)	Acc@1 87.793 (87.793)	Acc@5 99.805 (99.805)

Epoch: [59 | 180] LR: 0.100000
Epoch: [59][0/25]	Time 0.757 (0.757)	Data 0.752 (0.752)	Loss 0.6215 (0.6215)	Acc@1 88.184 (88.184)	Acc@5 99.414 (99.414)

Epoch: [60 | 180] LR: 0.100000
Epoch: [60][0/25]	Time 0.685 (0.685)	Data 0.832 (0.832)	Loss 0.5788 (0.5788)	Acc@1 89.941 (89.941)	Acc@5 99.805 (99.805)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 34, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(34, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(34, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 442654 ; 487386 ; 0.9082205890197913

Epoch: [61 | 180] LR: 0.100000
Epoch: [61][0/25]	Time 0.732 (0.732)	Data 0.655 (0.655)	Loss 0.5853 (0.5853)	Acc@1 89.453 (89.453)	Acc@5 99.756 (99.756)

Epoch: [62 | 180] LR: 0.100000
Epoch: [62][0/25]	Time 0.712 (0.712)	Data 0.790 (0.790)	Loss 0.6286 (0.6286)	Acc@1 87.939 (87.939)	Acc@5 99.463 (99.463)

Epoch: [63 | 180] LR: 0.100000
Epoch: [63][0/25]	Time 0.739 (0.739)	Data 0.746 (0.746)	Loss 0.5784 (0.5784)	Acc@1 89.697 (89.697)	Acc@5 99.512 (99.512)

Epoch: [64 | 180] LR: 0.100000
Epoch: [64][0/25]	Time 0.706 (0.706)	Data 0.634 (0.634)	Loss 0.6217 (0.6217)	Acc@1 88.477 (88.477)	Acc@5 99.609 (99.609)

Epoch: [65 | 180] LR: 0.100000
Epoch: [65][0/25]	Time 0.722 (0.722)	Data 0.641 (0.641)	Loss 0.5862 (0.5862)	Acc@1 89.062 (89.062)	Acc@5 99.658 (99.658)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(15, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(29, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 430528 ; 487386 ; 0.8833409248521705

Epoch: [66 | 180] LR: 0.100000
Epoch: [66][0/25]	Time 0.750 (0.750)	Data 0.741 (0.741)	Loss 0.6004 (0.6004)	Acc@1 89.062 (89.062)	Acc@5 99.512 (99.512)

Epoch: [67 | 180] LR: 0.100000
Epoch: [67][0/25]	Time 0.720 (0.720)	Data 0.706 (0.706)	Loss 0.5751 (0.5751)	Acc@1 90.283 (90.283)	Acc@5 99.707 (99.707)

Epoch: [68 | 180] LR: 0.100000
Epoch: [68][0/25]	Time 0.737 (0.737)	Data 0.623 (0.623)	Loss 0.5719 (0.5719)	Acc@1 89.355 (89.355)	Acc@5 99.756 (99.756)

Epoch: [69 | 180] LR: 0.100000
Epoch: [69][0/25]	Time 0.729 (0.729)	Data 0.702 (0.702)	Loss 0.5676 (0.5676)	Acc@1 89.941 (89.941)	Acc@5 99.658 (99.658)

Epoch: [70 | 180] LR: 0.100000
Epoch: [70][0/25]	Time 0.654 (0.654)	Data 0.642 (0.642)	Loss 0.5997 (0.5997)	Acc@1 88.916 (88.916)	Acc@5 99.707 (99.707)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(26, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(14, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(26, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 425332 ; 487386 ; 0.8726799702904885

Epoch: [71 | 180] LR: 0.100000
Epoch: [71][0/25]	Time 0.729 (0.729)	Data 0.652 (0.652)	Loss 0.5966 (0.5966)	Acc@1 89.355 (89.355)	Acc@5 99.561 (99.561)

Epoch: [72 | 180] LR: 0.100000
Epoch: [72][0/25]	Time 0.744 (0.744)	Data 0.761 (0.761)	Loss 0.5848 (0.5848)	Acc@1 88.525 (88.525)	Acc@5 99.658 (99.658)

Epoch: [73 | 180] LR: 0.100000
Epoch: [73][0/25]	Time 0.730 (0.730)	Data 0.643 (0.643)	Loss 0.5530 (0.5530)	Acc@1 90.869 (90.869)	Acc@5 99.658 (99.658)

Epoch: [74 | 180] LR: 0.100000
Epoch: [74][0/25]	Time 0.750 (0.750)	Data 0.686 (0.686)	Loss 0.6167 (0.6167)	Acc@1 88.379 (88.379)	Acc@5 99.609 (99.609)

Epoch: [75 | 180] LR: 0.100000
Epoch: [75][0/25]	Time 0.657 (0.657)	Data 0.649 (0.649)	Loss 0.5474 (0.5474)	Acc@1 90.381 (90.381)	Acc@5 99.854 (99.854)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(25, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(14, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 60, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(60, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(22, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 417540 ; 487386 ; 0.8566926419716611

Epoch: [76 | 180] LR: 0.100000
Epoch: [76][0/25]	Time 0.708 (0.708)	Data 0.728 (0.728)	Loss 0.5917 (0.5917)	Acc@1 89.307 (89.307)	Acc@5 99.756 (99.756)

Epoch: [77 | 180] LR: 0.100000
Epoch: [77][0/25]	Time 0.687 (0.687)	Data 0.654 (0.654)	Loss 0.5427 (0.5427)	Acc@1 90.723 (90.723)	Acc@5 99.805 (99.805)

Epoch: [78 | 180] LR: 0.100000
Epoch: [78][0/25]	Time 0.760 (0.760)	Data 0.647 (0.647)	Loss 0.5852 (0.5852)	Acc@1 89.062 (89.062)	Acc@5 99.658 (99.658)

Epoch: [79 | 180] LR: 0.100000
Epoch: [79][0/25]	Time 0.764 (0.764)	Data 0.676 (0.676)	Loss 0.5493 (0.5493)	Acc@1 90.332 (90.332)	Acc@5 99.707 (99.707)

Epoch: [80 | 180] LR: 0.100000
Epoch: [80][0/25]	Time 0.702 (0.702)	Data 0.670 (0.670)	Loss 0.5678 (0.5678)	Acc@1 90.234 (90.234)	Acc@5 99.707 (99.707)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(31, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(23, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(12, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(21, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 412920 ; 487386 ; 0.8472135022343686

Epoch: [81 | 180] LR: 0.100000
Epoch: [81][0/25]	Time 0.703 (0.703)	Data 0.684 (0.684)	Loss 0.5671 (0.5671)	Acc@1 89.941 (89.941)	Acc@5 99.658 (99.658)

Epoch: [82 | 180] LR: 0.100000
Epoch: [82][0/25]	Time 0.769 (0.769)	Data 0.629 (0.629)	Loss 0.5549 (0.5549)	Acc@1 90.186 (90.186)	Acc@5 99.805 (99.805)

Epoch: [83 | 180] LR: 0.100000
Epoch: [83][0/25]	Time 0.716 (0.716)	Data 0.633 (0.633)	Loss 0.5726 (0.5726)	Acc@1 89.453 (89.453)	Acc@5 99.561 (99.561)

Epoch: [84 | 180] LR: 0.100000
Epoch: [84][0/25]	Time 0.755 (0.755)	Data 0.658 (0.658)	Loss 0.5930 (0.5930)	Acc@1 89.941 (89.941)	Acc@5 99.707 (99.707)

Epoch: [85 | 180] LR: 0.100000
Epoch: [85][0/25]	Time 0.756 (0.756)	Data 0.659 (0.659)	Loss 0.5840 (0.5840)	Acc@1 89.160 (89.160)	Acc@5 99.658 (99.658)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(30, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(23, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(10, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(20, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 409742 ; 487386 ; 0.8406930030817463

Epoch: [86 | 180] LR: 0.100000
Epoch: [86][0/25]	Time 0.715 (0.715)	Data 0.810 (0.810)	Loss 0.5895 (0.5895)	Acc@1 89.160 (89.160)	Acc@5 99.756 (99.756)

Epoch: [87 | 180] LR: 0.100000
Epoch: [87][0/25]	Time 0.818 (0.818)	Data 0.779 (0.779)	Loss 0.5550 (0.5550)	Acc@1 90.186 (90.186)	Acc@5 99.609 (99.609)

Epoch: [88 | 180] LR: 0.100000
Epoch: [88][0/25]	Time 0.766 (0.766)	Data 0.705 (0.705)	Loss 0.5647 (0.5647)	Acc@1 90.039 (90.039)	Acc@5 99.658 (99.658)

Epoch: [89 | 180] LR: 0.100000
Epoch: [89][0/25]	Time 0.773 (0.773)	Data 0.698 (0.698)	Loss 0.5760 (0.5760)	Acc@1 89.014 (89.014)	Acc@5 99.561 (99.561)

Epoch: [90 | 180] LR: 0.100000
Epoch: [90][0/25]	Time 0.717 (0.717)	Data 0.675 (0.675)	Loss 0.6141 (0.6141)	Acc@1 88.330 (88.330)	Acc@5 99.658 (99.658)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(29, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(23, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 63, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(63, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(19, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 406854 ; 487386 ; 0.8347675148650145

Epoch: [91 | 180] LR: 0.100000
Epoch: [91][0/25]	Time 0.716 (0.716)	Data 0.701 (0.701)	Loss 0.5291 (0.5291)	Acc@1 91.895 (91.895)	Acc@5 99.707 (99.707)

Epoch: [92 | 180] LR: 0.100000
Epoch: [92][0/25]	Time 0.740 (0.740)	Data 0.701 (0.701)	Loss 0.5883 (0.5883)	Acc@1 88.721 (88.721)	Acc@5 99.805 (99.805)

Epoch: [93 | 180] LR: 0.040000
Epoch: [93][0/25]	Time 0.746 (0.746)	Data 0.625 (0.625)	Loss 0.5589 (0.5589)	Acc@1 90.283 (90.283)	Acc@5 99.561 (99.561)

Epoch: [94 | 180] LR: 0.040000
Epoch: [94][0/25]	Time 0.731 (0.731)	Data 0.734 (0.734)	Loss 0.4392 (0.4392)	Acc@1 94.531 (94.531)	Acc@5 99.902 (99.902)

Epoch: [95 | 180] LR: 0.040000
Epoch: [95][0/25]	Time 0.729 (0.729)	Data 0.656 (0.656)	Loss 0.4155 (0.4155)	Acc@1 95.117 (95.117)	Acc@5 99.902 (99.902)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(23, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(18, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 403968 ; 487386 ; 0.8288461301719787

Epoch: [96 | 180] LR: 0.040000
Epoch: [96][0/25]	Time 0.726 (0.726)	Data 0.646 (0.646)	Loss 0.3774 (0.3774)	Acc@1 96.582 (96.582)	Acc@5 99.951 (99.951)

Epoch: [97 | 180] LR: 0.040000
Epoch: [97][0/25]	Time 0.688 (0.688)	Data 0.799 (0.799)	Loss 0.3762 (0.3762)	Acc@1 96.289 (96.289)	Acc@5 99.951 (99.951)

Epoch: [98 | 180] LR: 0.040000
Epoch: [98][0/25]	Time 0.698 (0.698)	Data 0.632 (0.632)	Loss 0.3578 (0.3578)	Acc@1 97.021 (97.021)	Acc@5 99.902 (99.902)

Epoch: [99 | 180] LR: 0.040000
Epoch: [99][0/25]	Time 0.745 (0.745)	Data 0.632 (0.632)	Loss 0.3541 (0.3541)	Acc@1 96.826 (96.826)	Acc@5 100.000 (100.000)

Epoch: [100 | 180] LR: 0.040000
Epoch: [100][0/25]	Time 0.699 (0.699)	Data 0.759 (0.759)	Loss 0.3441 (0.3441)	Acc@1 96.973 (96.973)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(23, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(18, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [101 | 180] LR: 0.040000
Epoch: [101][0/25]	Time 0.708 (0.708)	Data 0.718 (0.718)	Loss 0.3425 (0.3425)	Acc@1 97.266 (97.266)	Acc@5 99.951 (99.951)

Epoch: [102 | 180] LR: 0.040000
Epoch: [102][0/25]	Time 0.692 (0.692)	Data 0.672 (0.672)	Loss 0.3350 (0.3350)	Acc@1 97.119 (97.119)	Acc@5 100.000 (100.000)

Epoch: [103 | 180] LR: 0.040000
Epoch: [103][0/25]	Time 0.702 (0.702)	Data 0.752 (0.752)	Loss 0.3195 (0.3195)	Acc@1 97.705 (97.705)	Acc@5 100.000 (100.000)

Epoch: [104 | 180] LR: 0.040000
Epoch: [104][0/25]	Time 0.692 (0.692)	Data 0.823 (0.823)	Loss 0.3208 (0.3208)	Acc@1 97.461 (97.461)	Acc@5 99.902 (99.902)

Epoch: [105 | 180] LR: 0.040000
Epoch: [105][0/25]	Time 0.736 (0.736)	Data 0.670 (0.670)	Loss 0.3188 (0.3188)	Acc@1 97.168 (97.168)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(23, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 401660 ; 487386 ; 0.8241106638270282

Epoch: [106 | 180] LR: 0.040000
Epoch: [106][0/25]	Time 0.688 (0.688)	Data 0.690 (0.690)	Loss 0.3062 (0.3062)	Acc@1 98.193 (98.193)	Acc@5 99.951 (99.951)

Epoch: [107 | 180] LR: 0.040000
Epoch: [107][0/25]	Time 0.682 (0.682)	Data 0.705 (0.705)	Loss 0.3041 (0.3041)	Acc@1 97.607 (97.607)	Acc@5 100.000 (100.000)

Epoch: [108 | 180] LR: 0.040000
Epoch: [108][0/25]	Time 0.748 (0.748)	Data 0.647 (0.647)	Loss 0.3011 (0.3011)	Acc@1 97.754 (97.754)	Acc@5 99.951 (99.951)

Epoch: [109 | 180] LR: 0.040000
Epoch: [109][0/25]	Time 0.731 (0.731)	Data 0.624 (0.624)	Loss 0.3278 (0.3278)	Acc@1 97.314 (97.314)	Acc@5 99.951 (99.951)

Epoch: [110 | 180] LR: 0.040000
Epoch: [110][0/25]	Time 0.738 (0.738)	Data 0.712 (0.712)	Loss 0.2976 (0.2976)	Acc@1 97.754 (97.754)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(23, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [111 | 180] LR: 0.040000
Epoch: [111][0/25]	Time 0.686 (0.686)	Data 0.672 (0.672)	Loss 0.2914 (0.2914)	Acc@1 97.510 (97.510)	Acc@5 100.000 (100.000)

Epoch: [112 | 180] LR: 0.040000
Epoch: [112][0/25]	Time 0.751 (0.751)	Data 0.610 (0.610)	Loss 0.2825 (0.2825)	Acc@1 97.998 (97.998)	Acc@5 99.951 (99.951)

Epoch: [113 | 180] LR: 0.040000
Epoch: [113][0/25]	Time 0.690 (0.690)	Data 0.754 (0.754)	Loss 0.2730 (0.2730)	Acc@1 98.633 (98.633)	Acc@5 100.000 (100.000)

Epoch: [114 | 180] LR: 0.040000
Epoch: [114][0/25]	Time 0.689 (0.689)	Data 0.716 (0.716)	Loss 0.2769 (0.2769)	Acc@1 98.145 (98.145)	Acc@5 100.000 (100.000)

Epoch: [115 | 180] LR: 0.040000
Epoch: [115][0/25]	Time 0.735 (0.735)	Data 0.705 (0.705)	Loss 0.2767 (0.2767)	Acc@1 98.193 (98.193)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(23, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [116 | 180] LR: 0.040000
Epoch: [116][0/25]	Time 0.666 (0.666)	Data 0.720 (0.720)	Loss 0.2633 (0.2633)	Acc@1 98.584 (98.584)	Acc@5 100.000 (100.000)

Epoch: [117 | 180] LR: 0.040000
Epoch: [117][0/25]	Time 0.704 (0.704)	Data 0.674 (0.674)	Loss 0.2568 (0.2568)	Acc@1 98.877 (98.877)	Acc@5 100.000 (100.000)

Epoch: [118 | 180] LR: 0.040000
Epoch: [118][0/25]	Time 0.726 (0.726)	Data 0.819 (0.819)	Loss 0.2521 (0.2521)	Acc@1 98.877 (98.877)	Acc@5 100.000 (100.000)

Epoch: [119 | 180] LR: 0.040000
Epoch: [119][0/25]	Time 0.715 (0.715)	Data 0.737 (0.737)	Loss 0.2520 (0.2520)	Acc@1 98.633 (98.633)	Acc@5 100.000 (100.000)

Epoch: [120 | 180] LR: 0.040000
Epoch: [120][0/25]	Time 0.673 (0.673)	Data 0.640 (0.640)	Loss 0.2548 (0.2548)	Acc@1 98.145 (98.145)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(16, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 401082 ; 487386 ; 0.8229247454789428

Epoch: [121 | 180] LR: 0.040000
Epoch: [121][0/25]	Time 0.764 (0.764)	Data 0.852 (0.852)	Loss 0.2468 (0.2468)	Acc@1 98.828 (98.828)	Acc@5 100.000 (100.000)

Epoch: [122 | 180] LR: 0.040000
Epoch: [122][0/25]	Time 0.704 (0.704)	Data 0.817 (0.817)	Loss 0.2468 (0.2468)	Acc@1 98.535 (98.535)	Acc@5 100.000 (100.000)

Epoch: [123 | 180] LR: 0.040000
Epoch: [123][0/25]	Time 0.727 (0.727)	Data 0.637 (0.637)	Loss 0.2523 (0.2523)	Acc@1 98.535 (98.535)	Acc@5 100.000 (100.000)

Epoch: [124 | 180] LR: 0.040000
Epoch: [124][0/25]	Time 0.738 (0.738)	Data 0.834 (0.834)	Loss 0.2479 (0.2479)	Acc@1 98.291 (98.291)	Acc@5 100.000 (100.000)

Epoch: [125 | 180] LR: 0.040000
Epoch: [125][0/25]	Time 0.722 (0.722)	Data 0.703 (0.703)	Loss 0.2470 (0.2470)	Acc@1 98.535 (98.535)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(15, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)
Count: 399928 ; 487386 ; 0.8205570123064676

Epoch: [126 | 180] LR: 0.040000
Epoch: [126][0/25]	Time 0.726 (0.726)	Data 0.653 (0.653)	Loss 0.2406 (0.2406)	Acc@1 98.779 (98.779)	Acc@5 99.951 (99.951)

Epoch: [127 | 180] LR: 0.040000
Epoch: [127][0/25]	Time 0.728 (0.728)	Data 0.646 (0.646)	Loss 0.2391 (0.2391)	Acc@1 98.584 (98.584)	Acc@5 100.000 (100.000)

Epoch: [128 | 180] LR: 0.040000
Epoch: [128][0/25]	Time 0.709 (0.709)	Data 0.665 (0.665)	Loss 0.2433 (0.2433)	Acc@1 98.291 (98.291)	Acc@5 100.000 (100.000)

Epoch: [129 | 180] LR: 0.040000
Epoch: [129][0/25]	Time 0.697 (0.697)	Data 0.801 (0.801)	Loss 0.2261 (0.2261)	Acc@1 99.170 (99.170)	Acc@5 100.000 (100.000)

Epoch: [130 | 180] LR: 0.040000
Epoch: [130][0/25]	Time 0.758 (0.758)	Data 0.763 (0.763)	Loss 0.2402 (0.2402)	Acc@1 98.389 (98.389)	Acc@5 99.951 (99.951)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(15, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [131 | 180] LR: 0.040000
Epoch: [131][0/25]	Time 0.765 (0.765)	Data 0.642 (0.642)	Loss 0.2291 (0.2291)	Acc@1 98.828 (98.828)	Acc@5 100.000 (100.000)

Epoch: [132 | 180] LR: 0.040000
Epoch: [132][0/25]	Time 0.747 (0.747)	Data 0.656 (0.656)	Loss 0.2251 (0.2251)	Acc@1 98.633 (98.633)	Acc@5 100.000 (100.000)

Epoch: [133 | 180] LR: 0.040000
Epoch: [133][0/25]	Time 0.719 (0.719)	Data 0.634 (0.634)	Loss 0.2309 (0.2309)	Acc@1 98.389 (98.389)	Acc@5 100.000 (100.000)

Epoch: [134 | 180] LR: 0.040000
Epoch: [134][0/25]	Time 0.762 (0.762)	Data 0.685 (0.685)	Loss 0.2275 (0.2275)	Acc@1 98.682 (98.682)	Acc@5 100.000 (100.000)

Epoch: [135 | 180] LR: 0.040000
Epoch: [135][0/25]	Time 0.672 (0.672)	Data 0.671 (0.671)	Loss 0.2324 (0.2324)	Acc@1 98.193 (98.193)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(15, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [136 | 180] LR: 0.040000
Epoch: [136][0/25]	Time 0.748 (0.748)	Data 0.724 (0.724)	Loss 0.2221 (0.2221)	Acc@1 98.633 (98.633)	Acc@5 100.000 (100.000)

Epoch: [137 | 180] LR: 0.040000
Epoch: [137][0/25]	Time 0.679 (0.679)	Data 0.815 (0.815)	Loss 0.2302 (0.2302)	Acc@1 98.242 (98.242)	Acc@5 100.000 (100.000)

Epoch: [138 | 180] LR: 0.040000
Epoch: [138][0/25]	Time 0.734 (0.734)	Data 0.635 (0.635)	Loss 0.2206 (0.2206)	Acc@1 98.779 (98.779)	Acc@5 100.000 (100.000)

Epoch: [139 | 180] LR: 0.040000
Epoch: [139][0/25]	Time 0.663 (0.663)	Data 0.681 (0.681)	Loss 0.2251 (0.2251)	Acc@1 98.291 (98.291)	Acc@5 100.000 (100.000)

Epoch: [140 | 180] LR: 0.040000
Epoch: [140][0/25]	Time 0.685 (0.685)	Data 0.683 (0.683)	Loss 0.2266 (0.2266)	Acc@1 98.291 (98.291)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(15, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [141 | 180] LR: 0.040000
Epoch: [141][0/25]	Time 0.805 (0.805)	Data 0.683 (0.683)	Loss 0.2234 (0.2234)	Acc@1 98.291 (98.291)	Acc@5 100.000 (100.000)

Epoch: [142 | 180] LR: 0.040000
Epoch: [142][0/25]	Time 0.671 (0.671)	Data 0.663 (0.663)	Loss 0.2160 (0.2160)	Acc@1 98.633 (98.633)	Acc@5 100.000 (100.000)

Epoch: [143 | 180] LR: 0.040000
Epoch: [143][0/25]	Time 0.734 (0.734)	Data 0.720 (0.720)	Loss 0.2416 (0.2416)	Acc@1 97.803 (97.803)	Acc@5 100.000 (100.000)

Epoch: [144 | 180] LR: 0.040000
Epoch: [144][0/25]	Time 0.755 (0.755)	Data 0.656 (0.656)	Loss 0.2275 (0.2275)	Acc@1 98.145 (98.145)	Acc@5 99.951 (99.951)

Epoch: [145 | 180] LR: 0.040000
Epoch: [145][0/25]	Time 0.685 (0.685)	Data 0.685 (0.685)	Loss 0.2361 (0.2361)	Acc@1 97.852 (97.852)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(15, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [146 | 180] LR: 0.040000
Epoch: [146][0/25]	Time 0.682 (0.682)	Data 0.693 (0.693)	Loss 0.2269 (0.2269)	Acc@1 98.535 (98.535)	Acc@5 100.000 (100.000)

Epoch: [147 | 180] LR: 0.040000
Epoch: [147][0/25]	Time 0.737 (0.737)	Data 0.691 (0.691)	Loss 0.2026 (0.2026)	Acc@1 99.219 (99.219)	Acc@5 99.951 (99.951)

Epoch: [148 | 180] LR: 0.040000
Epoch: [148][0/25]	Time 0.735 (0.735)	Data 0.661 (0.661)	Loss 0.2205 (0.2205)	Acc@1 98.242 (98.242)	Acc@5 99.951 (99.951)

Epoch: [149 | 180] LR: 0.040000
Epoch: [149][0/25]	Time 0.719 (0.719)	Data 0.689 (0.689)	Loss 0.2110 (0.2110)	Acc@1 98.779 (98.779)	Acc@5 100.000 (100.000)

Epoch: [150 | 180] LR: 0.000400
Epoch: [150][0/25]	Time 0.764 (0.764)	Data 0.670 (0.670)	Loss 0.2218 (0.2218)	Acc@1 98.047 (98.047)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(15, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [151 | 180] LR: 0.000400
Epoch: [151][0/25]	Time 0.697 (0.697)	Data 0.633 (0.633)	Loss 0.2132 (0.2132)	Acc@1 98.486 (98.486)	Acc@5 100.000 (100.000)

Epoch: [152 | 180] LR: 0.000400
Epoch: [152][0/25]	Time 0.651 (0.651)	Data 0.704 (0.704)	Loss 0.2242 (0.2242)	Acc@1 98.291 (98.291)	Acc@5 99.951 (99.951)

Epoch: [153 | 180] LR: 0.000400
Epoch: [153][0/25]	Time 0.654 (0.654)	Data 0.641 (0.641)	Loss 0.2080 (0.2080)	Acc@1 98.877 (98.877)	Acc@5 100.000 (100.000)

Epoch: [154 | 180] LR: 0.000400
Epoch: [154][0/25]	Time 0.645 (0.645)	Data 0.648 (0.648)	Loss 0.2038 (0.2038)	Acc@1 99.268 (99.268)	Acc@5 100.000 (100.000)

Epoch: [155 | 180] LR: 0.000400
Epoch: [155][0/25]	Time 0.618 (0.618)	Data 0.639 (0.639)	Loss 0.2010 (0.2010)	Acc@1 99.023 (99.023)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(15, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [156 | 180] LR: 0.000400
Epoch: [156][0/25]	Time 0.619 (0.619)	Data 0.618 (0.618)	Loss 0.2040 (0.2040)	Acc@1 98.877 (98.877)	Acc@5 100.000 (100.000)

Epoch: [157 | 180] LR: 0.000400
Epoch: [157][0/25]	Time 0.668 (0.668)	Data 0.645 (0.645)	Loss 0.1964 (0.1964)	Acc@1 99.072 (99.072)	Acc@5 100.000 (100.000)

Epoch: [158 | 180] LR: 0.000400
Epoch: [158][0/25]	Time 0.637 (0.637)	Data 0.688 (0.688)	Loss 0.1989 (0.1989)	Acc@1 99.121 (99.121)	Acc@5 100.000 (100.000)

Epoch: [159 | 180] LR: 0.000400
Epoch: [159][0/25]	Time 0.660 (0.660)	Data 0.618 (0.618)	Loss 0.1963 (0.1963)	Acc@1 99.170 (99.170)	Acc@5 100.000 (100.000)

Epoch: [160 | 180] LR: 0.000400
Epoch: [160][0/25]	Time 0.675 (0.675)	Data 0.643 (0.643)	Loss 0.1951 (0.1951)	Acc@1 99.219 (99.219)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(15, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [161 | 180] LR: 0.000400
Epoch: [161][0/25]	Time 0.675 (0.675)	Data 0.623 (0.623)	Loss 0.1972 (0.1972)	Acc@1 99.219 (99.219)	Acc@5 100.000 (100.000)

Epoch: [162 | 180] LR: 0.000400
Epoch: [162][0/25]	Time 0.693 (0.693)	Data 0.650 (0.650)	Loss 0.1944 (0.1944)	Acc@1 99.512 (99.512)	Acc@5 100.000 (100.000)

Epoch: [163 | 180] LR: 0.000400
Epoch: [163][0/25]	Time 0.638 (0.638)	Data 0.674 (0.674)	Loss 0.1994 (0.1994)	Acc@1 99.023 (99.023)	Acc@5 100.000 (100.000)

Epoch: [164 | 180] LR: 0.000400
Epoch: [164][0/25]	Time 0.654 (0.654)	Data 0.632 (0.632)	Loss 0.2015 (0.2015)	Acc@1 99.219 (99.219)	Acc@5 100.000 (100.000)

Epoch: [165 | 180] LR: 0.000400
Epoch: [165][0/25]	Time 0.632 (0.632)	Data 0.660 (0.660)	Loss 0.1899 (0.1899)	Acc@1 99.512 (99.512)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(15, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [166 | 180] LR: 0.000400
Epoch: [166][0/25]	Time 0.652 (0.652)	Data 0.605 (0.605)	Loss 0.1909 (0.1909)	Acc@1 99.414 (99.414)	Acc@5 100.000 (100.000)

Epoch: [167 | 180] LR: 0.000400
Epoch: [167][0/25]	Time 0.635 (0.635)	Data 0.649 (0.649)	Loss 0.1989 (0.1989)	Acc@1 98.828 (98.828)	Acc@5 100.000 (100.000)

Epoch: [168 | 180] LR: 0.000400
Epoch: [168][0/25]	Time 0.641 (0.641)	Data 0.618 (0.618)	Loss 0.1949 (0.1949)	Acc@1 99.072 (99.072)	Acc@5 100.000 (100.000)

Epoch: [169 | 180] LR: 0.000400
Epoch: [169][0/25]	Time 0.632 (0.632)	Data 0.605 (0.605)	Loss 0.1864 (0.1864)	Acc@1 99.707 (99.707)	Acc@5 100.000 (100.000)

Epoch: [170 | 180] LR: 0.000400
Epoch: [170][0/25]	Time 0.619 (0.619)	Data 0.620 (0.620)	Loss 0.1905 (0.1905)	Acc@1 99.561 (99.561)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(15, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [171 | 180] LR: 0.000400
Epoch: [171][0/25]	Time 0.665 (0.665)	Data 0.660 (0.660)	Loss 0.1912 (0.1912)	Acc@1 99.316 (99.316)	Acc@5 100.000 (100.000)

Epoch: [172 | 180] LR: 0.000400
Epoch: [172][0/25]	Time 0.651 (0.651)	Data 0.624 (0.624)	Loss 0.1904 (0.1904)	Acc@1 99.268 (99.268)	Acc@5 100.000 (100.000)

Epoch: [173 | 180] LR: 0.000400
Epoch: [173][0/25]	Time 0.661 (0.661)	Data 0.657 (0.657)	Loss 0.1892 (0.1892)	Acc@1 99.365 (99.365)	Acc@5 100.000 (100.000)

Epoch: [174 | 180] LR: 0.000400
Epoch: [174][0/25]	Time 0.643 (0.643)	Data 0.615 (0.615)	Loss 0.1814 (0.1814)	Acc@1 99.854 (99.854)	Acc@5 100.000 (100.000)

Epoch: [175 | 180] LR: 0.000400
Epoch: [175][0/25]	Time 0.587 (0.587)	Data 0.616 (0.616)	Loss 0.1891 (0.1891)	Acc@1 99.512 (99.512)	Acc@5 100.000 (100.000)
[INFO] Force the sparse filters to zero...

Same Node:  [['module.conv2.weight', 'module.conv3.weight'], ['module.conv4.weight', 'module.conv5.weight'], ['module.conv6.weight', 'module.conv7.weight'], ['module.conv8.weight', 'module.conv9.weight'], ['module.conv10.weight', 'module.conv11.weight'], ['module.conv12.weight', 'module.conv13.weight'], ['module.conv15.weight', 'module.conv16.weight'], ['module.conv17.weight', 'module.conv18.weight'], ['module.conv19.weight', 'module.conv20.weight'], ['module.conv21.weight', 'module.conv22.weight'], ['module.conv23.weight', 'module.conv24.weight'], ['module.conv26.weight', 'module.conv27.weight'], ['module.conv28.weight', 'module.conv29.weight'], ['module.conv30.weight', 'module.conv31.weight'], ['module.conv32.weight', 'module.conv33.weight']]
[INFO] Squeezing the sparse model to dense one...
Archnums: [[2, 2, 2, 2, 2], [3, 2, 2, 2, 2], [3, 2, 2, 2, 2]]
['module.conv1.weight', 'module.bn1.weight', 'module.bn1.bias', 'module.conv2.weight', 'module.bn2.weight', 'module.bn2.bias', 'module.conv3.weight', 'module.bn3.weight', 'module.bn3.bias', 'module.conv4.weight', 'module.bn4.weight', 'module.bn4.bias', 'module.conv5.weight', 'module.bn5.weight', 'module.bn5.bias', 'module.conv6.weight', 'module.bn6.weight', 'module.bn6.bias', 'module.conv7.weight', 'module.bn7.weight', 'module.bn7.bias', 'module.conv8.weight', 'module.bn8.weight', 'module.bn8.bias', 'module.conv9.weight', 'module.bn9.weight', 'module.bn9.bias', 'module.conv10.weight', 'module.bn10.weight', 'module.bn10.bias', 'module.conv11.weight', 'module.bn11.weight', 'module.bn11.bias', 'module.conv12.weight', 'module.bn12.weight', 'module.bn12.bias', 'module.conv13.weight', 'module.bn13.weight', 'module.bn13.bias', 'module.conv14.weight', 'module.bn14.weight', 'module.bn14.bias', 'module.conv15.weight', 'module.bn15.weight', 'module.bn15.bias', 'module.conv16.weight', 'module.bn16.weight', 'module.bn16.bias', 'module.conv17.weight', 'module.bn17.weight', 'module.bn17.bias', 'module.conv18.weight', 'module.bn18.weight', 'module.bn18.bias', 'module.conv19.weight', 'module.bn19.weight', 'module.bn19.bias', 'module.conv20.weight', 'module.bn20.weight', 'module.bn20.bias', 'module.conv21.weight', 'module.bn21.weight', 'module.bn21.bias', 'module.conv22.weight', 'module.bn22.weight', 'module.bn22.bias', 'module.conv23.weight', 'module.bn23.weight', 'module.bn23.bias', 'module.conv24.weight', 'module.bn24.weight', 'module.bn24.bias', 'module.conv25.weight', 'module.bn25.weight', 'module.bn25.bias', 'module.conv26.weight', 'module.bn26.weight', 'module.bn26.bias', 'module.conv27.weight', 'module.bn27.weight', 'module.bn27.bias', 'module.conv28.weight', 'module.bn28.weight', 'module.bn28.bias', 'module.conv29.weight', 'module.bn29.weight', 'module.bn29.bias', 'module.conv30.weight', 'module.bn30.weight', 'module.bn30.bias', 'module.conv31.weight', 'module.bn31.weight', 'module.bn31.bias', 'module.conv32.weight', 'module.bn32.weight', 'module.bn32.bias', 'module.conv33.weight', 'module.bn33.weight', 'module.bn33.bias', 'module.fc34.weight', 'module.fc34.bias']

new Model:  N2N(
  (module_list): ModuleList(
    (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (5): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (7): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (9): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (13): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (14): Conv2d(16, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (17): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (18): Conv2d(16, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (19): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (20): Conv2d(15, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (23): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (24): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (27): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (28): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (29): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (30): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): Conv2d(32, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (33): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (34): Conv2d(28, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): Conv2d(32, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (37): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (38): Conv2d(22, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (39): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (40): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (43): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (44): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (45): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (46): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (47): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (48): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (49): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (50): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (51): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (52): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (53): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (54): Conv2d(64, 62, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (55): BatchNorm2d(62, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (56): Conv2d(62, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (57): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (58): Conv2d(64, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (59): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (60): Conv2d(59, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (61): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (62): Conv2d(64, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (63): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (64): Conv2d(15, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (65): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (66): AdaptiveAvgPool2d(output_size=(1, 1))
    (67): Linear(in_features=64, out_features=10, bias=True)
  )
  (relu): ReLU(inplace=True)
)

Epoch: [176 | 180] LR: 0.000400
Epoch: [176][0/25]	Time 0.630 (0.630)	Data 0.623 (0.623)	Loss 0.1951 (0.1951)	Acc@1 99.463 (99.463)	Acc@5 100.000 (100.000)

Epoch: [177 | 180] LR: 0.000400
Epoch: [177][0/25]	Time 0.620 (0.620)	Data 0.648 (0.648)	Loss 0.1932 (0.1932)	Acc@1 99.414 (99.414)	Acc@5 100.000 (100.000)

Epoch: [178 | 180] LR: 0.000400
Epoch: [178][0/25]	Time 0.653 (0.653)	Data 0.726 (0.726)	Loss 0.1910 (0.1910)	Acc@1 99.268 (99.268)	Acc@5 100.000 (100.000)

Epoch: [179 | 180] LR: 0.000400
Epoch: [179][0/25]	Time 0.680 (0.680)	Data 0.605 (0.605)	Loss 0.1913 (0.1913)	Acc@1 99.316 (99.316)	Acc@5 100.000 (100.000)

Epoch: [180 | 180] LR: 0.000400
Epoch: [180][0/25]	Time 0.677 (0.677)	Data 0.645 (0.645)	Loss 0.1876 (0.1876)	Acc@1 99.609 (99.609)	Acc@5 100.000 (100.000)

  2048
  92.59
 16.254s  